/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./frontend/node_modules/luxon/build/cjs-browser/luxon.js":
/*!****************************************************************!*\
  !*** ./frontend/node_modules/luxon/build/cjs-browser/luxon.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _createForOfIteratorHelperLoose(o) {
  var i = 0;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () {
      if (i >= o.length) return {
        done: true
      };
      return {
        done: false,
        value: o[i++]
      };
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  i = o[Symbol.iterator]();
  return i.next.bind(i);
}

// these aren't really private, but nor are they really useful to document

/**
 * @private
 */
var LuxonError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(LuxonError, _Error);

  function LuxonError() {
    return _Error.apply(this, arguments) || this;
  }

  return LuxonError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
/**
 * @private
 */


var InvalidDateTimeError = /*#__PURE__*/function (_LuxonError) {
  _inheritsLoose(InvalidDateTimeError, _LuxonError);

  function InvalidDateTimeError(reason) {
    return _LuxonError.call(this, "Invalid DateTime: " + reason.toMessage()) || this;
  }

  return InvalidDateTimeError;
}(LuxonError);
/**
 * @private
 */

var InvalidIntervalError = /*#__PURE__*/function (_LuxonError2) {
  _inheritsLoose(InvalidIntervalError, _LuxonError2);

  function InvalidIntervalError(reason) {
    return _LuxonError2.call(this, "Invalid Interval: " + reason.toMessage()) || this;
  }

  return InvalidIntervalError;
}(LuxonError);
/**
 * @private
 */

var InvalidDurationError = /*#__PURE__*/function (_LuxonError3) {
  _inheritsLoose(InvalidDurationError, _LuxonError3);

  function InvalidDurationError(reason) {
    return _LuxonError3.call(this, "Invalid Duration: " + reason.toMessage()) || this;
  }

  return InvalidDurationError;
}(LuxonError);
/**
 * @private
 */

var ConflictingSpecificationError = /*#__PURE__*/function (_LuxonError4) {
  _inheritsLoose(ConflictingSpecificationError, _LuxonError4);

  function ConflictingSpecificationError() {
    return _LuxonError4.apply(this, arguments) || this;
  }

  return ConflictingSpecificationError;
}(LuxonError);
/**
 * @private
 */

var InvalidUnitError = /*#__PURE__*/function (_LuxonError5) {
  _inheritsLoose(InvalidUnitError, _LuxonError5);

  function InvalidUnitError(unit) {
    return _LuxonError5.call(this, "Invalid unit " + unit) || this;
  }

  return InvalidUnitError;
}(LuxonError);
/**
 * @private
 */

var InvalidArgumentError = /*#__PURE__*/function (_LuxonError6) {
  _inheritsLoose(InvalidArgumentError, _LuxonError6);

  function InvalidArgumentError() {
    return _LuxonError6.apply(this, arguments) || this;
  }

  return InvalidArgumentError;
}(LuxonError);
/**
 * @private
 */

var ZoneIsAbstractError = /*#__PURE__*/function (_LuxonError7) {
  _inheritsLoose(ZoneIsAbstractError, _LuxonError7);

  function ZoneIsAbstractError() {
    return _LuxonError7.call(this, "Zone is an abstract class") || this;
  }

  return ZoneIsAbstractError;
}(LuxonError);

/**
 * @private
 */
var n = "numeric",
    s = "short",
    l = "long";
var DATE_SHORT = {
  year: n,
  month: n,
  day: n
};
var DATE_MED = {
  year: n,
  month: s,
  day: n
};
var DATE_MED_WITH_WEEKDAY = {
  year: n,
  month: s,
  day: n,
  weekday: s
};
var DATE_FULL = {
  year: n,
  month: l,
  day: n
};
var DATE_HUGE = {
  year: n,
  month: l,
  day: n,
  weekday: l
};
var TIME_SIMPLE = {
  hour: n,
  minute: n
};
var TIME_WITH_SECONDS = {
  hour: n,
  minute: n,
  second: n
};
var TIME_WITH_SHORT_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  timeZoneName: s
};
var TIME_WITH_LONG_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  timeZoneName: l
};
var TIME_24_SIMPLE = {
  hour: n,
  minute: n,
  hour12: false
};
/**
 * {@link toLocaleString}; format like '09:30:23', always 24-hour.
 */

var TIME_24_WITH_SECONDS = {
  hour: n,
  minute: n,
  second: n,
  hour12: false
};
/**
 * {@link toLocaleString}; format like '09:30:23 EDT', always 24-hour.
 */

var TIME_24_WITH_SHORT_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  hour12: false,
  timeZoneName: s
};
/**
 * {@link toLocaleString}; format like '09:30:23 Eastern Daylight Time', always 24-hour.
 */

var TIME_24_WITH_LONG_OFFSET = {
  hour: n,
  minute: n,
  second: n,
  hour12: false,
  timeZoneName: l
};
/**
 * {@link toLocaleString}; format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
 */

var DATETIME_SHORT = {
  year: n,
  month: n,
  day: n,
  hour: n,
  minute: n
};
/**
 * {@link toLocaleString}; format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
 */

var DATETIME_SHORT_WITH_SECONDS = {
  year: n,
  month: n,
  day: n,
  hour: n,
  minute: n,
  second: n
};
var DATETIME_MED = {
  year: n,
  month: s,
  day: n,
  hour: n,
  minute: n
};
var DATETIME_MED_WITH_SECONDS = {
  year: n,
  month: s,
  day: n,
  hour: n,
  minute: n,
  second: n
};
var DATETIME_MED_WITH_WEEKDAY = {
  year: n,
  month: s,
  day: n,
  weekday: s,
  hour: n,
  minute: n
};
var DATETIME_FULL = {
  year: n,
  month: l,
  day: n,
  hour: n,
  minute: n,
  timeZoneName: s
};
var DATETIME_FULL_WITH_SECONDS = {
  year: n,
  month: l,
  day: n,
  hour: n,
  minute: n,
  second: n,
  timeZoneName: s
};
var DATETIME_HUGE = {
  year: n,
  month: l,
  day: n,
  weekday: l,
  hour: n,
  minute: n,
  timeZoneName: l
};
var DATETIME_HUGE_WITH_SECONDS = {
  year: n,
  month: l,
  day: n,
  weekday: l,
  hour: n,
  minute: n,
  second: n,
  timeZoneName: l
};

/*
  This is just a junk drawer, containing anything used across multiple classes.
  Because Luxon is small(ish), this should stay small and we won't worry about splitting
  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.
*/
/**
 * @private
 */
// TYPES

function isUndefined(o) {
  return typeof o === "undefined";
}
function isNumber(o) {
  return typeof o === "number";
}
function isInteger(o) {
  return typeof o === "number" && o % 1 === 0;
}
function isString(o) {
  return typeof o === "string";
}
function isDate(o) {
  return Object.prototype.toString.call(o) === "[object Date]";
} // CAPABILITIES

function hasIntl() {
  try {
    return typeof Intl !== "undefined" && Intl.DateTimeFormat;
  } catch (e) {
    return false;
  }
}
function hasFormatToParts() {
  return !isUndefined(Intl.DateTimeFormat.prototype.formatToParts);
}
function hasRelative() {
  try {
    return typeof Intl !== "undefined" && !!Intl.RelativeTimeFormat;
  } catch (e) {
    return false;
  }
} // OBJECTS AND ARRAYS

function maybeArray(thing) {
  return Array.isArray(thing) ? thing : [thing];
}
function bestBy(arr, by, compare) {
  if (arr.length === 0) {
    return undefined;
  }

  return arr.reduce(function (best, next) {
    var pair = [by(next), next];

    if (!best) {
      return pair;
    } else if (compare(best[0], pair[0]) === best[0]) {
      return best;
    } else {
      return pair;
    }
  }, null)[1];
}
function pick(obj, keys) {
  return keys.reduce(function (a, k) {
    a[k] = obj[k];
    return a;
  }, {});
}
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
} // NUMBERS AND STRINGS

function integerBetween(thing, bottom, top) {
  return isInteger(thing) && thing >= bottom && thing <= top;
} // x % n but takes the sign of n instead of x

function floorMod(x, n) {
  return x - n * Math.floor(x / n);
}
function padStart(input, n) {
  if (n === void 0) {
    n = 2;
  }

  var minus = input < 0 ? "-" : "";
  var target = minus ? input * -1 : input;
  var result;

  if (target.toString().length < n) {
    result = ("0".repeat(n) + target).slice(-n);
  } else {
    result = target.toString();
  }

  return "" + minus + result;
}
function parseInteger(string) {
  if (isUndefined(string) || string === null || string === "") {
    return undefined;
  } else {
    return parseInt(string, 10);
  }
}
function parseMillis(fraction) {
  // Return undefined (instead of 0) in these cases, where fraction is not set
  if (isUndefined(fraction) || fraction === null || fraction === "") {
    return undefined;
  } else {
    var f = parseFloat("0." + fraction) * 1000;
    return Math.floor(f);
  }
}
function roundTo(number, digits, towardZero) {
  if (towardZero === void 0) {
    towardZero = false;
  }

  var factor = Math.pow(10, digits),
      rounder = towardZero ? Math.trunc : Math.round;
  return rounder(number * factor) / factor;
} // DATE BASICS

function isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
function daysInMonth(year, month) {
  var modMonth = floorMod(month - 1, 12) + 1,
      modYear = year + (month - modMonth) / 12;

  if (modMonth === 2) {
    return isLeapYear(modYear) ? 29 : 28;
  } else {
    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];
  }
} // covert a calendar object to a local timestamp (epoch, but with the offset baked in)

function objToLocalTS(obj) {
  var d = Date.UTC(obj.year, obj.month - 1, obj.day, obj.hour, obj.minute, obj.second, obj.millisecond); // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that

  if (obj.year < 100 && obj.year >= 0) {
    d = new Date(d);
    d.setUTCFullYear(d.getUTCFullYear() - 1900);
  }

  return +d;
}
function weeksInWeekYear(weekYear) {
  var p1 = (weekYear + Math.floor(weekYear / 4) - Math.floor(weekYear / 100) + Math.floor(weekYear / 400)) % 7,
      last = weekYear - 1,
      p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;
  return p1 === 4 || p2 === 3 ? 53 : 52;
}
function untruncateYear(year) {
  if (year > 99) {
    return year;
  } else return year > 60 ? 1900 + year : 2000 + year;
} // PARSING

function parseZoneInfo(ts, offsetFormat, locale, timeZone) {
  if (timeZone === void 0) {
    timeZone = null;
  }

  var date = new Date(ts),
      intlOpts = {
    hour12: false,
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit"
  };

  if (timeZone) {
    intlOpts.timeZone = timeZone;
  }

  var modified = Object.assign({
    timeZoneName: offsetFormat
  }, intlOpts),
      intl = hasIntl();

  if (intl && hasFormatToParts()) {
    var parsed = new Intl.DateTimeFormat(locale, modified).formatToParts(date).find(function (m) {
      return m.type.toLowerCase() === "timezonename";
    });
    return parsed ? parsed.value : null;
  } else if (intl) {
    // this probably doesn't work for all locales
    var without = new Intl.DateTimeFormat(locale, intlOpts).format(date),
        included = new Intl.DateTimeFormat(locale, modified).format(date),
        diffed = included.substring(without.length),
        trimmed = diffed.replace(/^[, \u200e]+/, "");
    return trimmed;
  } else {
    return null;
  }
} // signedOffset('-5', '30') -> -330

function signedOffset(offHourStr, offMinuteStr) {
  var offHour = parseInt(offHourStr, 10); // don't || this because we want to preserve -0

  if (Number.isNaN(offHour)) {
    offHour = 0;
  }

  var offMin = parseInt(offMinuteStr, 10) || 0,
      offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;
  return offHour * 60 + offMinSigned;
} // COERCION

function asNumber(value) {
  var numericValue = Number(value);
  if (typeof value === "boolean" || value === "" || Number.isNaN(numericValue)) throw new InvalidArgumentError("Invalid unit value " + value);
  return numericValue;
}
function normalizeObject(obj, normalizer, nonUnitKeys) {
  var normalized = {};

  for (var u in obj) {
    if (hasOwnProperty(obj, u)) {
      if (nonUnitKeys.indexOf(u) >= 0) continue;
      var v = obj[u];
      if (v === undefined || v === null) continue;
      normalized[normalizer(u)] = asNumber(v);
    }
  }

  return normalized;
}
function formatOffset(offset, format) {
  var hours = Math.trunc(Math.abs(offset / 60)),
      minutes = Math.trunc(Math.abs(offset % 60)),
      sign = offset >= 0 ? "+" : "-";

  switch (format) {
    case "short":
      return "" + sign + padStart(hours, 2) + ":" + padStart(minutes, 2);

    case "narrow":
      return "" + sign + hours + (minutes > 0 ? ":" + minutes : "");

    case "techie":
      return "" + sign + padStart(hours, 2) + padStart(minutes, 2);

    default:
      throw new RangeError("Value format " + format + " is out of range for property format");
  }
}
function timeObject(obj) {
  return pick(obj, ["hour", "minute", "second", "millisecond"]);
}
var ianaRegex = /[A-Za-z_+-]{1,256}(:?\/[A-Za-z_+-]{1,256}(\/[A-Za-z_+-]{1,256})?)?/;

function stringify(obj) {
  return JSON.stringify(obj, Object.keys(obj).sort());
}
/**
 * @private
 */


var monthsLong = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
var monthsShort = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
var monthsNarrow = ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"];
function months(length) {
  switch (length) {
    case "narrow":
      return [].concat(monthsNarrow);

    case "short":
      return [].concat(monthsShort);

    case "long":
      return [].concat(monthsLong);

    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];

    case "2-digit":
      return ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];

    default:
      return null;
  }
}
var weekdaysLong = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
var weekdaysShort = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
var weekdaysNarrow = ["M", "T", "W", "T", "F", "S", "S"];
function weekdays(length) {
  switch (length) {
    case "narrow":
      return [].concat(weekdaysNarrow);

    case "short":
      return [].concat(weekdaysShort);

    case "long":
      return [].concat(weekdaysLong);

    case "numeric":
      return ["1", "2", "3", "4", "5", "6", "7"];

    default:
      return null;
  }
}
var meridiems = ["AM", "PM"];
var erasLong = ["Before Christ", "Anno Domini"];
var erasShort = ["BC", "AD"];
var erasNarrow = ["B", "A"];
function eras(length) {
  switch (length) {
    case "narrow":
      return [].concat(erasNarrow);

    case "short":
      return [].concat(erasShort);

    case "long":
      return [].concat(erasLong);

    default:
      return null;
  }
}
function meridiemForDateTime(dt) {
  return meridiems[dt.hour < 12 ? 0 : 1];
}
function weekdayForDateTime(dt, length) {
  return weekdays(length)[dt.weekday - 1];
}
function monthForDateTime(dt, length) {
  return months(length)[dt.month - 1];
}
function eraForDateTime(dt, length) {
  return eras(length)[dt.year < 0 ? 0 : 1];
}
function formatRelativeTime(unit, count, numeric, narrow) {
  if (numeric === void 0) {
    numeric = "always";
  }

  if (narrow === void 0) {
    narrow = false;
  }

  var units = {
    years: ["year", "yr."],
    quarters: ["quarter", "qtr."],
    months: ["month", "mo."],
    weeks: ["week", "wk."],
    days: ["day", "day", "days"],
    hours: ["hour", "hr."],
    minutes: ["minute", "min."],
    seconds: ["second", "sec."]
  };
  var lastable = ["hours", "minutes", "seconds"].indexOf(unit) === -1;

  if (numeric === "auto" && lastable) {
    var isDay = unit === "days";

    switch (count) {
      case 1:
        return isDay ? "tomorrow" : "next " + units[unit][0];

      case -1:
        return isDay ? "yesterday" : "last " + units[unit][0];

      case 0:
        return isDay ? "today" : "this " + units[unit][0];

    }
  }

  var isInPast = Object.is(count, -0) || count < 0,
      fmtValue = Math.abs(count),
      singular = fmtValue === 1,
      lilUnits = units[unit],
      fmtUnit = narrow ? singular ? lilUnits[1] : lilUnits[2] || lilUnits[1] : singular ? units[unit][0] : unit;
  return isInPast ? fmtValue + " " + fmtUnit + " ago" : "in " + fmtValue + " " + fmtUnit;
}
function formatString(knownFormat) {
  // these all have the offsets removed because we don't have access to them
  // without all the intl stuff this is backfilling
  var filtered = pick(knownFormat, ["weekday", "era", "year", "month", "day", "hour", "minute", "second", "timeZoneName", "hour12"]),
      key = stringify(filtered),
      dateTimeHuge = "EEEE, LLLL d, yyyy, h:mm a";

  switch (key) {
    case stringify(DATE_SHORT):
      return "M/d/yyyy";

    case stringify(DATE_MED):
      return "LLL d, yyyy";

    case stringify(DATE_MED_WITH_WEEKDAY):
      return "EEE, LLL d, yyyy";

    case stringify(DATE_FULL):
      return "LLLL d, yyyy";

    case stringify(DATE_HUGE):
      return "EEEE, LLLL d, yyyy";

    case stringify(TIME_SIMPLE):
      return "h:mm a";

    case stringify(TIME_WITH_SECONDS):
      return "h:mm:ss a";

    case stringify(TIME_WITH_SHORT_OFFSET):
      return "h:mm a";

    case stringify(TIME_WITH_LONG_OFFSET):
      return "h:mm a";

    case stringify(TIME_24_SIMPLE):
      return "HH:mm";

    case stringify(TIME_24_WITH_SECONDS):
      return "HH:mm:ss";

    case stringify(TIME_24_WITH_SHORT_OFFSET):
      return "HH:mm";

    case stringify(TIME_24_WITH_LONG_OFFSET):
      return "HH:mm";

    case stringify(DATETIME_SHORT):
      return "M/d/yyyy, h:mm a";

    case stringify(DATETIME_MED):
      return "LLL d, yyyy, h:mm a";

    case stringify(DATETIME_FULL):
      return "LLLL d, yyyy, h:mm a";

    case stringify(DATETIME_HUGE):
      return dateTimeHuge;

    case stringify(DATETIME_SHORT_WITH_SECONDS):
      return "M/d/yyyy, h:mm:ss a";

    case stringify(DATETIME_MED_WITH_SECONDS):
      return "LLL d, yyyy, h:mm:ss a";

    case stringify(DATETIME_MED_WITH_WEEKDAY):
      return "EEE, d LLL yyyy, h:mm a";

    case stringify(DATETIME_FULL_WITH_SECONDS):
      return "LLLL d, yyyy, h:mm:ss a";

    case stringify(DATETIME_HUGE_WITH_SECONDS):
      return "EEEE, LLLL d, yyyy, h:mm:ss a";

    default:
      return dateTimeHuge;
  }
}

function stringifyTokens(splits, tokenToString) {
  var s = "";

  for (var _iterator = _createForOfIteratorHelperLoose(splits), _step; !(_step = _iterator()).done;) {
    var token = _step.value;

    if (token.literal) {
      s += token.val;
    } else {
      s += tokenToString(token.val);
    }
  }

  return s;
}

var _macroTokenToFormatOpts = {
  D: DATE_SHORT,
  DD: DATE_MED,
  DDD: DATE_FULL,
  DDDD: DATE_HUGE,
  t: TIME_SIMPLE,
  tt: TIME_WITH_SECONDS,
  ttt: TIME_WITH_SHORT_OFFSET,
  tttt: TIME_WITH_LONG_OFFSET,
  T: TIME_24_SIMPLE,
  TT: TIME_24_WITH_SECONDS,
  TTT: TIME_24_WITH_SHORT_OFFSET,
  TTTT: TIME_24_WITH_LONG_OFFSET,
  f: DATETIME_SHORT,
  ff: DATETIME_MED,
  fff: DATETIME_FULL,
  ffff: DATETIME_HUGE,
  F: DATETIME_SHORT_WITH_SECONDS,
  FF: DATETIME_MED_WITH_SECONDS,
  FFF: DATETIME_FULL_WITH_SECONDS,
  FFFF: DATETIME_HUGE_WITH_SECONDS
};
/**
 * @private
 */

var Formatter = /*#__PURE__*/function () {
  Formatter.create = function create(locale, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return new Formatter(locale, opts);
  };

  Formatter.parseFormat = function parseFormat(fmt) {
    var current = null,
        currentFull = "",
        bracketed = false;
    var splits = [];

    for (var i = 0; i < fmt.length; i++) {
      var c = fmt.charAt(i);

      if (c === "'") {
        if (currentFull.length > 0) {
          splits.push({
            literal: bracketed,
            val: currentFull
          });
        }

        current = null;
        currentFull = "";
        bracketed = !bracketed;
      } else if (bracketed) {
        currentFull += c;
      } else if (c === current) {
        currentFull += c;
      } else {
        if (currentFull.length > 0) {
          splits.push({
            literal: false,
            val: currentFull
          });
        }

        currentFull = c;
        current = c;
      }
    }

    if (currentFull.length > 0) {
      splits.push({
        literal: bracketed,
        val: currentFull
      });
    }

    return splits;
  };

  Formatter.macroTokenToFormatOpts = function macroTokenToFormatOpts(token) {
    return _macroTokenToFormatOpts[token];
  };

  function Formatter(locale, formatOpts) {
    this.opts = formatOpts;
    this.loc = locale;
    this.systemLoc = null;
  }

  var _proto = Formatter.prototype;

  _proto.formatWithSystemDefault = function formatWithSystemDefault(dt, opts) {
    if (this.systemLoc === null) {
      this.systemLoc = this.loc.redefaultToSystem();
    }

    var df = this.systemLoc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.format();
  };

  _proto.formatDateTime = function formatDateTime(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.format();
  };

  _proto.formatDateTimeParts = function formatDateTimeParts(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.formatToParts();
  };

  _proto.resolvedOptions = function resolvedOptions(dt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var df = this.loc.dtFormatter(dt, Object.assign({}, this.opts, opts));
    return df.resolvedOptions();
  };

  _proto.num = function num(n, p) {
    if (p === void 0) {
      p = 0;
    }

    // we get some perf out of doing this here, annoyingly
    if (this.opts.forceSimple) {
      return padStart(n, p);
    }

    var opts = Object.assign({}, this.opts);

    if (p > 0) {
      opts.padTo = p;
    }

    return this.loc.numberFormatter(opts).format(n);
  };

  _proto.formatDateTimeFromString = function formatDateTimeFromString(dt, fmt) {
    var _this = this;

    var knownEnglish = this.loc.listingMode() === "en",
        useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== "gregory" && hasFormatToParts(),
        string = function string(opts, extract) {
      return _this.loc.extract(dt, opts, extract);
    },
        formatOffset = function formatOffset(opts) {
      if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {
        return "Z";
      }

      return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : "";
    },
        meridiem = function meridiem() {
      return knownEnglish ? meridiemForDateTime(dt) : string({
        hour: "numeric",
        hour12: true
      }, "dayperiod");
    },
        month = function month(length, standalone) {
      return knownEnglish ? monthForDateTime(dt, length) : string(standalone ? {
        month: length
      } : {
        month: length,
        day: "numeric"
      }, "month");
    },
        weekday = function weekday(length, standalone) {
      return knownEnglish ? weekdayForDateTime(dt, length) : string(standalone ? {
        weekday: length
      } : {
        weekday: length,
        month: "long",
        day: "numeric"
      }, "weekday");
    },
        maybeMacro = function maybeMacro(token) {
      var formatOpts = Formatter.macroTokenToFormatOpts(token);

      if (formatOpts) {
        return _this.formatWithSystemDefault(dt, formatOpts);
      } else {
        return token;
      }
    },
        era = function era(length) {
      return knownEnglish ? eraForDateTime(dt, length) : string({
        era: length
      }, "era");
    },
        tokenToString = function tokenToString(token) {
      // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles
      switch (token) {
        // ms
        case "S":
          return _this.num(dt.millisecond);

        case "u": // falls through

        case "SSS":
          return _this.num(dt.millisecond, 3);
        // seconds

        case "s":
          return _this.num(dt.second);

        case "ss":
          return _this.num(dt.second, 2);
        // minutes

        case "m":
          return _this.num(dt.minute);

        case "mm":
          return _this.num(dt.minute, 2);
        // hours

        case "h":
          return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);

        case "hh":
          return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);

        case "H":
          return _this.num(dt.hour);

        case "HH":
          return _this.num(dt.hour, 2);
        // offset

        case "Z":
          // like +6
          return formatOffset({
            format: "narrow",
            allowZ: _this.opts.allowZ
          });

        case "ZZ":
          // like +06:00
          return formatOffset({
            format: "short",
            allowZ: _this.opts.allowZ
          });

        case "ZZZ":
          // like +0600
          return formatOffset({
            format: "techie",
            allowZ: _this.opts.allowZ
          });

        case "ZZZZ":
          // like EST
          return dt.zone.offsetName(dt.ts, {
            format: "short",
            locale: _this.loc.locale
          });

        case "ZZZZZ":
          // like Eastern Standard Time
          return dt.zone.offsetName(dt.ts, {
            format: "long",
            locale: _this.loc.locale
          });
        // zone

        case "z":
          // like America/New_York
          return dt.zoneName;
        // meridiems

        case "a":
          return meridiem();
        // dates

        case "d":
          return useDateTimeFormatter ? string({
            day: "numeric"
          }, "day") : _this.num(dt.day);

        case "dd":
          return useDateTimeFormatter ? string({
            day: "2-digit"
          }, "day") : _this.num(dt.day, 2);
        // weekdays - standalone

        case "c":
          // like 1
          return _this.num(dt.weekday);

        case "ccc":
          // like 'Tues'
          return weekday("short", true);

        case "cccc":
          // like 'Tuesday'
          return weekday("long", true);

        case "ccccc":
          // like 'T'
          return weekday("narrow", true);
        // weekdays - format

        case "E":
          // like 1
          return _this.num(dt.weekday);

        case "EEE":
          // like 'Tues'
          return weekday("short", false);

        case "EEEE":
          // like 'Tuesday'
          return weekday("long", false);

        case "EEEEE":
          // like 'T'
          return weekday("narrow", false);
        // months - standalone

        case "L":
          // like 1
          return useDateTimeFormatter ? string({
            month: "numeric",
            day: "numeric"
          }, "month") : _this.num(dt.month);

        case "LL":
          // like 01, doesn't seem to work
          return useDateTimeFormatter ? string({
            month: "2-digit",
            day: "numeric"
          }, "month") : _this.num(dt.month, 2);

        case "LLL":
          // like Jan
          return month("short", true);

        case "LLLL":
          // like January
          return month("long", true);

        case "LLLLL":
          // like J
          return month("narrow", true);
        // months - format

        case "M":
          // like 1
          return useDateTimeFormatter ? string({
            month: "numeric"
          }, "month") : _this.num(dt.month);

        case "MM":
          // like 01
          return useDateTimeFormatter ? string({
            month: "2-digit"
          }, "month") : _this.num(dt.month, 2);

        case "MMM":
          // like Jan
          return month("short", false);

        case "MMMM":
          // like January
          return month("long", false);

        case "MMMMM":
          // like J
          return month("narrow", false);
        // years

        case "y":
          // like 2014
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year);

        case "yy":
          // like 14
          return useDateTimeFormatter ? string({
            year: "2-digit"
          }, "year") : _this.num(dt.year.toString().slice(-2), 2);

        case "yyyy":
          // like 0012
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year, 4);

        case "yyyyyy":
          // like 000012
          return useDateTimeFormatter ? string({
            year: "numeric"
          }, "year") : _this.num(dt.year, 6);
        // eras

        case "G":
          // like AD
          return era("short");

        case "GG":
          // like Anno Domini
          return era("long");

        case "GGGGG":
          return era("narrow");

        case "kk":
          return _this.num(dt.weekYear.toString().slice(-2), 2);

        case "kkkk":
          return _this.num(dt.weekYear, 4);

        case "W":
          return _this.num(dt.weekNumber);

        case "WW":
          return _this.num(dt.weekNumber, 2);

        case "o":
          return _this.num(dt.ordinal);

        case "ooo":
          return _this.num(dt.ordinal, 3);

        case "q":
          // like 1
          return _this.num(dt.quarter);

        case "qq":
          // like 01
          return _this.num(dt.quarter, 2);

        case "X":
          return _this.num(Math.floor(dt.ts / 1000));

        case "x":
          return _this.num(dt.ts);

        default:
          return maybeMacro(token);
      }
    };

    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);
  };

  _proto.formatDurationFromString = function formatDurationFromString(dur, fmt) {
    var _this2 = this;

    var tokenToField = function tokenToField(token) {
      switch (token[0]) {
        case "S":
          return "millisecond";

        case "s":
          return "second";

        case "m":
          return "minute";

        case "h":
          return "hour";

        case "d":
          return "day";

        case "M":
          return "month";

        case "y":
          return "year";

        default:
          return null;
      }
    },
        tokenToString = function tokenToString(lildur) {
      return function (token) {
        var mapped = tokenToField(token);

        if (mapped) {
          return _this2.num(lildur.get(mapped), token.length);
        } else {
          return token;
        }
      };
    },
        tokens = Formatter.parseFormat(fmt),
        realTokens = tokens.reduce(function (found, _ref) {
      var literal = _ref.literal,
          val = _ref.val;
      return literal ? found : found.concat(val);
    }, []),
        collapsed = dur.shiftTo.apply(dur, realTokens.map(tokenToField).filter(function (t) {
      return t;
    }));

    return stringifyTokens(tokens, tokenToString(collapsed));
  };

  return Formatter;
}();

var Invalid = /*#__PURE__*/function () {
  function Invalid(reason, explanation) {
    this.reason = reason;
    this.explanation = explanation;
  }

  var _proto = Invalid.prototype;

  _proto.toMessage = function toMessage() {
    if (this.explanation) {
      return this.reason + ": " + this.explanation;
    } else {
      return this.reason;
    }
  };

  return Invalid;
}();

/**
 * @interface
 */

var Zone = /*#__PURE__*/function () {
  function Zone() {}

  var _proto = Zone.prototype;

  /**
   * Returns the offset's common name (such as EST) at the specified timestamp
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the name
   * @param {Object} opts - Options to affect the format
   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.
   * @param {string} opts.locale - What locale to return the offset name in.
   * @return {string}
   */
  _proto.offsetName = function offsetName(ts, opts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Returns the offset's value as a string
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to get the offset
   * @param {string} format - What style of offset to return.
   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively
   * @return {string}
   */
  ;

  _proto.formatOffset = function formatOffset(ts, format) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return the offset in minutes for this zone at the specified timestamp.
   * @abstract
   * @param {number} ts - Epoch milliseconds for which to compute the offset
   * @return {number}
   */
  ;

  _proto.offset = function offset(ts) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is equal to another zone
   * @abstract
   * @param {Zone} otherZone - the zone to compare
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(otherZone) {
    throw new ZoneIsAbstractError();
  }
  /**
   * Return whether this Zone is valid.
   * @abstract
   * @type {boolean}
   */
  ;

  _createClass(Zone, [{
    key: "type",

    /**
     * The type of zone
     * @abstract
     * @type {string}
     */
    get: function get() {
      throw new ZoneIsAbstractError();
    }
    /**
     * The name of this zone.
     * @abstract
     * @type {string}
     */

  }, {
    key: "name",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
    /**
     * Returns whether the offset is known to be fixed for the whole year.
     * @abstract
     * @type {boolean}
     */

  }, {
    key: "universal",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }, {
    key: "isValid",
    get: function get() {
      throw new ZoneIsAbstractError();
    }
  }]);

  return Zone;
}();

var singleton = null;
/**
 * Represents the local zone for this JavaScript environment.
 * @implements {Zone}
 */

var LocalZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(LocalZone, _Zone);

  function LocalZone() {
    return _Zone.apply(this, arguments) || this;
  }

  var _proto = LocalZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName(ts, _ref) {
    var format = _ref.format,
        locale = _ref.locale;
    return parseZoneInfo(ts, format, locale);
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  /** @override **/
  ;

  _proto.offset = function offset(ts) {
    return -new Date(ts).getTimezoneOffset();
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "local";
  }
  /** @override **/
  ;

  _createClass(LocalZone, [{
    key: "type",

    /** @override **/
    get: function get() {
      return "local";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      if (hasIntl()) {
        return new Intl.DateTimeFormat().resolvedOptions().timeZone;
      } else return "local";
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return true;
    }
  }], [{
    key: "instance",

    /**
     * Get a singleton instance of the local zone
     * @return {LocalZone}
     */
    get: function get() {
      if (singleton === null) {
        singleton = new LocalZone();
      }

      return singleton;
    }
  }]);

  return LocalZone;
}(Zone);

var matchingRegex = RegExp("^" + ianaRegex.source + "$");
var dtfCache = {};

function makeDTF(zone) {
  if (!dtfCache[zone]) {
    dtfCache[zone] = new Intl.DateTimeFormat("en-US", {
      hour12: false,
      timeZone: zone,
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }

  return dtfCache[zone];
}

var typeToPos = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};

function hackyOffset(dtf, date) {
  var formatted = dtf.format(date).replace(/\u200E/g, ""),
      parsed = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(formatted),
      fMonth = parsed[1],
      fDay = parsed[2],
      fYear = parsed[3],
      fHour = parsed[4],
      fMinute = parsed[5],
      fSecond = parsed[6];
  return [fYear, fMonth, fDay, fHour, fMinute, fSecond];
}

function partsOffset(dtf, date) {
  var formatted = dtf.formatToParts(date),
      filled = [];

  for (var i = 0; i < formatted.length; i++) {
    var _formatted$i = formatted[i],
        type = _formatted$i.type,
        value = _formatted$i.value,
        pos = typeToPos[type];

    if (!isUndefined(pos)) {
      filled[pos] = parseInt(value, 10);
    }
  }

  return filled;
}

var ianaZoneCache = {};
/**
 * A zone identified by an IANA identifier, like America/New_York
 * @implements {Zone}
 */

var IANAZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(IANAZone, _Zone);

  /**
   * @param {string} name - Zone name
   * @return {IANAZone}
   */
  IANAZone.create = function create(name) {
    if (!ianaZoneCache[name]) {
      ianaZoneCache[name] = new IANAZone(name);
    }

    return ianaZoneCache[name];
  }
  /**
   * Reset local caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  ;

  IANAZone.resetCache = function resetCache() {
    ianaZoneCache = {};
    dtfCache = {};
  }
  /**
   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.
   * @param {string} s - The string to check validity on
   * @example IANAZone.isValidSpecifier("America/New_York") //=> true
   * @example IANAZone.isValidSpecifier("Fantasia/Castle") //=> true
   * @example IANAZone.isValidSpecifier("Sport~~blorp") //=> false
   * @return {boolean}
   */
  ;

  IANAZone.isValidSpecifier = function isValidSpecifier(s) {
    return !!(s && s.match(matchingRegex));
  }
  /**
   * Returns whether the provided string identifies a real zone
   * @param {string} zone - The string to check
   * @example IANAZone.isValidZone("America/New_York") //=> true
   * @example IANAZone.isValidZone("Fantasia/Castle") //=> false
   * @example IANAZone.isValidZone("Sport~~blorp") //=> false
   * @return {boolean}
   */
  ;

  IANAZone.isValidZone = function isValidZone(zone) {
    try {
      new Intl.DateTimeFormat("en-US", {
        timeZone: zone
      }).format();
      return true;
    } catch (e) {
      return false;
    }
  } // Etc/GMT+8 -> -480

  /** @ignore */
  ;

  IANAZone.parseGMTOffset = function parseGMTOffset(specifier) {
    if (specifier) {
      var match = specifier.match(/^Etc\/GMT(0|[+-]\d{1,2})$/i);

      if (match) {
        return -60 * parseInt(match[1]);
      }
    }

    return null;
  };

  function IANAZone(name) {
    var _this;

    _this = _Zone.call(this) || this;
    /** @private **/

    _this.zoneName = name;
    /** @private **/

    _this.valid = IANAZone.isValidZone(name);
    return _this;
  }
  /** @override **/


  var _proto = IANAZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName(ts, _ref) {
    var format = _ref.format,
        locale = _ref.locale;
    return parseZoneInfo(ts, format, locale, this.name);
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.offset(ts), format);
  }
  /** @override **/
  ;

  _proto.offset = function offset(ts) {
    var date = new Date(ts);
    if (isNaN(date)) return NaN;

    var dtf = makeDTF(this.name),
        _ref2 = dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date),
        year = _ref2[0],
        month = _ref2[1],
        day = _ref2[2],
        hour = _ref2[3],
        minute = _ref2[4],
        second = _ref2[5],
        adjustedHour = hour === 24 ? 0 : hour;

    var asUTC = objToLocalTS({
      year: year,
      month: month,
      day: day,
      hour: adjustedHour,
      minute: minute,
      second: second,
      millisecond: 0
    });
    var asTS = +date;
    var over = asTS % 1000;
    asTS -= over >= 0 ? over : 1000 + over;
    return (asUTC - asTS) / (60 * 1000);
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "iana" && otherZone.name === this.name;
  }
  /** @override **/
  ;

  _createClass(IANAZone, [{
    key: "type",
    get: function get() {
      return "iana";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.zoneName;
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return this.valid;
    }
  }]);

  return IANAZone;
}(Zone);

var singleton$1 = null;
/**
 * A zone with a fixed offset (meaning no DST)
 * @implements {Zone}
 */

var FixedOffsetZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(FixedOffsetZone, _Zone);

  /**
   * Get an instance with a specified offset
   * @param {number} offset - The offset in minutes
   * @return {FixedOffsetZone}
   */
  FixedOffsetZone.instance = function instance(offset) {
    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);
  }
  /**
   * Get an instance of FixedOffsetZone from a UTC offset string, like "UTC+6"
   * @param {string} s - The offset string to parse
   * @example FixedOffsetZone.parseSpecifier("UTC+6")
   * @example FixedOffsetZone.parseSpecifier("UTC+06")
   * @example FixedOffsetZone.parseSpecifier("UTC-6:00")
   * @return {FixedOffsetZone}
   */
  ;

  FixedOffsetZone.parseSpecifier = function parseSpecifier(s) {
    if (s) {
      var r = s.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);

      if (r) {
        return new FixedOffsetZone(signedOffset(r[1], r[2]));
      }
    }

    return null;
  };

  _createClass(FixedOffsetZone, null, [{
    key: "utcInstance",

    /**
     * Get a singleton instance of UTC
     * @return {FixedOffsetZone}
     */
    get: function get() {
      if (singleton$1 === null) {
        singleton$1 = new FixedOffsetZone(0);
      }

      return singleton$1;
    }
  }]);

  function FixedOffsetZone(offset) {
    var _this;

    _this = _Zone.call(this) || this;
    /** @private **/

    _this.fixed = offset;
    return _this;
  }
  /** @override **/


  var _proto = FixedOffsetZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName() {
    return this.name;
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset$1(ts, format) {
    return formatOffset(this.fixed, format);
  }
  /** @override **/
  ;

  /** @override **/
  _proto.offset = function offset() {
    return this.fixed;
  }
  /** @override **/
  ;

  _proto.equals = function equals(otherZone) {
    return otherZone.type === "fixed" && otherZone.fixed === this.fixed;
  }
  /** @override **/
  ;

  _createClass(FixedOffsetZone, [{
    key: "type",
    get: function get() {
      return "fixed";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.fixed === 0 ? "UTC" : "UTC" + formatOffset(this.fixed, "narrow");
    }
  }, {
    key: "universal",
    get: function get() {
      return true;
    }
  }, {
    key: "isValid",
    get: function get() {
      return true;
    }
  }]);

  return FixedOffsetZone;
}(Zone);

/**
 * A zone that failed to parse. You should never need to instantiate this.
 * @implements {Zone}
 */

var InvalidZone = /*#__PURE__*/function (_Zone) {
  _inheritsLoose(InvalidZone, _Zone);

  function InvalidZone(zoneName) {
    var _this;

    _this = _Zone.call(this) || this;
    /**  @private */

    _this.zoneName = zoneName;
    return _this;
  }
  /** @override **/


  var _proto = InvalidZone.prototype;

  /** @override **/
  _proto.offsetName = function offsetName() {
    return null;
  }
  /** @override **/
  ;

  _proto.formatOffset = function formatOffset() {
    return "";
  }
  /** @override **/
  ;

  _proto.offset = function offset() {
    return NaN;
  }
  /** @override **/
  ;

  _proto.equals = function equals() {
    return false;
  }
  /** @override **/
  ;

  _createClass(InvalidZone, [{
    key: "type",
    get: function get() {
      return "invalid";
    }
    /** @override **/

  }, {
    key: "name",
    get: function get() {
      return this.zoneName;
    }
    /** @override **/

  }, {
    key: "universal",
    get: function get() {
      return false;
    }
  }, {
    key: "isValid",
    get: function get() {
      return false;
    }
  }]);

  return InvalidZone;
}(Zone);

/**
 * @private
 */
function normalizeZone(input, defaultZone) {
  var offset;

  if (isUndefined(input) || input === null) {
    return defaultZone;
  } else if (input instanceof Zone) {
    return input;
  } else if (isString(input)) {
    var lowered = input.toLowerCase();
    if (lowered === "local") return defaultZone;else if (lowered === "utc" || lowered === "gmt") return FixedOffsetZone.utcInstance;else if ((offset = IANAZone.parseGMTOffset(input)) != null) {
      // handle Etc/GMT-4, which V8 chokes on
      return FixedOffsetZone.instance(offset);
    } else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);
  } else if (isNumber(input)) {
    return FixedOffsetZone.instance(input);
  } else if (typeof input === "object" && input.offset && typeof input.offset === "number") {
    // This is dumb, but the instanceof check above doesn't seem to really work
    // so we're duck checking it
    return input;
  } else {
    return new InvalidZone(input);
  }
}

var now = function now() {
  return Date.now();
},
    defaultZone = null,
    // not setting this directly to LocalZone.instance bc loading order issues
defaultLocale = null,
    defaultNumberingSystem = null,
    defaultOutputCalendar = null,
    throwOnInvalid = false;
/**
 * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.
 */


var Settings = /*#__PURE__*/function () {
  function Settings() {}

  /**
   * Reset Luxon's global caches. Should only be necessary in testing scenarios.
   * @return {void}
   */
  Settings.resetCaches = function resetCaches() {
    Locale.resetCache();
    IANAZone.resetCache();
  };

  _createClass(Settings, null, [{
    key: "now",

    /**
     * Get the callback for returning the current timestamp.
     * @type {function}
     */
    get: function get() {
      return now;
    }
    /**
     * Set the callback for returning the current timestamp.
     * The function should return a number, which will be interpreted as an Epoch millisecond count
     * @type {function}
     * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future
     * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time
     */
    ,
    set: function set(n) {
      now = n;
    }
    /**
     * Get the default time zone to create DateTimes in.
     * @type {string}
     */

  }, {
    key: "defaultZoneName",
    get: function get() {
      return Settings.defaultZone.name;
    }
    /**
     * Set the default time zone to create DateTimes in. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(z) {
      if (!z) {
        defaultZone = null;
      } else {
        defaultZone = normalizeZone(z);
      }
    }
    /**
     * Get the default time zone object to create DateTimes in. Does not affect existing instances.
     * @type {Zone}
     */

  }, {
    key: "defaultZone",
    get: function get() {
      return defaultZone || LocalZone.instance;
    }
    /**
     * Get the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultLocale",
    get: function get() {
      return defaultLocale;
    }
    /**
     * Set the default locale to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(locale) {
      defaultLocale = locale;
    }
    /**
     * Get the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultNumberingSystem",
    get: function get() {
      return defaultNumberingSystem;
    }
    /**
     * Set the default numbering system to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(numberingSystem) {
      defaultNumberingSystem = numberingSystem;
    }
    /**
     * Get the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */

  }, {
    key: "defaultOutputCalendar",
    get: function get() {
      return defaultOutputCalendar;
    }
    /**
     * Set the default output calendar to create DateTimes with. Does not affect existing instances.
     * @type {string}
     */
    ,
    set: function set(outputCalendar) {
      defaultOutputCalendar = outputCalendar;
    }
    /**
     * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */

  }, {
    key: "throwOnInvalid",
    get: function get() {
      return throwOnInvalid;
    }
    /**
     * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals
     * @type {boolean}
     */
    ,
    set: function set(t) {
      throwOnInvalid = t;
    }
  }]);

  return Settings;
}();

var intlDTCache = {};

function getCachedDTF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var dtf = intlDTCache[key];

  if (!dtf) {
    dtf = new Intl.DateTimeFormat(locString, opts);
    intlDTCache[key] = dtf;
  }

  return dtf;
}

var intlNumCache = {};

function getCachedINF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var key = JSON.stringify([locString, opts]);
  var inf = intlNumCache[key];

  if (!inf) {
    inf = new Intl.NumberFormat(locString, opts);
    intlNumCache[key] = inf;
  }

  return inf;
}

var intlRelCache = {};

function getCachedRTF(locString, opts) {
  if (opts === void 0) {
    opts = {};
  }

  var _opts = opts,
      base = _opts.base,
      cacheKeyOpts = _objectWithoutPropertiesLoose(_opts, ["base"]); // exclude `base` from the options


  var key = JSON.stringify([locString, cacheKeyOpts]);
  var inf = intlRelCache[key];

  if (!inf) {
    inf = new Intl.RelativeTimeFormat(locString, opts);
    intlRelCache[key] = inf;
  }

  return inf;
}

var sysLocaleCache = null;

function systemLocale() {
  if (sysLocaleCache) {
    return sysLocaleCache;
  } else if (hasIntl()) {
    var computedSys = new Intl.DateTimeFormat().resolvedOptions().locale; // node sometimes defaults to "und". Override that because that is dumb

    sysLocaleCache = !computedSys || computedSys === "und" ? "en-US" : computedSys;
    return sysLocaleCache;
  } else {
    sysLocaleCache = "en-US";
    return sysLocaleCache;
  }
}

function parseLocaleString(localeStr) {
  // I really want to avoid writing a BCP 47 parser
  // see, e.g. https://github.com/wooorm/bcp-47
  // Instead, we'll do this:
  // a) if the string has no -u extensions, just leave it alone
  // b) if it does, use Intl to resolve everything
  // c) if Intl fails, try again without the -u
  var uIndex = localeStr.indexOf("-u-");

  if (uIndex === -1) {
    return [localeStr];
  } else {
    var options;
    var smaller = localeStr.substring(0, uIndex);

    try {
      options = getCachedDTF(localeStr).resolvedOptions();
    } catch (e) {
      options = getCachedDTF(smaller).resolvedOptions();
    }

    var _options = options,
        numberingSystem = _options.numberingSystem,
        calendar = _options.calendar; // return the smaller one so that we can append the calendar and numbering overrides to it

    return [smaller, numberingSystem, calendar];
  }
}

function intlConfigString(localeStr, numberingSystem, outputCalendar) {
  if (hasIntl()) {
    if (outputCalendar || numberingSystem) {
      localeStr += "-u";

      if (outputCalendar) {
        localeStr += "-ca-" + outputCalendar;
      }

      if (numberingSystem) {
        localeStr += "-nu-" + numberingSystem;
      }

      return localeStr;
    } else {
      return localeStr;
    }
  } else {
    return [];
  }
}

function mapMonths(f) {
  var ms = [];

  for (var i = 1; i <= 12; i++) {
    var dt = DateTime.utc(2016, i, 1);
    ms.push(f(dt));
  }

  return ms;
}

function mapWeekdays(f) {
  var ms = [];

  for (var i = 1; i <= 7; i++) {
    var dt = DateTime.utc(2016, 11, 13 + i);
    ms.push(f(dt));
  }

  return ms;
}

function listStuff(loc, length, defaultOK, englishFn, intlFn) {
  var mode = loc.listingMode(defaultOK);

  if (mode === "error") {
    return null;
  } else if (mode === "en") {
    return englishFn(length);
  } else {
    return intlFn(length);
  }
}

function supportsFastNumbers(loc) {
  if (loc.numberingSystem && loc.numberingSystem !== "latn") {
    return false;
  } else {
    return loc.numberingSystem === "latn" || !loc.locale || loc.locale.startsWith("en") || hasIntl() && new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === "latn";
  }
}
/**
 * @private
 */


var PolyNumberFormatter = /*#__PURE__*/function () {
  function PolyNumberFormatter(intl, forceSimple, opts) {
    this.padTo = opts.padTo || 0;
    this.floor = opts.floor || false;

    if (!forceSimple && hasIntl()) {
      var intlOpts = {
        useGrouping: false
      };
      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;
      this.inf = getCachedINF(intl, intlOpts);
    }
  }

  var _proto = PolyNumberFormatter.prototype;

  _proto.format = function format(i) {
    if (this.inf) {
      var fixed = this.floor ? Math.floor(i) : i;
      return this.inf.format(fixed);
    } else {
      // to match the browser's numberformatter defaults
      var _fixed = this.floor ? Math.floor(i) : roundTo(i, 3);

      return padStart(_fixed, this.padTo);
    }
  };

  return PolyNumberFormatter;
}();
/**
 * @private
 */


var PolyDateFormatter = /*#__PURE__*/function () {
  function PolyDateFormatter(dt, intl, opts) {
    this.opts = opts;
    this.hasIntl = hasIntl();
    var z;

    if (dt.zone.universal && this.hasIntl) {
      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.
      // That is why fixed-offset TZ is set to that unless it is:
      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.
      // 2. Unsupported by the browser:
      //    - some do not support Etc/
      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata
      var gmtOffset = -1 * (dt.offset / 60);
      var offsetZ = gmtOffset >= 0 ? "Etc/GMT+" + gmtOffset : "Etc/GMT" + gmtOffset;
      var isOffsetZoneSupported = IANAZone.isValidZone(offsetZ);

      if (dt.offset !== 0 && isOffsetZoneSupported) {
        z = offsetZ;
        this.dt = dt;
      } else {
        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata.
        // So we have to make do. Two cases:
        // 1. The format options tell us to show the zone. We can't do that, so the best
        // we can do is format the date in UTC.
        // 2. The format options don't tell us to show the zone. Then we can adjust them
        // the time and tell the formatter to show it to us in UTC, so that the time is right
        // and the bad zone doesn't show up.
        z = "UTC";

        if (opts.timeZoneName) {
          this.dt = dt;
        } else {
          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);
        }
      }
    } else if (dt.zone.type === "local") {
      this.dt = dt;
    } else {
      this.dt = dt;
      z = dt.zone.name;
    }

    if (this.hasIntl) {
      var intlOpts = Object.assign({}, this.opts);

      if (z) {
        intlOpts.timeZone = z;
      }

      this.dtf = getCachedDTF(intl, intlOpts);
    }
  }

  var _proto2 = PolyDateFormatter.prototype;

  _proto2.format = function format() {
    if (this.hasIntl) {
      return this.dtf.format(this.dt.toJSDate());
    } else {
      var tokenFormat = formatString(this.opts),
          loc = Locale.create("en-US");
      return Formatter.create(loc).formatDateTimeFromString(this.dt, tokenFormat);
    }
  };

  _proto2.formatToParts = function formatToParts() {
    if (this.hasIntl && hasFormatToParts()) {
      return this.dtf.formatToParts(this.dt.toJSDate());
    } else {
      // This is kind of a cop out. We actually could do this for English. However, we couldn't do it for intl strings
      // and IMO it's too weird to have an uncanny valley like that
      return [];
    }
  };

  _proto2.resolvedOptions = function resolvedOptions() {
    if (this.hasIntl) {
      return this.dtf.resolvedOptions();
    } else {
      return {
        locale: "en-US",
        numberingSystem: "latn",
        outputCalendar: "gregory"
      };
    }
  };

  return PolyDateFormatter;
}();
/**
 * @private
 */


var PolyRelFormatter = /*#__PURE__*/function () {
  function PolyRelFormatter(intl, isEnglish, opts) {
    this.opts = Object.assign({
      style: "long"
    }, opts);

    if (!isEnglish && hasRelative()) {
      this.rtf = getCachedRTF(intl, opts);
    }
  }

  var _proto3 = PolyRelFormatter.prototype;

  _proto3.format = function format(count, unit) {
    if (this.rtf) {
      return this.rtf.format(count, unit);
    } else {
      return formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== "long");
    }
  };

  _proto3.formatToParts = function formatToParts(count, unit) {
    if (this.rtf) {
      return this.rtf.formatToParts(count, unit);
    } else {
      return [];
    }
  };

  return PolyRelFormatter;
}();
/**
 * @private
 */


var Locale = /*#__PURE__*/function () {
  Locale.fromOpts = function fromOpts(opts) {
    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);
  };

  Locale.create = function create(locale, numberingSystem, outputCalendar, defaultToEN) {
    if (defaultToEN === void 0) {
      defaultToEN = false;
    }

    var specifiedLocale = locale || Settings.defaultLocale,
        // the system locale is useful for human readable strings but annoying for parsing/formatting known formats
    localeR = specifiedLocale || (defaultToEN ? "en-US" : systemLocale()),
        numberingSystemR = numberingSystem || Settings.defaultNumberingSystem,
        outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;
    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);
  };

  Locale.resetCache = function resetCache() {
    sysLocaleCache = null;
    intlDTCache = {};
    intlNumCache = {};
    intlRelCache = {};
  };

  Locale.fromObject = function fromObject(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        locale = _ref.locale,
        numberingSystem = _ref.numberingSystem,
        outputCalendar = _ref.outputCalendar;

    return Locale.create(locale, numberingSystem, outputCalendar);
  };

  function Locale(locale, numbering, outputCalendar, specifiedLocale) {
    var _parseLocaleString = parseLocaleString(locale),
        parsedLocale = _parseLocaleString[0],
        parsedNumberingSystem = _parseLocaleString[1],
        parsedOutputCalendar = _parseLocaleString[2];

    this.locale = parsedLocale;
    this.numberingSystem = numbering || parsedNumberingSystem || null;
    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;
    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);
    this.weekdaysCache = {
      format: {},
      standalone: {}
    };
    this.monthsCache = {
      format: {},
      standalone: {}
    };
    this.meridiemCache = null;
    this.eraCache = {};
    this.specifiedLocale = specifiedLocale;
    this.fastNumbersCached = null;
  }

  var _proto4 = Locale.prototype;

  _proto4.listingMode = function listingMode(defaultOK) {
    if (defaultOK === void 0) {
      defaultOK = true;
    }

    var intl = hasIntl(),
        hasFTP = intl && hasFormatToParts(),
        isActuallyEn = this.isEnglish(),
        hasNoWeirdness = (this.numberingSystem === null || this.numberingSystem === "latn") && (this.outputCalendar === null || this.outputCalendar === "gregory");

    if (!hasFTP && !(isActuallyEn && hasNoWeirdness) && !defaultOK) {
      return "error";
    } else if (!hasFTP || isActuallyEn && hasNoWeirdness) {
      return "en";
    } else {
      return "intl";
    }
  };

  _proto4.clone = function clone(alts) {
    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {
      return this;
    } else {
      return Locale.create(alts.locale || this.specifiedLocale, alts.numberingSystem || this.numberingSystem, alts.outputCalendar || this.outputCalendar, alts.defaultToEN || false);
    }
  };

  _proto4.redefaultToEN = function redefaultToEN(alts) {
    if (alts === void 0) {
      alts = {};
    }

    return this.clone(Object.assign({}, alts, {
      defaultToEN: true
    }));
  };

  _proto4.redefaultToSystem = function redefaultToSystem(alts) {
    if (alts === void 0) {
      alts = {};
    }

    return this.clone(Object.assign({}, alts, {
      defaultToEN: false
    }));
  };

  _proto4.months = function months$1(length, format, defaultOK) {
    var _this = this;

    if (format === void 0) {
      format = false;
    }

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, months, function () {
      var intl = format ? {
        month: length,
        day: "numeric"
      } : {
        month: length
      },
          formatStr = format ? "format" : "standalone";

      if (!_this.monthsCache[formatStr][length]) {
        _this.monthsCache[formatStr][length] = mapMonths(function (dt) {
          return _this.extract(dt, intl, "month");
        });
      }

      return _this.monthsCache[formatStr][length];
    });
  };

  _proto4.weekdays = function weekdays$1(length, format, defaultOK) {
    var _this2 = this;

    if (format === void 0) {
      format = false;
    }

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, weekdays, function () {
      var intl = format ? {
        weekday: length,
        year: "numeric",
        month: "long",
        day: "numeric"
      } : {
        weekday: length
      },
          formatStr = format ? "format" : "standalone";

      if (!_this2.weekdaysCache[formatStr][length]) {
        _this2.weekdaysCache[formatStr][length] = mapWeekdays(function (dt) {
          return _this2.extract(dt, intl, "weekday");
        });
      }

      return _this2.weekdaysCache[formatStr][length];
    });
  };

  _proto4.meridiems = function meridiems$1(defaultOK) {
    var _this3 = this;

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, undefined, defaultOK, function () {
      return meridiems;
    }, function () {
      // In theory there could be aribitrary day periods. We're gonna assume there are exactly two
      // for AM and PM. This is probably wrong, but it's makes parsing way easier.
      if (!_this3.meridiemCache) {
        var intl = {
          hour: "numeric",
          hour12: true
        };
        _this3.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(function (dt) {
          return _this3.extract(dt, intl, "dayperiod");
        });
      }

      return _this3.meridiemCache;
    });
  };

  _proto4.eras = function eras$1(length, defaultOK) {
    var _this4 = this;

    if (defaultOK === void 0) {
      defaultOK = true;
    }

    return listStuff(this, length, defaultOK, eras, function () {
      var intl = {
        era: length
      }; // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates
      // to definitely enumerate them.

      if (!_this4.eraCache[length]) {
        _this4.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map(function (dt) {
          return _this4.extract(dt, intl, "era");
        });
      }

      return _this4.eraCache[length];
    });
  };

  _proto4.extract = function extract(dt, intlOpts, field) {
    var df = this.dtFormatter(dt, intlOpts),
        results = df.formatToParts(),
        matching = results.find(function (m) {
      return m.type.toLowerCase() === field;
    });
    return matching ? matching.value : null;
  };

  _proto4.numberFormatter = function numberFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)
    // (in contrast, the rest of the condition is used heavily)
    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);
  };

  _proto4.dtFormatter = function dtFormatter(dt, intlOpts) {
    if (intlOpts === void 0) {
      intlOpts = {};
    }

    return new PolyDateFormatter(dt, this.intl, intlOpts);
  };

  _proto4.relFormatter = function relFormatter(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);
  };

  _proto4.isEnglish = function isEnglish() {
    return this.locale === "en" || this.locale.toLowerCase() === "en-us" || hasIntl() && new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us");
  };

  _proto4.equals = function equals(other) {
    return this.locale === other.locale && this.numberingSystem === other.numberingSystem && this.outputCalendar === other.outputCalendar;
  };

  _createClass(Locale, [{
    key: "fastNumbers",
    get: function get() {
      if (this.fastNumbersCached == null) {
        this.fastNumbersCached = supportsFastNumbers(this);
      }

      return this.fastNumbersCached;
    }
  }]);

  return Locale;
}();

/*
 * This file handles parsing for well-specified formats. Here's how it works:
 * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.
 * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object
 * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.
 * Extractors can take a "cursor" representing the offset in the match to look at. This makes it easy to combine extractors.
 * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.
 * Some extractions are super dumb and simpleParse and fromStrings help DRY them.
 */

function combineRegexes() {
  for (var _len = arguments.length, regexes = new Array(_len), _key = 0; _key < _len; _key++) {
    regexes[_key] = arguments[_key];
  }

  var full = regexes.reduce(function (f, r) {
    return f + r.source;
  }, "");
  return RegExp("^" + full + "$");
}

function combineExtractors() {
  for (var _len2 = arguments.length, extractors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    extractors[_key2] = arguments[_key2];
  }

  return function (m) {
    return extractors.reduce(function (_ref, ex) {
      var mergedVals = _ref[0],
          mergedZone = _ref[1],
          cursor = _ref[2];

      var _ex = ex(m, cursor),
          val = _ex[0],
          zone = _ex[1],
          next = _ex[2];

      return [Object.assign(mergedVals, val), mergedZone || zone, next];
    }, [{}, null, 1]).slice(0, 2);
  };
}

function parse(s) {
  if (s == null) {
    return [null, null];
  }

  for (var _len3 = arguments.length, patterns = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    patterns[_key3 - 1] = arguments[_key3];
  }

  for (var _i = 0, _patterns = patterns; _i < _patterns.length; _i++) {
    var _patterns$_i = _patterns[_i],
        regex = _patterns$_i[0],
        extractor = _patterns$_i[1];
    var m = regex.exec(s);

    if (m) {
      return extractor(m);
    }
  }

  return [null, null];
}

function simpleParse() {
  for (var _len4 = arguments.length, keys = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
    keys[_key4] = arguments[_key4];
  }

  return function (match, cursor) {
    var ret = {};
    var i;

    for (i = 0; i < keys.length; i++) {
      ret[keys[i]] = parseInteger(match[cursor + i]);
    }

    return [ret, null, cursor + i];
  };
} // ISO and SQL parsing


var offsetRegex = /(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/,
    isoTimeBaseRegex = /(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/,
    isoTimeRegex = RegExp("" + isoTimeBaseRegex.source + offsetRegex.source + "?"),
    isoTimeExtensionRegex = RegExp("(?:T" + isoTimeRegex.source + ")?"),
    isoYmdRegex = /([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/,
    isoWeekRegex = /(\d{4})-?W(\d\d)(?:-?(\d))?/,
    isoOrdinalRegex = /(\d{4})-?(\d{3})/,
    extractISOWeekData = simpleParse("weekYear", "weekNumber", "weekDay"),
    extractISOOrdinalData = simpleParse("year", "ordinal"),
    sqlYmdRegex = /(\d{4})-(\d\d)-(\d\d)/,
    // dumbed-down version of the ISO one
sqlTimeRegex = RegExp(isoTimeBaseRegex.source + " ?(?:" + offsetRegex.source + "|(" + ianaRegex.source + "))?"),
    sqlTimeExtensionRegex = RegExp("(?: " + sqlTimeRegex.source + ")?");

function int(match, pos, fallback) {
  var m = match[pos];
  return isUndefined(m) ? fallback : parseInteger(m);
}

function extractISOYmd(match, cursor) {
  var item = {
    year: int(match, cursor),
    month: int(match, cursor + 1, 1),
    day: int(match, cursor + 2, 1)
  };
  return [item, null, cursor + 3];
}

function extractISOTime(match, cursor) {
  var item = {
    hours: int(match, cursor, 0),
    minutes: int(match, cursor + 1, 0),
    seconds: int(match, cursor + 2, 0),
    milliseconds: parseMillis(match[cursor + 3])
  };
  return [item, null, cursor + 4];
}

function extractISOOffset(match, cursor) {
  var local = !match[cursor] && !match[cursor + 1],
      fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),
      zone = local ? null : FixedOffsetZone.instance(fullOffset);
  return [{}, zone, cursor + 3];
}

function extractIANAZone(match, cursor) {
  var zone = match[cursor] ? IANAZone.create(match[cursor]) : null;
  return [{}, zone, cursor + 1];
} // ISO time parsing


var isoTimeOnly = RegExp("^T?" + isoTimeBaseRegex.source + "$"); // ISO duration parsing

var isoDuration = /^-?P(?:(?:(-?\d{1,9})Y)?(?:(-?\d{1,9})M)?(?:(-?\d{1,9})W)?(?:(-?\d{1,9})D)?(?:T(?:(-?\d{1,9})H)?(?:(-?\d{1,9})M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,9}))?S)?)?)$/;

function extractISODuration(match) {
  var s = match[0],
      yearStr = match[1],
      monthStr = match[2],
      weekStr = match[3],
      dayStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      millisecondsStr = match[8];
  var hasNegativePrefix = s[0] === "-";
  var negativeSeconds = secondStr && secondStr[0] === "-";

  var maybeNegate = function maybeNegate(num, force) {
    if (force === void 0) {
      force = false;
    }

    return num !== undefined && (force || num && hasNegativePrefix) ? -num : num;
  };

  return [{
    years: maybeNegate(parseInteger(yearStr)),
    months: maybeNegate(parseInteger(monthStr)),
    weeks: maybeNegate(parseInteger(weekStr)),
    days: maybeNegate(parseInteger(dayStr)),
    hours: maybeNegate(parseInteger(hourStr)),
    minutes: maybeNegate(parseInteger(minuteStr)),
    seconds: maybeNegate(parseInteger(secondStr), secondStr === "-0"),
    milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds)
  }];
} // These are a little braindead. EDT *should* tell us that we're in, say, America/New_York
// and not just that we're in -240 *right now*. But since I don't think these are used that often
// I'm just going to ignore that


var obsOffsets = {
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};

function fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = {
    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),
    month: monthsShort.indexOf(monthStr) + 1,
    day: parseInteger(dayStr),
    hour: parseInteger(hourStr),
    minute: parseInteger(minuteStr)
  };
  if (secondStr) result.second = parseInteger(secondStr);

  if (weekdayStr) {
    result.weekday = weekdayStr.length > 3 ? weekdaysLong.indexOf(weekdayStr) + 1 : weekdaysShort.indexOf(weekdayStr) + 1;
  }

  return result;
} // RFC 2822/5322


var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;

function extractRFC2822(match) {
  var weekdayStr = match[1],
      dayStr = match[2],
      monthStr = match[3],
      yearStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      obsOffset = match[8],
      milOffset = match[9],
      offHourStr = match[10],
      offMinuteStr = match[11],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  var offset;

  if (obsOffset) {
    offset = obsOffsets[obsOffset];
  } else if (milOffset) {
    offset = 0;
  } else {
    offset = signedOffset(offHourStr, offMinuteStr);
  }

  return [result, new FixedOffsetZone(offset)];
}

function preprocessRFC2822(s) {
  // Remove comments and folding whitespace and replace multiple-spaces with a single space
  return s.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").trim();
} // http date


var rfc1123 = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,
    rfc850 = /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,
    ascii = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;

function extractRFC1123Or850(match) {
  var weekdayStr = match[1],
      dayStr = match[2],
      monthStr = match[3],
      yearStr = match[4],
      hourStr = match[5],
      minuteStr = match[6],
      secondStr = match[7],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}

function extractASCII(match) {
  var weekdayStr = match[1],
      monthStr = match[2],
      dayStr = match[3],
      hourStr = match[4],
      minuteStr = match[5],
      secondStr = match[6],
      yearStr = match[7],
      result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);
  return [result, FixedOffsetZone.utcInstance];
}

var isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);
var isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);
var isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);
var isoTimeCombinedRegex = combineRegexes(isoTimeRegex);
var extractISOYmdTimeAndOffset = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset);
var extractISOWeekTimeAndOffset = combineExtractors(extractISOWeekData, extractISOTime, extractISOOffset);
var extractISOOrdinalDateAndTime = combineExtractors(extractISOOrdinalData, extractISOTime, extractISOOffset);
var extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset);
/**
 * @private
 */

function parseISODate(s) {
  return parse(s, [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset], [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset], [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime], [isoTimeCombinedRegex, extractISOTimeAndOffset]);
}
function parseRFC2822Date(s) {
  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);
}
function parseHTTPDate(s) {
  return parse(s, [rfc1123, extractRFC1123Or850], [rfc850, extractRFC1123Or850], [ascii, extractASCII]);
}
function parseISODuration(s) {
  return parse(s, [isoDuration, extractISODuration]);
}
var extractISOTimeOnly = combineExtractors(extractISOTime);
function parseISOTimeOnly(s) {
  return parse(s, [isoTimeOnly, extractISOTimeOnly]);
}
var sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);
var sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);
var extractISOYmdTimeOffsetAndIANAZone = combineExtractors(extractISOYmd, extractISOTime, extractISOOffset, extractIANAZone);
var extractISOTimeOffsetAndIANAZone = combineExtractors(extractISOTime, extractISOOffset, extractIANAZone);
function parseSQL(s) {
  return parse(s, [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeOffsetAndIANAZone], [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]);
}

var INVALID = "Invalid Duration"; // unit conversion constants

var lowOrderMatrix = {
  weeks: {
    days: 7,
    hours: 7 * 24,
    minutes: 7 * 24 * 60,
    seconds: 7 * 24 * 60 * 60,
    milliseconds: 7 * 24 * 60 * 60 * 1000
  },
  days: {
    hours: 24,
    minutes: 24 * 60,
    seconds: 24 * 60 * 60,
    milliseconds: 24 * 60 * 60 * 1000
  },
  hours: {
    minutes: 60,
    seconds: 60 * 60,
    milliseconds: 60 * 60 * 1000
  },
  minutes: {
    seconds: 60,
    milliseconds: 60 * 1000
  },
  seconds: {
    milliseconds: 1000
  }
},
    casualMatrix = Object.assign({
  years: {
    quarters: 4,
    months: 12,
    weeks: 52,
    days: 365,
    hours: 365 * 24,
    minutes: 365 * 24 * 60,
    seconds: 365 * 24 * 60 * 60,
    milliseconds: 365 * 24 * 60 * 60 * 1000
  },
  quarters: {
    months: 3,
    weeks: 13,
    days: 91,
    hours: 91 * 24,
    minutes: 91 * 24 * 60,
    seconds: 91 * 24 * 60 * 60,
    milliseconds: 91 * 24 * 60 * 60 * 1000
  },
  months: {
    weeks: 4,
    days: 30,
    hours: 30 * 24,
    minutes: 30 * 24 * 60,
    seconds: 30 * 24 * 60 * 60,
    milliseconds: 30 * 24 * 60 * 60 * 1000
  }
}, lowOrderMatrix),
    daysInYearAccurate = 146097.0 / 400,
    daysInMonthAccurate = 146097.0 / 4800,
    accurateMatrix = Object.assign({
  years: {
    quarters: 4,
    months: 12,
    weeks: daysInYearAccurate / 7,
    days: daysInYearAccurate,
    hours: daysInYearAccurate * 24,
    minutes: daysInYearAccurate * 24 * 60,
    seconds: daysInYearAccurate * 24 * 60 * 60,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000
  },
  quarters: {
    months: 3,
    weeks: daysInYearAccurate / 28,
    days: daysInYearAccurate / 4,
    hours: daysInYearAccurate * 24 / 4,
    minutes: daysInYearAccurate * 24 * 60 / 4,
    seconds: daysInYearAccurate * 24 * 60 * 60 / 4,
    milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000 / 4
  },
  months: {
    weeks: daysInMonthAccurate / 7,
    days: daysInMonthAccurate,
    hours: daysInMonthAccurate * 24,
    minutes: daysInMonthAccurate * 24 * 60,
    seconds: daysInMonthAccurate * 24 * 60 * 60,
    milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000
  }
}, lowOrderMatrix); // units ordered by size

var orderedUnits = ["years", "quarters", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds"];
var reverseUnits = orderedUnits.slice(0).reverse(); // clone really means "create another instance just like this one, but with these changes"

function clone(dur, alts, clear) {
  if (clear === void 0) {
    clear = false;
  }

  // deep merge for vals
  var conf = {
    values: clear ? alts.values : Object.assign({}, dur.values, alts.values || {}),
    loc: dur.loc.clone(alts.loc),
    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy
  };
  return new Duration(conf);
}

function antiTrunc(n) {
  return n < 0 ? Math.floor(n) : Math.ceil(n);
} // NB: mutates parameters


function convert(matrix, fromMap, fromUnit, toMap, toUnit) {
  var conv = matrix[toUnit][fromUnit],
      raw = fromMap[fromUnit] / conv,
      sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),
      // ok, so this is wild, but see the matrix in the tests
  added = !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);
  toMap[toUnit] += added;
  fromMap[fromUnit] -= added * conv;
} // NB: mutates parameters


function normalizeValues(matrix, vals) {
  reverseUnits.reduce(function (previous, current) {
    if (!isUndefined(vals[current])) {
      if (previous) {
        convert(matrix, vals, previous, vals, current);
      }

      return current;
    } else {
      return previous;
    }
  }, null);
}
/**
 * A Duration object represents a period of time, like "2 months" or "1 day, 1 hour". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime.plus} to add a Duration object to a DateTime, producing another DateTime.
 *
 * Here is a brief overview of commonly used methods and getters in Duration:
 *
 * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.
 * * **Unit values** See the {@link Duration.years}, {@link Duration.months}, {@link Duration.weeks}, {@link Duration.days}, {@link Duration.hours}, {@link Duration.minutes}, {@link Duration.seconds}, {@link Duration.milliseconds} accessors.
 * * **Configuration** See  {@link Duration.locale} and {@link Duration.numberingSystem} accessors.
 * * **Transformation** To create new Durations out of old ones use {@link Duration.plus}, {@link Duration.minus}, {@link Duration.normalize}, {@link Duration.set}, {@link Duration.reconfigure}, {@link Duration.shiftTo}, and {@link Duration.negate}.
 * * **Output** To convert the Duration into other representations, see {@link Duration.as}, {@link Duration.toISO}, {@link Duration.toFormat}, and {@link Duration.toJSON}
 *
 * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.
 */


var Duration = /*#__PURE__*/function () {
  /**
   * @private
   */
  function Duration(config) {
    var accurate = config.conversionAccuracy === "longterm" || false;
    /**
     * @access private
     */

    this.values = config.values;
    /**
     * @access private
     */

    this.loc = config.loc || Locale.create();
    /**
     * @access private
     */

    this.conversionAccuracy = accurate ? "longterm" : "casual";
    /**
     * @access private
     */

    this.invalid = config.invalid || null;
    /**
     * @access private
     */

    this.matrix = accurate ? accurateMatrix : casualMatrix;
    /**
     * @access private
     */

    this.isLuxonDuration = true;
  }
  /**
   * Create Duration from a number of milliseconds.
   * @param {number} count of milliseconds
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */


  Duration.fromMillis = function fromMillis(count, opts) {
    return Duration.fromObject(Object.assign({
      milliseconds: count
    }, opts));
  }
  /**
   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.
   * If this object is empty then a zero milliseconds duration is returned.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.years
   * @param {number} obj.quarters
   * @param {number} obj.months
   * @param {number} obj.weeks
   * @param {number} obj.days
   * @param {number} obj.hours
   * @param {number} obj.minutes
   * @param {number} obj.seconds
   * @param {number} obj.milliseconds
   * @param {string} [obj.locale='en-US'] - the locale to use
   * @param {string} obj.numberingSystem - the numbering system to use
   * @param {string} [obj.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  ;

  Duration.fromObject = function fromObject(obj) {
    if (obj == null || typeof obj !== "object") {
      throw new InvalidArgumentError("Duration.fromObject: argument expected to be an object, got " + (obj === null ? "null" : typeof obj));
    }

    return new Duration({
      values: normalizeObject(obj, Duration.normalizeUnit, ["locale", "numberingSystem", "conversionAccuracy", "zone" // a bit of debt; it's super inconvenient internally not to be able to blindly pass this
      ]),
      loc: Locale.fromObject(obj),
      conversionAccuracy: obj.conversionAccuracy
    });
  }
  /**
   * Create a Duration from an ISO 8601 duration string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }
   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }
   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }
   * @return {Duration}
   */
  ;

  Duration.fromISO = function fromISO(text, opts) {
    var _parseISODuration = parseISODuration(text),
        parsed = _parseISODuration[0];

    if (parsed) {
      var obj = Object.assign(parsed, opts);
      return Duration.fromObject(obj);
    } else {
      return Duration.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
    }
  }
  /**
   * Create a Duration from an ISO 8601 time string.
   * @param {string} text - text to parse
   * @param {Object} opts - options for parsing
   * @param {string} [opts.locale='en-US'] - the locale to use
   * @param {string} opts.numberingSystem - the numbering system to use
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }
   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }
   * @return {Duration}
   */
  ;

  Duration.fromISOTime = function fromISOTime(text, opts) {
    var _parseISOTimeOnly = parseISOTimeOnly(text),
        parsed = _parseISOTimeOnly[0];

    if (parsed) {
      var obj = Object.assign(parsed, opts);
      return Duration.fromObject(obj);
    } else {
      return Duration.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
    }
  }
  /**
   * Create an invalid Duration.
   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Duration}
   */
  ;

  Duration.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Duration is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidDurationError(invalid);
    } else {
      return new Duration({
        invalid: invalid
      });
    }
  }
  /**
   * @private
   */
  ;

  Duration.normalizeUnit = function normalizeUnit(unit) {
    var normalized = {
      year: "years",
      years: "years",
      quarter: "quarters",
      quarters: "quarters",
      month: "months",
      months: "months",
      week: "weeks",
      weeks: "weeks",
      day: "days",
      days: "days",
      hour: "hours",
      hours: "hours",
      minute: "minutes",
      minutes: "minutes",
      second: "seconds",
      seconds: "seconds",
      millisecond: "milliseconds",
      milliseconds: "milliseconds"
    }[unit ? unit.toLowerCase() : unit];
    if (!normalized) throw new InvalidUnitError(unit);
    return normalized;
  }
  /**
   * Check if an object is a Duration. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  Duration.isDuration = function isDuration(o) {
    return o && o.isLuxonDuration || false;
  }
  /**
   * Get  the locale of a Duration, such 'en-GB'
   * @type {string}
   */
  ;

  var _proto = Duration.prototype;

  /**
   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:
   * * `S` for milliseconds
   * * `s` for seconds
   * * `m` for minutes
   * * `h` for hours
   * * `d` for days
   * * `M` for months
   * * `y` for years
   * Notes:
   * * Add padding by repeating the token, e.g. "yy" pads the years to two digits, "hhhh" pads the hours out to four digits
   * * The duration will be converted to the set of units in the format string using {@link Duration.shiftTo} and the Durations's conversion accuracy setting.
   * @param {string} fmt - the format string
   * @param {Object} opts - options
   * @param {boolean} [opts.floor=true] - floor numerical values
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("y d s") //=> "1 6 2"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("yy dd sss") //=> "01 06 002"
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat("M S") //=> "12 518402000"
   * @return {string}
   */
  _proto.toFormat = function toFormat(fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    // reverse-compat since 1.2; we always round down now, never up, and we do it by default
    var fmtOpts = Object.assign({}, opts, {
      floor: opts.round !== false && opts.floor !== false
    });
    return this.isValid ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt) : INVALID;
  }
  /**
   * Returns a JavaScript object with this Duration's values.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }
   * @return {Object}
   */
  ;

  _proto.toObject = function toObject(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return {};
    var base = Object.assign({}, this.values);

    if (opts.includeConfig) {
      base.conversionAccuracy = this.conversionAccuracy;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }

    return base;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations
   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'
   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'
   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'
   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'
   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'
   * @return {string}
   */
  ;

  _proto.toISO = function toISO() {
    // we could use the formatter, but this is an easier way to get the minimum string
    if (!this.isValid) return null;
    var s = "P";
    if (this.years !== 0) s += this.years + "Y";
    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + "M";
    if (this.weeks !== 0) s += this.weeks + "W";
    if (this.days !== 0) s += this.days + "D";
    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0) s += "T";
    if (this.hours !== 0) s += this.hours + "H";
    if (this.minutes !== 0) s += this.minutes + "M";
    if (this.seconds !== 0 || this.milliseconds !== 0) // this will handle "floating point madness" by removing extra decimal places
      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken
      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + "S";
    if (s === "P") s += "T0S";
    return s;
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.
   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Times
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'
   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return null;
    var millis = this.toMillis();
    if (millis < 0 || millis >= 86400000) return null;
    opts = Object.assign({
      suppressMilliseconds: false,
      suppressSeconds: false,
      includePrefix: false,
      format: "extended"
    }, opts);
    var value = this.shiftTo("hours", "minutes", "seconds", "milliseconds");
    var fmt = opts.format === "basic" ? "hhmm" : "hh:mm";

    if (!opts.suppressSeconds || value.seconds !== 0 || value.milliseconds !== 0) {
      fmt += opts.format === "basic" ? "ss" : ":ss";

      if (!opts.suppressMilliseconds || value.milliseconds !== 0) {
        fmt += ".SSS";
      }
    }

    var str = value.toFormat(fmt);

    if (opts.includePrefix) {
      str = "T" + str;
    }

    return str;
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.
   * @return {string}
   */
  ;

  _proto.toJSON = function toJSON() {
    return this.toISO();
  }
  /**
   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    return this.toISO();
  }
  /**
   * Returns an milliseconds value of this Duration.
   * @return {number}
   */
  ;

  _proto.toMillis = function toMillis() {
    return this.as("milliseconds");
  }
  /**
   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}
   * @return {number}
   */
  ;

  _proto.valueOf = function valueOf() {
    return this.toMillis();
  }
  /**
   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  ;

  _proto.plus = function plus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration),
        result = {};

    for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits), _step; !(_step = _iterator()).done;) {
      var k = _step.value;

      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {
        result[k] = dur.get(k) + this.get(k);
      }
    }

    return clone(this, {
      values: result
    }, true);
  }
  /**
   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @return {Duration}
   */
  ;

  _proto.minus = function minus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration);
    return this.plus(dur.negate());
  }
  /**
   * Scale this Duration by the specified amount. Return a newly-constructed Duration.
   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit(x => x * 2) //=> { hours: 2, minutes: 60 }
   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnit((x, u) => u === "hour" ? x * 2 : x) //=> { hours: 2, minutes: 30 }
   * @return {Duration}
   */
  ;

  _proto.mapUnits = function mapUnits(fn) {
    if (!this.isValid) return this;
    var result = {};

    for (var _i = 0, _Object$keys = Object.keys(this.values); _i < _Object$keys.length; _i++) {
      var k = _Object$keys[_i];
      result[k] = asNumber(fn(this.values[k], k));
    }

    return clone(this, {
      values: result
    }, true);
  }
  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2
   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0
   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3
   * @return {number}
   */
  ;

  _proto.get = function get(unit) {
    return this[Duration.normalizeUnit(unit)];
  }
  /**
   * "Set" the values of specified units. Return a newly-constructed Duration.
   * @param {Object} values - a mapping of units to numbers
   * @example dur.set({ years: 2017 })
   * @example dur.set({ hours: 8, minutes: 30 })
   * @return {Duration}
   */
  ;

  _proto.set = function set(values) {
    if (!this.isValid) return this;
    var mixed = Object.assign(this.values, normalizeObject(values, Duration.normalizeUnit, []));
    return clone(this, {
      values: mixed
    });
  }
  /**
   * "Set" the locale and/or numberingSystem.  Returns a newly-constructed Duration.
   * @example dur.reconfigure({ locale: 'en-GB' })
   * @return {Duration}
   */
  ;

  _proto.reconfigure = function reconfigure(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        locale = _ref.locale,
        numberingSystem = _ref.numberingSystem,
        conversionAccuracy = _ref.conversionAccuracy;

    var loc = this.loc.clone({
      locale: locale,
      numberingSystem: numberingSystem
    }),
        opts = {
      loc: loc
    };

    if (conversionAccuracy) {
      opts.conversionAccuracy = conversionAccuracy;
    }

    return clone(this, opts);
  }
  /**
   * Return the length of the duration in the specified unit.
   * @param {string} unit - a unit such as 'minutes' or 'days'
   * @example Duration.fromObject({years: 1}).as('days') //=> 365
   * @example Duration.fromObject({years: 1}).as('months') //=> 12
   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5
   * @return {number}
   */
  ;

  _proto.as = function as(unit) {
    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;
  }
  /**
   * Reduce this Duration to its canonical representation in its current units.
   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }
   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }
   * @return {Duration}
   */
  ;

  _proto.normalize = function normalize() {
    if (!this.isValid) return this;
    var vals = this.toObject();
    normalizeValues(this.matrix, vals);
    return clone(this, {
      values: vals
    }, true);
  }
  /**
   * Convert this Duration into its representation in a different set of units.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }
   * @return {Duration}
   */
  ;

  _proto.shiftTo = function shiftTo() {
    for (var _len = arguments.length, units = new Array(_len), _key = 0; _key < _len; _key++) {
      units[_key] = arguments[_key];
    }

    if (!this.isValid) return this;

    if (units.length === 0) {
      return this;
    }

    units = units.map(function (u) {
      return Duration.normalizeUnit(u);
    });
    var built = {},
        accumulated = {},
        vals = this.toObject();
    var lastUnit;

    for (var _iterator2 = _createForOfIteratorHelperLoose(orderedUnits), _step2; !(_step2 = _iterator2()).done;) {
      var k = _step2.value;

      if (units.indexOf(k) >= 0) {
        lastUnit = k;
        var own = 0; // anything we haven't boiled down yet should get boiled to this unit

        for (var ak in accumulated) {
          own += this.matrix[ak][k] * accumulated[ak];
          accumulated[ak] = 0;
        } // plus anything that's already in this unit


        if (isNumber(vals[k])) {
          own += vals[k];
        }

        var i = Math.trunc(own);
        built[k] = i;
        accumulated[k] = own - i; // we'd like to absorb these fractions in another unit
        // plus anything further down the chain that should be rolled up in to this

        for (var down in vals) {
          if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k)) {
            convert(this.matrix, vals, down, built, k);
          }
        } // otherwise, keep it in the wings to boil it later

      } else if (isNumber(vals[k])) {
        accumulated[k] = vals[k];
      }
    } // anything leftover becomes the decimal for the last unit
    // lastUnit must be defined since units is not empty


    for (var key in accumulated) {
      if (accumulated[key] !== 0) {
        built[lastUnit] += key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];
      }
    }

    return clone(this, {
      values: built
    }, true).normalize();
  }
  /**
   * Return the negative of this Duration.
   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }
   * @return {Duration}
   */
  ;

  _proto.negate = function negate() {
    if (!this.isValid) return this;
    var negated = {};

    for (var _i2 = 0, _Object$keys2 = Object.keys(this.values); _i2 < _Object$keys2.length; _i2++) {
      var k = _Object$keys2[_i2];
      negated[k] = -this.values[k];
    }

    return clone(this, {
      values: negated
    }, true);
  }
  /**
   * Get the years.
   * @type {number}
   */
  ;

  /**
   * Equality check
   * Two Durations are equal iff they have the same units and the same values for each unit.
   * @param {Duration} other
   * @return {boolean}
   */
  _proto.equals = function equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }

    if (!this.loc.equals(other.loc)) {
      return false;
    }

    function eq(v1, v2) {
      // Consider 0 and undefined as equal
      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;
      return v1 === v2;
    }

    for (var _iterator3 = _createForOfIteratorHelperLoose(orderedUnits), _step3; !(_step3 = _iterator3()).done;) {
      var u = _step3.value;

      if (!eq(this.values[u], other.values[u])) {
        return false;
      }
    }

    return true;
  };

  _createClass(Duration, [{
    key: "locale",
    get: function get() {
      return this.isValid ? this.loc.locale : null;
    }
    /**
     * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration
     *
     * @type {string}
     */

  }, {
    key: "numberingSystem",
    get: function get() {
      return this.isValid ? this.loc.numberingSystem : null;
    }
  }, {
    key: "years",
    get: function get() {
      return this.isValid ? this.values.years || 0 : NaN;
    }
    /**
     * Get the quarters.
     * @type {number}
     */

  }, {
    key: "quarters",
    get: function get() {
      return this.isValid ? this.values.quarters || 0 : NaN;
    }
    /**
     * Get the months.
     * @type {number}
     */

  }, {
    key: "months",
    get: function get() {
      return this.isValid ? this.values.months || 0 : NaN;
    }
    /**
     * Get the weeks
     * @type {number}
     */

  }, {
    key: "weeks",
    get: function get() {
      return this.isValid ? this.values.weeks || 0 : NaN;
    }
    /**
     * Get the days.
     * @type {number}
     */

  }, {
    key: "days",
    get: function get() {
      return this.isValid ? this.values.days || 0 : NaN;
    }
    /**
     * Get the hours.
     * @type {number}
     */

  }, {
    key: "hours",
    get: function get() {
      return this.isValid ? this.values.hours || 0 : NaN;
    }
    /**
     * Get the minutes.
     * @type {number}
     */

  }, {
    key: "minutes",
    get: function get() {
      return this.isValid ? this.values.minutes || 0 : NaN;
    }
    /**
     * Get the seconds.
     * @return {number}
     */

  }, {
    key: "seconds",
    get: function get() {
      return this.isValid ? this.values.seconds || 0 : NaN;
    }
    /**
     * Get the milliseconds.
     * @return {number}
     */

  }, {
    key: "milliseconds",
    get: function get() {
      return this.isValid ? this.values.milliseconds || 0 : NaN;
    }
    /**
     * Returns whether the Duration is invalid. Invalid durations are returned by diff operations
     * on invalid DateTimes or Intervals.
     * @return {boolean}
     */

  }, {
    key: "isValid",
    get: function get() {
      return this.invalid === null;
    }
    /**
     * Returns an error code if this Duration became invalid, or null if the Duration is valid
     * @return {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this Duration became invalid, or null if the Duration is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
  }]);

  return Duration;
}();
function friendlyDuration(durationish) {
  if (isNumber(durationish)) {
    return Duration.fromMillis(durationish);
  } else if (Duration.isDuration(durationish)) {
    return durationish;
  } else if (typeof durationish === "object") {
    return Duration.fromObject(durationish);
  } else {
    throw new InvalidArgumentError("Unknown duration argument " + durationish + " of type " + typeof durationish);
  }
}

var INVALID$1 = "Invalid Interval"; // checks if the start is equal to or before the end

function validateStartEnd(start, end) {
  if (!start || !start.isValid) {
    return Interval.invalid("missing or invalid start");
  } else if (!end || !end.isValid) {
    return Interval.invalid("missing or invalid end");
  } else if (end < start) {
    return Interval.invalid("end before start", "The end of an interval must be after its start, but you had start=" + start.toISO() + " and end=" + end.toISO());
  } else {
    return null;
  }
}
/**
 * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.
 *
 * Here is a brief overview of the most commonly used methods and getters in Interval:
 *
 * * **Creation** To create an Interval, use {@link fromDateTimes}, {@link after}, {@link before}, or {@link fromISO}.
 * * **Accessors** Use {@link start} and {@link end} to get the start and end.
 * * **Interrogation** To analyze the Interval, use {@link count}, {@link length}, {@link hasSame}, {@link contains}, {@link isAfter}, or {@link isBefore}.
 * * **Transformation** To create other Intervals out of this one, use {@link set}, {@link splitAt}, {@link splitBy}, {@link divideEqually}, {@link merge}, {@link xor}, {@link union}, {@link intersection}, or {@link difference}.
 * * **Comparison** To compare this Interval to another one, use {@link equals}, {@link overlaps}, {@link abutsStart}, {@link abutsEnd}, {@link engulfs}.
 * * **Output** To convert the Interval into other representations, see {@link toString}, {@link toISO}, {@link toISODate}, {@link toISOTime}, {@link toFormat}, and {@link toDuration}.
 */


var Interval = /*#__PURE__*/function () {
  /**
   * @private
   */
  function Interval(config) {
    /**
     * @access private
     */
    this.s = config.start;
    /**
     * @access private
     */

    this.e = config.end;
    /**
     * @access private
     */

    this.invalid = config.invalid || null;
    /**
     * @access private
     */

    this.isLuxonInterval = true;
  }
  /**
   * Create an invalid Interval.
   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {Interval}
   */


  Interval.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the Interval is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidIntervalError(invalid);
    } else {
      return new Interval({
        invalid: invalid
      });
    }
  }
  /**
   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.
   * @param {DateTime|Date|Object} start
   * @param {DateTime|Date|Object} end
   * @return {Interval}
   */
  ;

  Interval.fromDateTimes = function fromDateTimes(start, end) {
    var builtStart = friendlyDateTime(start),
        builtEnd = friendlyDateTime(end);
    var validateError = validateStartEnd(builtStart, builtEnd);

    if (validateError == null) {
      return new Interval({
        start: builtStart,
        end: builtEnd
      });
    } else {
      return validateError;
    }
  }
  /**
   * Create an Interval from a start DateTime and a Duration to extend to.
   * @param {DateTime|Date|Object} start
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  ;

  Interval.after = function after(start, duration) {
    var dur = friendlyDuration(duration),
        dt = friendlyDateTime(start);
    return Interval.fromDateTimes(dt, dt.plus(dur));
  }
  /**
   * Create an Interval from an end DateTime and a Duration to extend backwards to.
   * @param {DateTime|Date|Object} end
   * @param {Duration|Object|number} duration - the length of the Interval.
   * @return {Interval}
   */
  ;

  Interval.before = function before(end, duration) {
    var dur = friendlyDuration(duration),
        dt = friendlyDateTime(end);
    return Interval.fromDateTimes(dt.minus(dur), dt);
  }
  /**
   * Create an Interval from an ISO 8601 string.
   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.
   * @param {string} text - the ISO string to parse
   * @param {Object} [opts] - options to pass {@link DateTime.fromISO} and optionally {@link Duration.fromISO}
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {Interval}
   */
  ;

  Interval.fromISO = function fromISO(text, opts) {
    var _split = (text || "").split("/", 2),
        s = _split[0],
        e = _split[1];

    if (s && e) {
      var start, startIsValid;

      try {
        start = DateTime.fromISO(s, opts);
        startIsValid = start.isValid;
      } catch (e) {
        startIsValid = false;
      }

      var end, endIsValid;

      try {
        end = DateTime.fromISO(e, opts);
        endIsValid = end.isValid;
      } catch (e) {
        endIsValid = false;
      }

      if (startIsValid && endIsValid) {
        return Interval.fromDateTimes(start, end);
      }

      if (startIsValid) {
        var dur = Duration.fromISO(e, opts);

        if (dur.isValid) {
          return Interval.after(start, dur);
        }
      } else if (endIsValid) {
        var _dur = Duration.fromISO(s, opts);

        if (_dur.isValid) {
          return Interval.before(end, _dur);
        }
      }
    }

    return Interval.invalid("unparsable", "the input \"" + text + "\" can't be parsed as ISO 8601");
  }
  /**
   * Check if an object is an Interval. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  Interval.isInterval = function isInterval(o) {
    return o && o.isLuxonInterval || false;
  }
  /**
   * Returns the start of the Interval
   * @type {DateTime}
   */
  ;

  var _proto = Interval.prototype;

  /**
   * Returns the length of the Interval in the specified unit.
   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.
   * @return {number}
   */
  _proto.length = function length(unit) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    return this.isValid ? this.toDuration.apply(this, [unit]).get(unit) : NaN;
  }
  /**
   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.
   * Unlike {@link length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'
   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'
   * @param {string} [unit='milliseconds'] - the unit of time to count.
   * @return {number}
   */
  ;

  _proto.count = function count(unit) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (!this.isValid) return NaN;
    var start = this.start.startOf(unit),
        end = this.end.startOf(unit);
    return Math.floor(end.diff(start, unit).get(unit)) + 1;
  }
  /**
   * Returns whether this Interval's start and end are both in the same unit of time
   * @param {string} unit - the unit of time to check sameness on
   * @return {boolean}
   */
  ;

  _proto.hasSame = function hasSame(unit) {
    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;
  }
  /**
   * Return whether this Interval has the same start and end DateTimes.
   * @return {boolean}
   */
  ;

  _proto.isEmpty = function isEmpty() {
    return this.s.valueOf() === this.e.valueOf();
  }
  /**
   * Return whether this Interval's start is after the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.isAfter = function isAfter(dateTime) {
    if (!this.isValid) return false;
    return this.s > dateTime;
  }
  /**
   * Return whether this Interval's end is before the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.isBefore = function isBefore(dateTime) {
    if (!this.isValid) return false;
    return this.e <= dateTime;
  }
  /**
   * Return whether this Interval contains the specified DateTime.
   * @param {DateTime} dateTime
   * @return {boolean}
   */
  ;

  _proto.contains = function contains(dateTime) {
    if (!this.isValid) return false;
    return this.s <= dateTime && this.e > dateTime;
  }
  /**
   * "Sets" the start and/or end dates. Returns a newly-constructed Interval.
   * @param {Object} values - the values to set
   * @param {DateTime} values.start - the starting DateTime
   * @param {DateTime} values.end - the ending DateTime
   * @return {Interval}
   */
  ;

  _proto.set = function set(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        start = _ref.start,
        end = _ref.end;

    if (!this.isValid) return this;
    return Interval.fromDateTimes(start || this.s, end || this.e);
  }
  /**
   * Split this Interval at each of the specified DateTimes
   * @param {...[DateTime]} dateTimes - the unit of time to count.
   * @return {[Interval]}
   */
  ;

  _proto.splitAt = function splitAt() {
    var _this = this;

    if (!this.isValid) return [];

    for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {
      dateTimes[_key] = arguments[_key];
    }

    var sorted = dateTimes.map(friendlyDateTime).filter(function (d) {
      return _this.contains(d);
    }).sort(),
        results = [];
    var s = this.s,
        i = 0;

    while (s < this.e) {
      var added = sorted[i] || this.e,
          next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s, next));
      s = next;
      i += 1;
    }

    return results;
  }
  /**
   * Split this Interval into smaller Intervals, each of the specified length.
   * Left over time is grouped into a smaller interval
   * @param {Duration|Object|number} duration - The length of each resulting interval.
   * @return {[Interval]}
   */
  ;

  _proto.splitBy = function splitBy(duration) {
    var dur = friendlyDuration(duration);

    if (!this.isValid || !dur.isValid || dur.as("milliseconds") === 0) {
      return [];
    }

    var s = this.s,
        idx = 1,
        next;
    var results = [];

    while (s < this.e) {
      var added = this.start.plus(dur.mapUnits(function (x) {
        return x * idx;
      }));
      next = +added > +this.e ? this.e : added;
      results.push(Interval.fromDateTimes(s, next));
      s = next;
      idx += 1;
    }

    return results;
  }
  /**
   * Split this Interval into the specified number of smaller intervals.
   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.
   * @return {[Interval]}
   */
  ;

  _proto.divideEqually = function divideEqually(numberOfParts) {
    if (!this.isValid) return [];
    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);
  }
  /**
   * Return whether this Interval overlaps with the specified Interval
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.overlaps = function overlaps(other) {
    return this.e > other.s && this.s < other.e;
  }
  /**
   * Return whether this Interval's end is adjacent to the specified Interval's start.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.abutsStart = function abutsStart(other) {
    if (!this.isValid) return false;
    return +this.e === +other.s;
  }
  /**
   * Return whether this Interval's start is adjacent to the specified Interval's end.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.abutsEnd = function abutsEnd(other) {
    if (!this.isValid) return false;
    return +other.e === +this.s;
  }
  /**
   * Return whether this Interval engulfs the start and end of the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.engulfs = function engulfs(other) {
    if (!this.isValid) return false;
    return this.s <= other.s && this.e >= other.e;
  }
  /**
   * Return whether this Interval has the same start and end as the specified Interval.
   * @param {Interval} other
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(other) {
    if (!this.isValid || !other.isValid) {
      return false;
    }

    return this.s.equals(other.s) && this.e.equals(other.e);
  }
  /**
   * Return an Interval representing the intersection of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.
   * Returns null if the intersection is empty, meaning, the intervals don't intersect.
   * @param {Interval} other
   * @return {Interval}
   */
  ;

  _proto.intersection = function intersection(other) {
    if (!this.isValid) return this;
    var s = this.s > other.s ? this.s : other.s,
        e = this.e < other.e ? this.e : other.e;

    if (s >= e) {
      return null;
    } else {
      return Interval.fromDateTimes(s, e);
    }
  }
  /**
   * Return an Interval representing the union of this Interval and the specified Interval.
   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.
   * @param {Interval} other
   * @return {Interval}
   */
  ;

  _proto.union = function union(other) {
    if (!this.isValid) return this;
    var s = this.s < other.s ? this.s : other.s,
        e = this.e > other.e ? this.e : other.e;
    return Interval.fromDateTimes(s, e);
  }
  /**
   * Merge an array of Intervals into a equivalent minimal set of Intervals.
   * Combines overlapping and adjacent Intervals.
   * @param {[Interval]} intervals
   * @return {[Interval]}
   */
  ;

  Interval.merge = function merge(intervals) {
    var _intervals$sort$reduc = intervals.sort(function (a, b) {
      return a.s - b.s;
    }).reduce(function (_ref2, item) {
      var sofar = _ref2[0],
          current = _ref2[1];

      if (!current) {
        return [sofar, item];
      } else if (current.overlaps(item) || current.abutsStart(item)) {
        return [sofar, current.union(item)];
      } else {
        return [sofar.concat([current]), item];
      }
    }, [[], null]),
        found = _intervals$sort$reduc[0],
        final = _intervals$sort$reduc[1];

    if (final) {
      found.push(final);
    }

    return found;
  }
  /**
   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.
   * @param {[Interval]} intervals
   * @return {[Interval]}
   */
  ;

  Interval.xor = function xor(intervals) {
    var _Array$prototype;

    var start = null,
        currentCount = 0;

    var results = [],
        ends = intervals.map(function (i) {
      return [{
        time: i.s,
        type: "s"
      }, {
        time: i.e,
        type: "e"
      }];
    }),
        flattened = (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, ends),
        arr = flattened.sort(function (a, b) {
      return a.time - b.time;
    });

    for (var _iterator = _createForOfIteratorHelperLoose(arr), _step; !(_step = _iterator()).done;) {
      var i = _step.value;
      currentCount += i.type === "s" ? 1 : -1;

      if (currentCount === 1) {
        start = i.time;
      } else {
        if (start && +start !== +i.time) {
          results.push(Interval.fromDateTimes(start, i.time));
        }

        start = null;
      }
    }

    return Interval.merge(results);
  }
  /**
   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.
   * @param {...Interval} intervals
   * @return {[Interval]}
   */
  ;

  _proto.difference = function difference() {
    var _this2 = this;

    for (var _len2 = arguments.length, intervals = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      intervals[_key2] = arguments[_key2];
    }

    return Interval.xor([this].concat(intervals)).map(function (i) {
      return _this2.intersection(i);
    }).filter(function (i) {
      return i && !i.isEmpty();
    });
  }
  /**
   * Returns a string representation of this Interval appropriate for debugging.
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    if (!this.isValid) return INVALID$1;
    return "[" + this.s.toISO() + " \u2013 " + this.e.toISO() + ")";
  }
  /**
   * Returns an ISO 8601-compliant string representation of this Interval.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime.toISO}
   * @return {string}
   */
  ;

  _proto.toISO = function toISO(opts) {
    if (!this.isValid) return INVALID$1;
    return this.s.toISO(opts) + "/" + this.e.toISO(opts);
  }
  /**
   * Returns an ISO 8601-compliant string representation of date of this Interval.
   * The time components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @return {string}
   */
  ;

  _proto.toISODate = function toISODate() {
    if (!this.isValid) return INVALID$1;
    return this.s.toISODate() + "/" + this.e.toISODate();
  }
  /**
   * Returns an ISO 8601-compliant string representation of time of this Interval.
   * The date components are ignored.
   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
   * @param {Object} opts - The same options as {@link DateTime.toISO}
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(opts) {
    if (!this.isValid) return INVALID$1;
    return this.s.toISOTime(opts) + "/" + this.e.toISOTime(opts);
  }
  /**
   * Returns a string representation of this Interval formatted according to the specified format string.
   * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime.toFormat} for details.
   * @param {Object} opts - options
   * @param {string} [opts.separator =  ' – '] - a separator to place between the start and end representations
   * @return {string}
   */
  ;

  _proto.toFormat = function toFormat(dateFormat, _temp2) {
    var _ref3 = _temp2 === void 0 ? {} : _temp2,
        _ref3$separator = _ref3.separator,
        separator = _ref3$separator === void 0 ? " – " : _ref3$separator;

    if (!this.isValid) return INVALID$1;
    return "" + this.s.toFormat(dateFormat) + separator + this.e.toFormat(dateFormat);
  }
  /**
   * Return a Duration representing the time spanned by this interval.
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }
   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }
   * @return {Duration}
   */
  ;

  _proto.toDuration = function toDuration(unit, opts) {
    if (!this.isValid) {
      return Duration.invalid(this.invalidReason);
    }

    return this.e.diff(this.s, unit, opts);
  }
  /**
   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes
   * @param {function} mapFn
   * @return {Interval}
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())
   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))
   */
  ;

  _proto.mapEndpoints = function mapEndpoints(mapFn) {
    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));
  };

  _createClass(Interval, [{
    key: "start",
    get: function get() {
      return this.isValid ? this.s : null;
    }
    /**
     * Returns the end of the Interval
     * @type {DateTime}
     */

  }, {
    key: "end",
    get: function get() {
      return this.isValid ? this.e : null;
    }
    /**
     * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.
     * @type {boolean}
     */

  }, {
    key: "isValid",
    get: function get() {
      return this.invalidReason === null;
    }
    /**
     * Returns an error code if this Interval is invalid, or null if the Interval is valid
     * @type {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this Interval became invalid, or null if the Interval is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
  }]);

  return Interval;
}();

/**
 * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.
 */

var Info = /*#__PURE__*/function () {
  function Info() {}

  /**
   * Return whether the specified zone contains a DST.
   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.
   * @return {boolean}
   */
  Info.hasDST = function hasDST(zone) {
    if (zone === void 0) {
      zone = Settings.defaultZone;
    }

    var proto = DateTime.now().setZone(zone).set({
      month: 12
    });
    return !zone.universal && proto.offset !== proto.set({
      month: 6
    }).offset;
  }
  /**
   * Return whether the specified zone is a valid IANA specifier.
   * @param {string} zone - Zone to check
   * @return {boolean}
   */
  ;

  Info.isValidIANAZone = function isValidIANAZone(zone) {
    return IANAZone.isValidSpecifier(zone) && IANAZone.isValidZone(zone);
  }
  /**
   * Converts the input into a {@link Zone} instance.
   *
   * * If `input` is already a Zone instance, it is returned unchanged.
   * * If `input` is a string containing a valid time zone name, a Zone instance
   *   with that name is returned.
   * * If `input` is a string that doesn't refer to a known time zone, a Zone
   *   instance with {@link Zone.isValid} == false is returned.
   * * If `input is a number, a Zone instance with the specified fixed offset
   *   in minutes is returned.
   * * If `input` is `null` or `undefined`, the default zone is returned.
   * @param {string|Zone|number} [input] - the value to be converted
   * @return {Zone}
   */
  ;

  Info.normalizeZone = function normalizeZone$1(input) {
    return normalizeZone(input, Settings.defaultZone);
  }
  /**
   * Return an array of standalone month names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @example Info.months()[0] //=> 'January'
   * @example Info.months('short')[0] //=> 'Jan'
   * @example Info.months('numeric')[0] //=> '1'
   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'
   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '١'
   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabiʻ I'
   * @return {[string]}
   */
  ;

  Info.months = function months(length, _temp) {
    if (length === void 0) {
      length = "long";
    }

    var _ref = _temp === void 0 ? {} : _temp,
        _ref$locale = _ref.locale,
        locale = _ref$locale === void 0 ? null : _ref$locale,
        _ref$numberingSystem = _ref.numberingSystem,
        numberingSystem = _ref$numberingSystem === void 0 ? null : _ref$numberingSystem,
        _ref$locObj = _ref.locObj,
        locObj = _ref$locObj === void 0 ? null : _ref$locObj,
        _ref$outputCalendar = _ref.outputCalendar,
        outputCalendar = _ref$outputCalendar === void 0 ? "gregory" : _ref$outputCalendar;

    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);
  }
  /**
   * Return an array of format month names.
   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that
   * changes the string.
   * See {@link months}
   * @param {string} [length='long'] - the length of the month representation, such as "numeric", "2-digit", "narrow", "short", "long"
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @param {string} [opts.outputCalendar='gregory'] - the calendar
   * @return {[string]}
   */
  ;

  Info.monthsFormat = function monthsFormat(length, _temp2) {
    if (length === void 0) {
      length = "long";
    }

    var _ref2 = _temp2 === void 0 ? {} : _temp2,
        _ref2$locale = _ref2.locale,
        locale = _ref2$locale === void 0 ? null : _ref2$locale,
        _ref2$numberingSystem = _ref2.numberingSystem,
        numberingSystem = _ref2$numberingSystem === void 0 ? null : _ref2$numberingSystem,
        _ref2$locObj = _ref2.locObj,
        locObj = _ref2$locObj === void 0 ? null : _ref2$locObj,
        _ref2$outputCalendar = _ref2.outputCalendar,
        outputCalendar = _ref2$outputCalendar === void 0 ? "gregory" : _ref2$outputCalendar;

    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);
  }
  /**
   * Return an array of standalone week names.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @example Info.weekdays()[0] //=> 'Monday'
   * @example Info.weekdays('short')[0] //=> 'Mon'
   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'
   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> 'الاثنين'
   * @return {[string]}
   */
  ;

  Info.weekdays = function weekdays(length, _temp3) {
    if (length === void 0) {
      length = "long";
    }

    var _ref3 = _temp3 === void 0 ? {} : _temp3,
        _ref3$locale = _ref3.locale,
        locale = _ref3$locale === void 0 ? null : _ref3$locale,
        _ref3$numberingSystem = _ref3.numberingSystem,
        numberingSystem = _ref3$numberingSystem === void 0 ? null : _ref3$numberingSystem,
        _ref3$locObj = _ref3.locObj,
        locObj = _ref3$locObj === void 0 ? null : _ref3$locObj;

    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);
  }
  /**
   * Return an array of format week names.
   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that
   * changes the string.
   * See {@link weekdays}
   * @param {string} [length='long'] - the length of the weekday representation, such as "narrow", "short", "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale=null] - the locale code
   * @param {string} [opts.numberingSystem=null] - the numbering system
   * @param {string} [opts.locObj=null] - an existing locale object to use
   * @return {[string]}
   */
  ;

  Info.weekdaysFormat = function weekdaysFormat(length, _temp4) {
    if (length === void 0) {
      length = "long";
    }

    var _ref4 = _temp4 === void 0 ? {} : _temp4,
        _ref4$locale = _ref4.locale,
        locale = _ref4$locale === void 0 ? null : _ref4$locale,
        _ref4$numberingSystem = _ref4.numberingSystem,
        numberingSystem = _ref4$numberingSystem === void 0 ? null : _ref4$numberingSystem,
        _ref4$locObj = _ref4.locObj,
        locObj = _ref4$locObj === void 0 ? null : _ref4$locObj;

    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);
  }
  /**
   * Return an array of meridiems.
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.meridiems() //=> [ 'AM', 'PM' ]
   * @example Info.meridiems({ locale: 'my' }) //=> [ 'နံနက်', 'ညနေ' ]
   * @return {[string]}
   */
  ;

  Info.meridiems = function meridiems(_temp5) {
    var _ref5 = _temp5 === void 0 ? {} : _temp5,
        _ref5$locale = _ref5.locale,
        locale = _ref5$locale === void 0 ? null : _ref5$locale;

    return Locale.create(locale).meridiems();
  }
  /**
   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.
   * @param {string} [length='short'] - the length of the era representation, such as "short" or "long".
   * @param {Object} opts - options
   * @param {string} [opts.locale] - the locale code
   * @example Info.eras() //=> [ 'BC', 'AD' ]
   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]
   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant Jésus-Christ', 'après Jésus-Christ' ]
   * @return {[string]}
   */
  ;

  Info.eras = function eras(length, _temp6) {
    if (length === void 0) {
      length = "short";
    }

    var _ref6 = _temp6 === void 0 ? {} : _temp6,
        _ref6$locale = _ref6.locale,
        locale = _ref6$locale === void 0 ? null : _ref6$locale;

    return Locale.create(locale, null, "gregory").eras(length);
  }
  /**
   * Return the set of available features in this environment.
   * Some features of Luxon are not available in all environments. For example, on older browsers, timezone support is not available. Use this function to figure out if that's the case.
   * Keys:
   * * `zones`: whether this environment supports IANA timezones
   * * `intlTokens`: whether this environment supports internationalized token-based formatting/parsing
   * * `intl`: whether this environment supports general internationalization
   * * `relative`: whether this environment supports relative time formatting
   * @example Info.features() //=> { intl: true, intlTokens: false, zones: true, relative: false }
   * @return {Object}
   */
  ;

  Info.features = function features() {
    var intl = false,
        intlTokens = false,
        zones = false,
        relative = false;

    if (hasIntl()) {
      intl = true;
      intlTokens = hasFormatToParts();
      relative = hasRelative();

      try {
        zones = new Intl.DateTimeFormat("en", {
          timeZone: "America/New_York"
        }).resolvedOptions().timeZone === "America/New_York";
      } catch (e) {
        zones = false;
      }
    }

    return {
      intl: intl,
      intlTokens: intlTokens,
      zones: zones,
      relative: relative
    };
  };

  return Info;
}();

function dayDiff(earlier, later) {
  var utcDayStart = function utcDayStart(dt) {
    return dt.toUTC(0, {
      keepLocalTime: true
    }).startOf("day").valueOf();
  },
      ms = utcDayStart(later) - utcDayStart(earlier);

  return Math.floor(Duration.fromMillis(ms).as("days"));
}

function highOrderDiffs(cursor, later, units) {
  var differs = [["years", function (a, b) {
    return b.year - a.year;
  }], ["quarters", function (a, b) {
    return b.quarter - a.quarter;
  }], ["months", function (a, b) {
    return b.month - a.month + (b.year - a.year) * 12;
  }], ["weeks", function (a, b) {
    var days = dayDiff(a, b);
    return (days - days % 7) / 7;
  }], ["days", dayDiff]];
  var results = {};
  var lowestOrder, highWater;

  for (var _i = 0, _differs = differs; _i < _differs.length; _i++) {
    var _differs$_i = _differs[_i],
        unit = _differs$_i[0],
        differ = _differs$_i[1];

    if (units.indexOf(unit) >= 0) {
      var _cursor$plus;

      lowestOrder = unit;
      var delta = differ(cursor, later);
      highWater = cursor.plus((_cursor$plus = {}, _cursor$plus[unit] = delta, _cursor$plus));

      if (highWater > later) {
        var _cursor$plus2;

        cursor = cursor.plus((_cursor$plus2 = {}, _cursor$plus2[unit] = delta - 1, _cursor$plus2));
        delta -= 1;
      } else {
        cursor = highWater;
      }

      results[unit] = delta;
    }
  }

  return [cursor, results, highWater, lowestOrder];
}

function _diff (earlier, later, units, opts) {
  var _highOrderDiffs = highOrderDiffs(earlier, later, units),
      cursor = _highOrderDiffs[0],
      results = _highOrderDiffs[1],
      highWater = _highOrderDiffs[2],
      lowestOrder = _highOrderDiffs[3];

  var remainingMillis = later - cursor;
  var lowerOrderUnits = units.filter(function (u) {
    return ["hours", "minutes", "seconds", "milliseconds"].indexOf(u) >= 0;
  });

  if (lowerOrderUnits.length === 0) {
    if (highWater < later) {
      var _cursor$plus3;

      highWater = cursor.plus((_cursor$plus3 = {}, _cursor$plus3[lowestOrder] = 1, _cursor$plus3));
    }

    if (highWater !== cursor) {
      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);
    }
  }

  var duration = Duration.fromObject(Object.assign(results, opts));

  if (lowerOrderUnits.length > 0) {
    var _Duration$fromMillis;

    return (_Duration$fromMillis = Duration.fromMillis(remainingMillis, opts)).shiftTo.apply(_Duration$fromMillis, lowerOrderUnits).plus(duration);
  } else {
    return duration;
  }
}

var numberingSystems = {
  arab: "[\u0660-\u0669]",
  arabext: "[\u06F0-\u06F9]",
  bali: "[\u1B50-\u1B59]",
  beng: "[\u09E6-\u09EF]",
  deva: "[\u0966-\u096F]",
  fullwide: "[\uFF10-\uFF19]",
  gujr: "[\u0AE6-\u0AEF]",
  hanidec: "[〇|一|二|三|四|五|六|七|八|九]",
  khmr: "[\u17E0-\u17E9]",
  knda: "[\u0CE6-\u0CEF]",
  laoo: "[\u0ED0-\u0ED9]",
  limb: "[\u1946-\u194F]",
  mlym: "[\u0D66-\u0D6F]",
  mong: "[\u1810-\u1819]",
  mymr: "[\u1040-\u1049]",
  orya: "[\u0B66-\u0B6F]",
  tamldec: "[\u0BE6-\u0BEF]",
  telu: "[\u0C66-\u0C6F]",
  thai: "[\u0E50-\u0E59]",
  tibt: "[\u0F20-\u0F29]",
  latn: "\\d"
};
var numberingSystemsUTF16 = {
  arab: [1632, 1641],
  arabext: [1776, 1785],
  bali: [6992, 7001],
  beng: [2534, 2543],
  deva: [2406, 2415],
  fullwide: [65296, 65303],
  gujr: [2790, 2799],
  khmr: [6112, 6121],
  knda: [3302, 3311],
  laoo: [3792, 3801],
  limb: [6470, 6479],
  mlym: [3430, 3439],
  mong: [6160, 6169],
  mymr: [4160, 4169],
  orya: [2918, 2927],
  tamldec: [3046, 3055],
  telu: [3174, 3183],
  thai: [3664, 3673],
  tibt: [3872, 3881]
}; // eslint-disable-next-line

var hanidecChars = numberingSystems.hanidec.replace(/[\[|\]]/g, "").split("");
function parseDigits(str) {
  var value = parseInt(str, 10);

  if (isNaN(value)) {
    value = "";

    for (var i = 0; i < str.length; i++) {
      var code = str.charCodeAt(i);

      if (str[i].search(numberingSystems.hanidec) !== -1) {
        value += hanidecChars.indexOf(str[i]);
      } else {
        for (var key in numberingSystemsUTF16) {
          var _numberingSystemsUTF = numberingSystemsUTF16[key],
              min = _numberingSystemsUTF[0],
              max = _numberingSystemsUTF[1];

          if (code >= min && code <= max) {
            value += code - min;
          }
        }
      }
    }

    return parseInt(value, 10);
  } else {
    return value;
  }
}
function digitRegex(_ref, append) {
  var numberingSystem = _ref.numberingSystem;

  if (append === void 0) {
    append = "";
  }

  return new RegExp("" + numberingSystems[numberingSystem || "latn"] + append);
}

var MISSING_FTP = "missing Intl.DateTimeFormat.formatToParts support";

function intUnit(regex, post) {
  if (post === void 0) {
    post = function post(i) {
      return i;
    };
  }

  return {
    regex: regex,
    deser: function deser(_ref) {
      var s = _ref[0];
      return post(parseDigits(s));
    }
  };
}

var NBSP = String.fromCharCode(160);
var spaceOrNBSP = "( |" + NBSP + ")";
var spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, "g");

function fixListRegex(s) {
  // make dots optional and also make them literal
  // make space and non breakable space characters interchangeable
  return s.replace(/\./g, "\\.?").replace(spaceOrNBSPRegExp, spaceOrNBSP);
}

function stripInsensitivities(s) {
  return s.replace(/\./g, "") // ignore dots that were made optional
  .replace(spaceOrNBSPRegExp, " ") // interchange space and nbsp
  .toLowerCase();
}

function oneOf(strings, startIndex) {
  if (strings === null) {
    return null;
  } else {
    return {
      regex: RegExp(strings.map(fixListRegex).join("|")),
      deser: function deser(_ref2) {
        var s = _ref2[0];
        return strings.findIndex(function (i) {
          return stripInsensitivities(s) === stripInsensitivities(i);
        }) + startIndex;
      }
    };
  }
}

function offset(regex, groups) {
  return {
    regex: regex,
    deser: function deser(_ref3) {
      var h = _ref3[1],
          m = _ref3[2];
      return signedOffset(h, m);
    },
    groups: groups
  };
}

function simple(regex) {
  return {
    regex: regex,
    deser: function deser(_ref4) {
      var s = _ref4[0];
      return s;
    }
  };
}

function escapeToken(value) {
  // eslint-disable-next-line no-useless-escape
  return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
}

function unitForToken(token, loc) {
  var one = digitRegex(loc),
      two = digitRegex(loc, "{2}"),
      three = digitRegex(loc, "{3}"),
      four = digitRegex(loc, "{4}"),
      six = digitRegex(loc, "{6}"),
      oneOrTwo = digitRegex(loc, "{1,2}"),
      oneToThree = digitRegex(loc, "{1,3}"),
      oneToSix = digitRegex(loc, "{1,6}"),
      oneToNine = digitRegex(loc, "{1,9}"),
      twoToFour = digitRegex(loc, "{2,4}"),
      fourToSix = digitRegex(loc, "{4,6}"),
      literal = function literal(t) {
    return {
      regex: RegExp(escapeToken(t.val)),
      deser: function deser(_ref5) {
        var s = _ref5[0];
        return s;
      },
      literal: true
    };
  },
      unitate = function unitate(t) {
    if (token.literal) {
      return literal(t);
    }

    switch (t.val) {
      // era
      case "G":
        return oneOf(loc.eras("short", false), 0);

      case "GG":
        return oneOf(loc.eras("long", false), 0);
      // years

      case "y":
        return intUnit(oneToSix);

      case "yy":
        return intUnit(twoToFour, untruncateYear);

      case "yyyy":
        return intUnit(four);

      case "yyyyy":
        return intUnit(fourToSix);

      case "yyyyyy":
        return intUnit(six);
      // months

      case "M":
        return intUnit(oneOrTwo);

      case "MM":
        return intUnit(two);

      case "MMM":
        return oneOf(loc.months("short", true, false), 1);

      case "MMMM":
        return oneOf(loc.months("long", true, false), 1);

      case "L":
        return intUnit(oneOrTwo);

      case "LL":
        return intUnit(two);

      case "LLL":
        return oneOf(loc.months("short", false, false), 1);

      case "LLLL":
        return oneOf(loc.months("long", false, false), 1);
      // dates

      case "d":
        return intUnit(oneOrTwo);

      case "dd":
        return intUnit(two);
      // ordinals

      case "o":
        return intUnit(oneToThree);

      case "ooo":
        return intUnit(three);
      // time

      case "HH":
        return intUnit(two);

      case "H":
        return intUnit(oneOrTwo);

      case "hh":
        return intUnit(two);

      case "h":
        return intUnit(oneOrTwo);

      case "mm":
        return intUnit(two);

      case "m":
        return intUnit(oneOrTwo);

      case "q":
        return intUnit(oneOrTwo);

      case "qq":
        return intUnit(two);

      case "s":
        return intUnit(oneOrTwo);

      case "ss":
        return intUnit(two);

      case "S":
        return intUnit(oneToThree);

      case "SSS":
        return intUnit(three);

      case "u":
        return simple(oneToNine);
      // meridiem

      case "a":
        return oneOf(loc.meridiems(), 0);
      // weekYear (k)

      case "kkkk":
        return intUnit(four);

      case "kk":
        return intUnit(twoToFour, untruncateYear);
      // weekNumber (W)

      case "W":
        return intUnit(oneOrTwo);

      case "WW":
        return intUnit(two);
      // weekdays

      case "E":
      case "c":
        return intUnit(one);

      case "EEE":
        return oneOf(loc.weekdays("short", false, false), 1);

      case "EEEE":
        return oneOf(loc.weekdays("long", false, false), 1);

      case "ccc":
        return oneOf(loc.weekdays("short", true, false), 1);

      case "cccc":
        return oneOf(loc.weekdays("long", true, false), 1);
      // offset/zone

      case "Z":
      case "ZZ":
        return offset(new RegExp("([+-]" + oneOrTwo.source + ")(?::(" + two.source + "))?"), 2);

      case "ZZZ":
        return offset(new RegExp("([+-]" + oneOrTwo.source + ")(" + two.source + ")?"), 2);
      // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing
      // because we don't have any way to figure out what they are

      case "z":
        return simple(/[a-z_+-/]{1,256}?/i);

      default:
        return literal(t);
    }
  };

  var unit = unitate(token) || {
    invalidReason: MISSING_FTP
  };
  unit.token = token;
  return unit;
}

var partTypeStyleToTokenVal = {
  year: {
    "2-digit": "yy",
    numeric: "yyyyy"
  },
  month: {
    numeric: "M",
    "2-digit": "MM",
    short: "MMM",
    long: "MMMM"
  },
  day: {
    numeric: "d",
    "2-digit": "dd"
  },
  weekday: {
    short: "EEE",
    long: "EEEE"
  },
  dayperiod: "a",
  dayPeriod: "a",
  hour: {
    numeric: "h",
    "2-digit": "hh"
  },
  minute: {
    numeric: "m",
    "2-digit": "mm"
  },
  second: {
    numeric: "s",
    "2-digit": "ss"
  }
};

function tokenForPart(part, locale, formatOpts) {
  var type = part.type,
      value = part.value;

  if (type === "literal") {
    return {
      literal: true,
      val: value
    };
  }

  var style = formatOpts[type];
  var val = partTypeStyleToTokenVal[type];

  if (typeof val === "object") {
    val = val[style];
  }

  if (val) {
    return {
      literal: false,
      val: val
    };
  }

  return undefined;
}

function buildRegex(units) {
  var re = units.map(function (u) {
    return u.regex;
  }).reduce(function (f, r) {
    return f + "(" + r.source + ")";
  }, "");
  return ["^" + re + "$", units];
}

function match(input, regex, handlers) {
  var matches = input.match(regex);

  if (matches) {
    var all = {};
    var matchIndex = 1;

    for (var i in handlers) {
      if (hasOwnProperty(handlers, i)) {
        var h = handlers[i],
            groups = h.groups ? h.groups + 1 : 1;

        if (!h.literal && h.token) {
          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));
        }

        matchIndex += groups;
      }
    }

    return [matches, all];
  } else {
    return [matches, {}];
  }
}

function dateTimeFromMatches(matches) {
  var toField = function toField(token) {
    switch (token) {
      case "S":
        return "millisecond";

      case "s":
        return "second";

      case "m":
        return "minute";

      case "h":
      case "H":
        return "hour";

      case "d":
        return "day";

      case "o":
        return "ordinal";

      case "L":
      case "M":
        return "month";

      case "y":
        return "year";

      case "E":
      case "c":
        return "weekday";

      case "W":
        return "weekNumber";

      case "k":
        return "weekYear";

      case "q":
        return "quarter";

      default:
        return null;
    }
  };

  var zone;

  if (!isUndefined(matches.Z)) {
    zone = new FixedOffsetZone(matches.Z);
  } else if (!isUndefined(matches.z)) {
    zone = IANAZone.create(matches.z);
  } else {
    zone = null;
  }

  if (!isUndefined(matches.q)) {
    matches.M = (matches.q - 1) * 3 + 1;
  }

  if (!isUndefined(matches.h)) {
    if (matches.h < 12 && matches.a === 1) {
      matches.h += 12;
    } else if (matches.h === 12 && matches.a === 0) {
      matches.h = 0;
    }
  }

  if (matches.G === 0 && matches.y) {
    matches.y = -matches.y;
  }

  if (!isUndefined(matches.u)) {
    matches.S = parseMillis(matches.u);
  }

  var vals = Object.keys(matches).reduce(function (r, k) {
    var f = toField(k);

    if (f) {
      r[f] = matches[k];
    }

    return r;
  }, {});
  return [vals, zone];
}

var dummyDateTimeCache = null;

function getDummyDateTime() {
  if (!dummyDateTimeCache) {
    dummyDateTimeCache = DateTime.fromMillis(1555555555555);
  }

  return dummyDateTimeCache;
}

function maybeExpandMacroToken(token, locale) {
  if (token.literal) {
    return token;
  }

  var formatOpts = Formatter.macroTokenToFormatOpts(token.val);

  if (!formatOpts) {
    return token;
  }

  var formatter = Formatter.create(locale, formatOpts);
  var parts = formatter.formatDateTimeParts(getDummyDateTime());
  var tokens = parts.map(function (p) {
    return tokenForPart(p, locale, formatOpts);
  });

  if (tokens.includes(undefined)) {
    return token;
  }

  return tokens;
}

function expandMacroTokens(tokens, locale) {
  var _Array$prototype;

  return (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, tokens.map(function (t) {
    return maybeExpandMacroToken(t, locale);
  }));
}
/**
 * @private
 */


function explainFromTokens(locale, input, format) {
  var tokens = expandMacroTokens(Formatter.parseFormat(format), locale),
      units = tokens.map(function (t) {
    return unitForToken(t, locale);
  }),
      disqualifyingUnit = units.find(function (t) {
    return t.invalidReason;
  });

  if (disqualifyingUnit) {
    return {
      input: input,
      tokens: tokens,
      invalidReason: disqualifyingUnit.invalidReason
    };
  } else {
    var _buildRegex = buildRegex(units),
        regexString = _buildRegex[0],
        handlers = _buildRegex[1],
        regex = RegExp(regexString, "i"),
        _match = match(input, regex, handlers),
        rawMatches = _match[0],
        matches = _match[1],
        _ref6 = matches ? dateTimeFromMatches(matches) : [null, null],
        result = _ref6[0],
        zone = _ref6[1];

    if (hasOwnProperty(matches, "a") && hasOwnProperty(matches, "H")) {
      throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");
    }

    return {
      input: input,
      tokens: tokens,
      regex: regex,
      rawMatches: rawMatches,
      matches: matches,
      result: result,
      zone: zone
    };
  }
}
function parseFromTokens(locale, input, format) {
  var _explainFromTokens = explainFromTokens(locale, input, format),
      result = _explainFromTokens.result,
      zone = _explainFromTokens.zone,
      invalidReason = _explainFromTokens.invalidReason;

  return [result, zone, invalidReason];
}

var nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
    leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];

function unitOutOfRange(unit, value) {
  return new Invalid("unit out of range", "you specified " + value + " (of type " + typeof value + ") as a " + unit + ", which is invalid");
}

function dayOfWeek(year, month, day) {
  var js = new Date(Date.UTC(year, month - 1, day)).getUTCDay();
  return js === 0 ? 7 : js;
}

function computeOrdinal(year, month, day) {
  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];
}

function uncomputeOrdinal(year, ordinal) {
  var table = isLeapYear(year) ? leapLadder : nonLeapLadder,
      month0 = table.findIndex(function (i) {
    return i < ordinal;
  }),
      day = ordinal - table[month0];
  return {
    month: month0 + 1,
    day: day
  };
}
/**
 * @private
 */


function gregorianToWeek(gregObj) {
  var year = gregObj.year,
      month = gregObj.month,
      day = gregObj.day,
      ordinal = computeOrdinal(year, month, day),
      weekday = dayOfWeek(year, month, day);
  var weekNumber = Math.floor((ordinal - weekday + 10) / 7),
      weekYear;

  if (weekNumber < 1) {
    weekYear = year - 1;
    weekNumber = weeksInWeekYear(weekYear);
  } else if (weekNumber > weeksInWeekYear(year)) {
    weekYear = year + 1;
    weekNumber = 1;
  } else {
    weekYear = year;
  }

  return Object.assign({
    weekYear: weekYear,
    weekNumber: weekNumber,
    weekday: weekday
  }, timeObject(gregObj));
}
function weekToGregorian(weekData) {
  var weekYear = weekData.weekYear,
      weekNumber = weekData.weekNumber,
      weekday = weekData.weekday,
      weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),
      yearInDays = daysInYear(weekYear);
  var ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,
      year;

  if (ordinal < 1) {
    year = weekYear - 1;
    ordinal += daysInYear(year);
  } else if (ordinal > yearInDays) {
    year = weekYear + 1;
    ordinal -= daysInYear(weekYear);
  } else {
    year = weekYear;
  }

  var _uncomputeOrdinal = uncomputeOrdinal(year, ordinal),
      month = _uncomputeOrdinal.month,
      day = _uncomputeOrdinal.day;

  return Object.assign({
    year: year,
    month: month,
    day: day
  }, timeObject(weekData));
}
function gregorianToOrdinal(gregData) {
  var year = gregData.year,
      month = gregData.month,
      day = gregData.day,
      ordinal = computeOrdinal(year, month, day);
  return Object.assign({
    year: year,
    ordinal: ordinal
  }, timeObject(gregData));
}
function ordinalToGregorian(ordinalData) {
  var year = ordinalData.year,
      ordinal = ordinalData.ordinal,
      _uncomputeOrdinal2 = uncomputeOrdinal(year, ordinal),
      month = _uncomputeOrdinal2.month,
      day = _uncomputeOrdinal2.day;

  return Object.assign({
    year: year,
    month: month,
    day: day
  }, timeObject(ordinalData));
}
function hasInvalidWeekData(obj) {
  var validYear = isInteger(obj.weekYear),
      validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),
      validWeekday = integerBetween(obj.weekday, 1, 7);

  if (!validYear) {
    return unitOutOfRange("weekYear", obj.weekYear);
  } else if (!validWeek) {
    return unitOutOfRange("week", obj.week);
  } else if (!validWeekday) {
    return unitOutOfRange("weekday", obj.weekday);
  } else return false;
}
function hasInvalidOrdinalData(obj) {
  var validYear = isInteger(obj.year),
      validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));

  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validOrdinal) {
    return unitOutOfRange("ordinal", obj.ordinal);
  } else return false;
}
function hasInvalidGregorianData(obj) {
  var validYear = isInteger(obj.year),
      validMonth = integerBetween(obj.month, 1, 12),
      validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));

  if (!validYear) {
    return unitOutOfRange("year", obj.year);
  } else if (!validMonth) {
    return unitOutOfRange("month", obj.month);
  } else if (!validDay) {
    return unitOutOfRange("day", obj.day);
  } else return false;
}
function hasInvalidTimeData(obj) {
  var hour = obj.hour,
      minute = obj.minute,
      second = obj.second,
      millisecond = obj.millisecond;
  var validHour = integerBetween(hour, 0, 23) || hour === 24 && minute === 0 && second === 0 && millisecond === 0,
      validMinute = integerBetween(minute, 0, 59),
      validSecond = integerBetween(second, 0, 59),
      validMillisecond = integerBetween(millisecond, 0, 999);

  if (!validHour) {
    return unitOutOfRange("hour", hour);
  } else if (!validMinute) {
    return unitOutOfRange("minute", minute);
  } else if (!validSecond) {
    return unitOutOfRange("second", second);
  } else if (!validMillisecond) {
    return unitOutOfRange("millisecond", millisecond);
  } else return false;
}

var INVALID$2 = "Invalid DateTime";
var MAX_DATE = 8.64e15;

function unsupportedZone(zone) {
  return new Invalid("unsupported zone", "the zone \"" + zone.name + "\" is not supported");
} // we cache week data on the DT object and this intermediates the cache


function possiblyCachedWeekData(dt) {
  if (dt.weekData === null) {
    dt.weekData = gregorianToWeek(dt.c);
  }

  return dt.weekData;
} // clone really means, "make a new object with these modifications". all "setters" really use this
// to create a new object while only changing some of the properties


function clone$1(inst, alts) {
  var current = {
    ts: inst.ts,
    zone: inst.zone,
    c: inst.c,
    o: inst.o,
    loc: inst.loc,
    invalid: inst.invalid
  };
  return new DateTime(Object.assign({}, current, alts, {
    old: current
  }));
} // find the right offset a given local time. The o input is our guess, which determines which
// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)


function fixOffset(localTS, o, tz) {
  // Our UTC time is just a guess because our offset is just a guess
  var utcGuess = localTS - o * 60 * 1000; // Test whether the zone matches the offset for this ts

  var o2 = tz.offset(utcGuess); // If so, offset didn't change and we're done

  if (o === o2) {
    return [utcGuess, o];
  } // If not, change the ts by the difference in the offset


  utcGuess -= (o2 - o) * 60 * 1000; // If that gives us the local time we want, we're done

  var o3 = tz.offset(utcGuess);

  if (o2 === o3) {
    return [utcGuess, o2];
  } // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time


  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];
} // convert an epoch timestamp into a calendar object with the given offset


function tsToObj(ts, offset) {
  ts += offset * 60 * 1000;
  var d = new Date(ts);
  return {
    year: d.getUTCFullYear(),
    month: d.getUTCMonth() + 1,
    day: d.getUTCDate(),
    hour: d.getUTCHours(),
    minute: d.getUTCMinutes(),
    second: d.getUTCSeconds(),
    millisecond: d.getUTCMilliseconds()
  };
} // convert a calendar object to a epoch timestamp


function objToTS(obj, offset, zone) {
  return fixOffset(objToLocalTS(obj), offset, zone);
} // create a new DT instance by adding a duration, adjusting for DSTs


function adjustTime(inst, dur) {
  var oPre = inst.o,
      year = inst.c.year + Math.trunc(dur.years),
      month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,
      c = Object.assign({}, inst.c, {
    year: year,
    month: month,
    day: Math.min(inst.c.day, daysInMonth(year, month)) + Math.trunc(dur.days) + Math.trunc(dur.weeks) * 7
  }),
      millisToAdd = Duration.fromObject({
    years: dur.years - Math.trunc(dur.years),
    quarters: dur.quarters - Math.trunc(dur.quarters),
    months: dur.months - Math.trunc(dur.months),
    weeks: dur.weeks - Math.trunc(dur.weeks),
    days: dur.days - Math.trunc(dur.days),
    hours: dur.hours,
    minutes: dur.minutes,
    seconds: dur.seconds,
    milliseconds: dur.milliseconds
  }).as("milliseconds"),
      localTS = objToLocalTS(c);

  var _fixOffset = fixOffset(localTS, oPre, inst.zone),
      ts = _fixOffset[0],
      o = _fixOffset[1];

  if (millisToAdd !== 0) {
    ts += millisToAdd; // that could have changed the offset by going over a DST, but we want to keep the ts the same

    o = inst.zone.offset(ts);
  }

  return {
    ts: ts,
    o: o
  };
} // helper useful in turning the results of parsing into real dates
// by handling the zone options


function parseDataToDateTime(parsed, parsedZone, opts, format, text) {
  var setZone = opts.setZone,
      zone = opts.zone;

  if (parsed && Object.keys(parsed).length !== 0) {
    var interpretationZone = parsedZone || zone,
        inst = DateTime.fromObject(Object.assign(parsed, opts, {
      zone: interpretationZone,
      // setZone is a valid option in the calling methods, but not in fromObject
      setZone: undefined
    }));
    return setZone ? inst : inst.setZone(zone);
  } else {
    return DateTime.invalid(new Invalid("unparsable", "the input \"" + text + "\" can't be parsed as " + format));
  }
} // if you want to output a technical format (e.g. RFC 2822), this helper
// helps handle the details


function toTechFormat(dt, format, allowZ) {
  if (allowZ === void 0) {
    allowZ = true;
  }

  return dt.isValid ? Formatter.create(Locale.create("en-US"), {
    allowZ: allowZ,
    forceSimple: true
  }).formatDateTimeFromString(dt, format) : null;
} // technical time formats (e.g. the time part of ISO 8601), take some options
// and this commonizes their handling


function toTechTimeFormat(dt, _ref) {
  var _ref$suppressSeconds = _ref.suppressSeconds,
      suppressSeconds = _ref$suppressSeconds === void 0 ? false : _ref$suppressSeconds,
      _ref$suppressMillisec = _ref.suppressMilliseconds,
      suppressMilliseconds = _ref$suppressMillisec === void 0 ? false : _ref$suppressMillisec,
      includeOffset = _ref.includeOffset,
      _ref$includePrefix = _ref.includePrefix,
      includePrefix = _ref$includePrefix === void 0 ? false : _ref$includePrefix,
      _ref$includeZone = _ref.includeZone,
      includeZone = _ref$includeZone === void 0 ? false : _ref$includeZone,
      _ref$spaceZone = _ref.spaceZone,
      spaceZone = _ref$spaceZone === void 0 ? false : _ref$spaceZone,
      _ref$format = _ref.format,
      format = _ref$format === void 0 ? "extended" : _ref$format;
  var fmt = format === "basic" ? "HHmm" : "HH:mm";

  if (!suppressSeconds || dt.second !== 0 || dt.millisecond !== 0) {
    fmt += format === "basic" ? "ss" : ":ss";

    if (!suppressMilliseconds || dt.millisecond !== 0) {
      fmt += ".SSS";
    }
  }

  if ((includeZone || includeOffset) && spaceZone) {
    fmt += " ";
  }

  if (includeZone) {
    fmt += "z";
  } else if (includeOffset) {
    fmt += format === "basic" ? "ZZZ" : "ZZ";
  }

  var str = toTechFormat(dt, fmt);

  if (includePrefix) {
    str = "T" + str;
  }

  return str;
} // defaults for unspecified units in the supported calendars


var defaultUnitValues = {
  month: 1,
  day: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
},
    defaultWeekUnitValues = {
  weekNumber: 1,
  weekday: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
},
    defaultOrdinalUnitValues = {
  ordinal: 1,
  hour: 0,
  minute: 0,
  second: 0,
  millisecond: 0
}; // Units in the supported calendars, sorted by bigness

var orderedUnits$1 = ["year", "month", "day", "hour", "minute", "second", "millisecond"],
    orderedWeekUnits = ["weekYear", "weekNumber", "weekday", "hour", "minute", "second", "millisecond"],
    orderedOrdinalUnits = ["year", "ordinal", "hour", "minute", "second", "millisecond"]; // standardize case and plurality in units

function normalizeUnit(unit) {
  var normalized = {
    year: "year",
    years: "year",
    month: "month",
    months: "month",
    day: "day",
    days: "day",
    hour: "hour",
    hours: "hour",
    minute: "minute",
    minutes: "minute",
    quarter: "quarter",
    quarters: "quarter",
    second: "second",
    seconds: "second",
    millisecond: "millisecond",
    milliseconds: "millisecond",
    weekday: "weekday",
    weekdays: "weekday",
    weeknumber: "weekNumber",
    weeksnumber: "weekNumber",
    weeknumbers: "weekNumber",
    weekyear: "weekYear",
    weekyears: "weekYear",
    ordinal: "ordinal"
  }[unit.toLowerCase()];
  if (!normalized) throw new InvalidUnitError(unit);
  return normalized;
} // this is a dumbed down version of fromObject() that runs about 60% faster
// but doesn't do any validation, makes a bunch of assumptions about what units
// are present, and so on.


function quickDT(obj, zone) {
  // assume we have the higher-order units
  for (var _iterator = _createForOfIteratorHelperLoose(orderedUnits$1), _step; !(_step = _iterator()).done;) {
    var u = _step.value;

    if (isUndefined(obj[u])) {
      obj[u] = defaultUnitValues[u];
    }
  }

  var invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);

  if (invalid) {
    return DateTime.invalid(invalid);
  }

  var tsNow = Settings.now(),
      offsetProvis = zone.offset(tsNow),
      _objToTS = objToTS(obj, offsetProvis, zone),
      ts = _objToTS[0],
      o = _objToTS[1];

  return new DateTime({
    ts: ts,
    zone: zone,
    o: o
  });
}

function diffRelative(start, end, opts) {
  var round = isUndefined(opts.round) ? true : opts.round,
      format = function format(c, unit) {
    c = roundTo(c, round || opts.calendary ? 0 : 2, true);
    var formatter = end.loc.clone(opts).relFormatter(opts);
    return formatter.format(c, unit);
  },
      differ = function differ(unit) {
    if (opts.calendary) {
      if (!end.hasSame(start, unit)) {
        return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);
      } else return 0;
    } else {
      return end.diff(start, unit).get(unit);
    }
  };

  if (opts.unit) {
    return format(differ(opts.unit), opts.unit);
  }

  for (var _iterator2 = _createForOfIteratorHelperLoose(opts.units), _step2; !(_step2 = _iterator2()).done;) {
    var unit = _step2.value;
    var count = differ(unit);

    if (Math.abs(count) >= 1) {
      return format(count, unit);
    }
  }

  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);
}
/**
 * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.
 *
 * A DateTime comprises of:
 * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.
 * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).
 * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.
 *
 * Here is a brief overview of the most commonly used functionality it provides:
 *
 * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link local}, {@link utc}, and (most flexibly) {@link fromObject}. To create one from a standard string format, use {@link fromISO}, {@link fromHTTP}, and {@link fromRFC2822}. To create one from a custom string format, use {@link fromFormat}. To create one from a native JS date, use {@link fromJSDate}.
 * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link toObject}), use the {@link year}, {@link month},
 * {@link day}, {@link hour}, {@link minute}, {@link second}, {@link millisecond} accessors.
 * * **Week calendar**: For ISO week calendar attributes, see the {@link weekYear}, {@link weekNumber}, and {@link weekday} accessors.
 * * **Configuration** See the {@link locale} and {@link numberingSystem} accessors.
 * * **Transformation**: To transform the DateTime into other DateTimes, use {@link set}, {@link reconfigure}, {@link setZone}, {@link setLocale}, {@link plus}, {@link minus}, {@link endOf}, {@link startOf}, {@link toUTC}, and {@link toLocal}.
 * * **Output**: To convert the DateTime to other representations, use the {@link toRelative}, {@link toRelativeCalendar}, {@link toJSON}, {@link toISO}, {@link toHTTP}, {@link toObject}, {@link toRFC2822}, {@link toString}, {@link toLocaleString}, {@link toFormat}, {@link toMillis} and {@link toJSDate}.
 *
 * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.
 */


var DateTime = /*#__PURE__*/function () {
  /**
   * @access private
   */
  function DateTime(config) {
    var zone = config.zone || Settings.defaultZone;
    var invalid = config.invalid || (Number.isNaN(config.ts) ? new Invalid("invalid input") : null) || (!zone.isValid ? unsupportedZone(zone) : null);
    /**
     * @access private
     */

    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;
    var c = null,
        o = null;

    if (!invalid) {
      var unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);

      if (unchanged) {
        var _ref2 = [config.old.c, config.old.o];
        c = _ref2[0];
        o = _ref2[1];
      } else {
        var ot = zone.offset(this.ts);
        c = tsToObj(this.ts, ot);
        invalid = Number.isNaN(c.year) ? new Invalid("invalid input") : null;
        c = invalid ? null : c;
        o = invalid ? null : ot;
      }
    }
    /**
     * @access private
     */


    this._zone = zone;
    /**
     * @access private
     */

    this.loc = config.loc || Locale.create();
    /**
     * @access private
     */

    this.invalid = invalid;
    /**
     * @access private
     */

    this.weekData = null;
    /**
     * @access private
     */

    this.c = c;
    /**
     * @access private
     */

    this.o = o;
    /**
     * @access private
     */

    this.isLuxonDateTime = true;
  } // CONSTRUCT

  /**
   * Create a DateTime for the current instant, in the system's time zone.
   *
   * Use Settings to override these default values if needed.
   * @example DateTime.now().toISO() //~> now in the ISO format
   * @return {DateTime}
   */


  DateTime.now = function now() {
    return new DateTime({});
  }
  /**
   * Create a local DateTime
   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month, 1-indexed
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.local()                            //~> now
   * @example DateTime.local(2017)                        //~> 2017-01-01T00:00:00
   * @example DateTime.local(2017, 3)                     //~> 2017-03-01T00:00:00
   * @example DateTime.local(2017, 3, 12)                 //~> 2017-03-12T00:00:00
   * @example DateTime.local(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00
   * @example DateTime.local(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00
   * @example DateTime.local(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10
   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765
   * @return {DateTime}
   */
  ;

  DateTime.local = function local(year, month, day, hour, minute, second, millisecond) {
    if (isUndefined(year)) {
      return DateTime.now();
    } else {
      return quickDT({
        year: year,
        month: month,
        day: day,
        hour: hour,
        minute: minute,
        second: second,
        millisecond: millisecond
      }, Settings.defaultZone);
    }
  }
  /**
   * Create a DateTime in UTC
   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used
   * @param {number} [month=1] - The month, 1-indexed
   * @param {number} [day=1] - The day of the month
   * @param {number} [hour=0] - The hour of the day, in 24-hour time
   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59
   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59
   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999
   * @example DateTime.utc()                            //~> now
   * @example DateTime.utc(2017)                        //~> 2017-01-01T00:00:00Z
   * @example DateTime.utc(2017, 3)                     //~> 2017-03-01T00:00:00Z
   * @example DateTime.utc(2017, 3, 12)                 //~> 2017-03-12T00:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5)              //~> 2017-03-12T05:00:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45)          //~> 2017-03-12T05:45:00Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)      //~> 2017-03-12T05:45:10Z
   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765) //~> 2017-03-12T05:45:10.765Z
   * @return {DateTime}
   */
  ;

  DateTime.utc = function utc(year, month, day, hour, minute, second, millisecond) {
    if (isUndefined(year)) {
      return new DateTime({
        ts: Settings.now(),
        zone: FixedOffsetZone.utcInstance
      });
    } else {
      return quickDT({
        year: year,
        month: month,
        day: day,
        hour: hour,
        minute: minute,
        second: second,
        millisecond: millisecond
      }, FixedOffsetZone.utcInstance);
    }
  }
  /**
   * Create a DateTime from a JavaScript Date object. Uses the default zone.
   * @param {Date} date - a JavaScript Date object
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @return {DateTime}
   */
  ;

  DateTime.fromJSDate = function fromJSDate(date, options) {
    if (options === void 0) {
      options = {};
    }

    var ts = isDate(date) ? date.valueOf() : NaN;

    if (Number.isNaN(ts)) {
      return DateTime.invalid("invalid input");
    }

    var zoneToUse = normalizeZone(options.zone, Settings.defaultZone);

    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }

    return new DateTime({
      ts: ts,
      zone: zoneToUse,
      loc: Locale.fromObject(options)
    });
  }
  /**
   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} milliseconds - a number of milliseconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromMillis = function fromMillis(milliseconds, options) {
    if (options === void 0) {
      options = {};
    }

    if (!isNumber(milliseconds)) {
      throw new InvalidArgumentError("fromMillis requires a numerical input, but received a " + typeof milliseconds + " with value " + milliseconds);
    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {
      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start
      return DateTime.invalid("Timestamp out of range");
    } else {
      return new DateTime({
        ts: milliseconds,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.
   * @param {number} seconds - a number of seconds since 1970 UTC
   * @param {Object} options - configuration options for the DateTime
   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into
   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance
   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromSeconds = function fromSeconds(seconds, options) {
    if (options === void 0) {
      options = {};
    }

    if (!isNumber(seconds)) {
      throw new InvalidArgumentError("fromSeconds requires a numerical input");
    } else {
      return new DateTime({
        ts: seconds * 1000,
        zone: normalizeZone(options.zone, Settings.defaultZone),
        loc: Locale.fromObject(options)
      });
    }
  }
  /**
   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.
   * @param {Object} obj - the object to create the DateTime from
   * @param {number} obj.year - a year, such as 1987
   * @param {number} obj.month - a month, 1-12
   * @param {number} obj.day - a day of the month, 1-31, depending on the month
   * @param {number} obj.ordinal - day of the year, 1-365 or 366
   * @param {number} obj.weekYear - an ISO week year
   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year
   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday
   * @param {number} obj.hour - hour of the day, 0-23
   * @param {number} obj.minute - minute of the hour, 0-59
   * @param {number} obj.second - second of the minute, 0-59
   * @param {number} obj.millisecond - millisecond of the second, 0-999
   * @param {string|Zone} [obj.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()
   * @param {string} [obj.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} obj.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} obj.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'
   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'utc' }),
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'local' })
   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6, zone: 'America/New_York' })
   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'
   * @return {DateTime}
   */
  ;

  DateTime.fromObject = function fromObject(obj) {
    var zoneToUse = normalizeZone(obj.zone, Settings.defaultZone);

    if (!zoneToUse.isValid) {
      return DateTime.invalid(unsupportedZone(zoneToUse));
    }

    var tsNow = Settings.now(),
        offsetProvis = zoneToUse.offset(tsNow),
        normalized = normalizeObject(obj, normalizeUnit, ["zone", "locale", "outputCalendar", "numberingSystem"]),
        containsOrdinal = !isUndefined(normalized.ordinal),
        containsGregorYear = !isUndefined(normalized.year),
        containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),
        containsGregor = containsGregorYear || containsGregorMD,
        definiteWeekDef = normalized.weekYear || normalized.weekNumber,
        loc = Locale.fromObject(obj); // cases:
    // just a weekday -> this week's instance of that weekday, no worries
    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error
    // (gregorian month or day) + ordinal -> error
    // otherwise just use weeks or ordinals or gregorian, depending on what's specified

    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }

    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }

    var useWeekData = definiteWeekDef || normalized.weekday && !containsGregor; // configure ourselves to deal with gregorian dates or week stuff

    var units,
        defaultValues,
        objNow = tsToObj(tsNow, offsetProvis);

    if (useWeekData) {
      units = orderedWeekUnits;
      defaultValues = defaultWeekUnitValues;
      objNow = gregorianToWeek(objNow);
    } else if (containsOrdinal) {
      units = orderedOrdinalUnits;
      defaultValues = defaultOrdinalUnitValues;
      objNow = gregorianToOrdinal(objNow);
    } else {
      units = orderedUnits$1;
      defaultValues = defaultUnitValues;
    } // set default values for missing stuff


    var foundFirst = false;

    for (var _iterator3 = _createForOfIteratorHelperLoose(units), _step3; !(_step3 = _iterator3()).done;) {
      var u = _step3.value;
      var v = normalized[u];

      if (!isUndefined(v)) {
        foundFirst = true;
      } else if (foundFirst) {
        normalized[u] = defaultValues[u];
      } else {
        normalized[u] = objNow[u];
      }
    } // make sure the values we have are in range


    var higherOrderInvalid = useWeekData ? hasInvalidWeekData(normalized) : containsOrdinal ? hasInvalidOrdinalData(normalized) : hasInvalidGregorianData(normalized),
        invalid = higherOrderInvalid || hasInvalidTimeData(normalized);

    if (invalid) {
      return DateTime.invalid(invalid);
    } // compute the actual time


    var gregorian = useWeekData ? weekToGregorian(normalized) : containsOrdinal ? ordinalToGregorian(normalized) : normalized,
        _objToTS2 = objToTS(gregorian, offsetProvis, zoneToUse),
        tsFinal = _objToTS2[0],
        offsetFinal = _objToTS2[1],
        inst = new DateTime({
      ts: tsFinal,
      zone: zoneToUse,
      o: offsetFinal,
      loc: loc
    }); // gregorian data + weekday serves only to validate


    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {
      return DateTime.invalid("mismatched weekday", "you can't specify both a weekday of " + normalized.weekday + " and a date of " + inst.toISO());
    }

    return inst;
  }
  /**
   * Create a DateTime from an ISO 8601 string
   * @param {string} text - the ISO string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance
   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromISO('2016-05-25T09:08:34.123')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')
   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})
   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})
   * @example DateTime.fromISO('2016-W05-4')
   * @return {DateTime}
   */
  ;

  DateTime.fromISO = function fromISO(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseISODate = parseISODate(text),
        vals = _parseISODate[0],
        parsedZone = _parseISODate[1];

    return parseDataToDateTime(vals, parsedZone, opts, "ISO 8601", text);
  }
  /**
   * Create a DateTime from an RFC 2822 string
   * @param {string} text - the RFC 2822 string
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')
   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')
   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')
   * @return {DateTime}
   */
  ;

  DateTime.fromRFC2822 = function fromRFC2822(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseRFC2822Date = parseRFC2822Date(text),
        vals = _parseRFC2822Date[0],
        parsedZone = _parseRFC2822Date[1];

    return parseDataToDateTime(vals, parsedZone, opts, "RFC 2822", text);
  }
  /**
   * Create a DateTime from an HTTP header date
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @param {string} text - the HTTP header date
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.
   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.
   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance
   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')
   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')
   * @return {DateTime}
   */
  ;

  DateTime.fromHTTP = function fromHTTP(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseHTTPDate = parseHTTPDate(text),
        vals = _parseHTTPDate[0],
        parsedZone = _parseHTTPDate[1];

    return parseDataToDateTime(vals, parsedZone, opts, "HTTP", opts);
  }
  /**
   * Create a DateTime from an input string and format string.
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @see https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @return {DateTime}
   */
  ;

  DateTime.fromFormat = function fromFormat(text, fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (isUndefined(text) || isUndefined(fmt)) {
      throw new InvalidArgumentError("fromFormat requires an input string and a format");
    }

    var _opts = opts,
        _opts$locale = _opts.locale,
        locale = _opts$locale === void 0 ? null : _opts$locale,
        _opts$numberingSystem = _opts.numberingSystem,
        numberingSystem = _opts$numberingSystem === void 0 ? null : _opts$numberingSystem,
        localeToUse = Locale.fromOpts({
      locale: locale,
      numberingSystem: numberingSystem,
      defaultToEN: true
    }),
        _parseFromTokens = parseFromTokens(localeToUse, text, fmt),
        vals = _parseFromTokens[0],
        parsedZone = _parseFromTokens[1],
        invalid = _parseFromTokens[2];

    if (invalid) {
      return DateTime.invalid(invalid);
    } else {
      return parseDataToDateTime(vals, parsedZone, opts, "format " + fmt, text);
    }
  }
  /**
   * @deprecated use fromFormat instead
   */
  ;

  DateTime.fromString = function fromString(text, fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return DateTime.fromFormat(text, fmt, opts);
  }
  /**
   * Create a DateTime from a SQL date, time, or datetime
   * Defaults to en-US if no locale has been specified, regardless of the system's locale
   * @param {string} text - the string to parse
   * @param {Object} opts - options to affect the creation
   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone
   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one
   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale
   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system
   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance
   * @example DateTime.fromSQL('2017-05-15')
   * @example DateTime.fromSQL('2017-05-15 09:12:34')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })
   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })
   * @example DateTime.fromSQL('09:12:34.342')
   * @return {DateTime}
   */
  ;

  DateTime.fromSQL = function fromSQL(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _parseSQL = parseSQL(text),
        vals = _parseSQL[0],
        parsedZone = _parseSQL[1];

    return parseDataToDateTime(vals, parsedZone, opts, "SQL", text);
  }
  /**
   * Create an invalid DateTime.
   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent
   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information
   * @return {DateTime}
   */
  ;

  DateTime.invalid = function invalid(reason, explanation) {
    if (explanation === void 0) {
      explanation = null;
    }

    if (!reason) {
      throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");
    }

    var invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);

    if (Settings.throwOnInvalid) {
      throw new InvalidDateTimeError(invalid);
    } else {
      return new DateTime({
        invalid: invalid
      });
    }
  }
  /**
   * Check if an object is a DateTime. Works across context boundaries
   * @param {object} o
   * @return {boolean}
   */
  ;

  DateTime.isDateTime = function isDateTime(o) {
    return o && o.isLuxonDateTime || false;
  } // INFO

  /**
   * Get the value of unit.
   * @param {string} unit - a unit such as 'minute' or 'day'
   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7
   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4
   * @return {number}
   */
  ;

  var _proto = DateTime.prototype;

  _proto.get = function get(unit) {
    return this[unit];
  }
  /**
   * Returns whether the DateTime is valid. Invalid DateTimes occur when:
   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30
   * * The DateTime was created by an operation on another invalid date
   * @type {boolean}
   */
  ;

  /**
   * Returns the resolved Intl options for this DateTime.
   * This is useful in understanding the behavior of formatting methods
   * @param {Object} opts - the same options as toLocaleString
   * @return {Object}
   */
  _proto.resolvedLocaleOpts = function resolvedLocaleOpts(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var _Formatter$create$res = Formatter.create(this.loc.clone(opts), opts).resolvedOptions(this),
        locale = _Formatter$create$res.locale,
        numberingSystem = _Formatter$create$res.numberingSystem,
        calendar = _Formatter$create$res.calendar;

    return {
      locale: locale,
      numberingSystem: numberingSystem,
      outputCalendar: calendar
    };
  } // TRANSFORM

  /**
   * "Set" the DateTime's zone to UTC. Returns a newly-constructed DateTime.
   *
   * Equivalent to {@link setZone}('utc')
   * @param {number} [offset=0] - optionally, an offset from UTC in minutes
   * @param {Object} [opts={}] - options to pass to `setZone()`
   * @return {DateTime}
   */
  ;

  _proto.toUTC = function toUTC(offset, opts) {
    if (offset === void 0) {
      offset = 0;
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.setZone(FixedOffsetZone.instance(offset), opts);
  }
  /**
   * "Set" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.
   *
   * Equivalent to `setZone('local')`
   * @return {DateTime}
   */
  ;

  _proto.toLocal = function toLocal() {
    return this.setZone(Settings.defaultZone);
  }
  /**
   * "Set" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.
   *
   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link plus}. You may wish to use {@link toLocal} and {@link toUTC} which provide simple convenience wrappers for commonly used zones.
   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link Zone} class.
   * @param {Object} opts - options
   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.
   * @return {DateTime}
   */
  ;

  _proto.setZone = function setZone(zone, _temp) {
    var _ref3 = _temp === void 0 ? {} : _temp,
        _ref3$keepLocalTime = _ref3.keepLocalTime,
        keepLocalTime = _ref3$keepLocalTime === void 0 ? false : _ref3$keepLocalTime,
        _ref3$keepCalendarTim = _ref3.keepCalendarTime,
        keepCalendarTime = _ref3$keepCalendarTim === void 0 ? false : _ref3$keepCalendarTim;

    zone = normalizeZone(zone, Settings.defaultZone);

    if (zone.equals(this.zone)) {
      return this;
    } else if (!zone.isValid) {
      return DateTime.invalid(unsupportedZone(zone));
    } else {
      var newTS = this.ts;

      if (keepLocalTime || keepCalendarTime) {
        var offsetGuess = zone.offset(this.ts);
        var asObj = this.toObject();

        var _objToTS3 = objToTS(asObj, offsetGuess, zone);

        newTS = _objToTS3[0];
      }

      return clone$1(this, {
        ts: newTS,
        zone: zone
      });
    }
  }
  /**
   * "Set" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.
   * @param {Object} properties - the properties to set
   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })
   * @return {DateTime}
   */
  ;

  _proto.reconfigure = function reconfigure(_temp2) {
    var _ref4 = _temp2 === void 0 ? {} : _temp2,
        locale = _ref4.locale,
        numberingSystem = _ref4.numberingSystem,
        outputCalendar = _ref4.outputCalendar;

    var loc = this.loc.clone({
      locale: locale,
      numberingSystem: numberingSystem,
      outputCalendar: outputCalendar
    });
    return clone$1(this, {
      loc: loc
    });
  }
  /**
   * "Set" the locale. Returns a newly-constructed DateTime.
   * Just a convenient alias for reconfigure({ locale })
   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')
   * @return {DateTime}
   */
  ;

  _proto.setLocale = function setLocale(locale) {
    return this.reconfigure({
      locale: locale
    });
  }
  /**
   * "Set" the values of specified units. Returns a newly-constructed DateTime.
   * You can only set units with this method; for "setting" metadata, see {@link reconfigure} and {@link setZone}.
   * @param {Object} values - a mapping of units to numbers
   * @example dt.set({ year: 2017 })
   * @example dt.set({ hour: 8, minute: 30 })
   * @example dt.set({ weekday: 5 })
   * @example dt.set({ year: 2005, ordinal: 234 })
   * @return {DateTime}
   */
  ;

  _proto.set = function set(values) {
    if (!this.isValid) return this;
    var normalized = normalizeObject(values, normalizeUnit, []),
        settingWeekStuff = !isUndefined(normalized.weekYear) || !isUndefined(normalized.weekNumber) || !isUndefined(normalized.weekday),
        containsOrdinal = !isUndefined(normalized.ordinal),
        containsGregorYear = !isUndefined(normalized.year),
        containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),
        containsGregor = containsGregorYear || containsGregorMD,
        definiteWeekDef = normalized.weekYear || normalized.weekNumber;

    if ((containsGregor || containsOrdinal) && definiteWeekDef) {
      throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");
    }

    if (containsGregorMD && containsOrdinal) {
      throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");
    }

    var mixed;

    if (settingWeekStuff) {
      mixed = weekToGregorian(Object.assign(gregorianToWeek(this.c), normalized));
    } else if (!isUndefined(normalized.ordinal)) {
      mixed = ordinalToGregorian(Object.assign(gregorianToOrdinal(this.c), normalized));
    } else {
      mixed = Object.assign(this.toObject(), normalized); // if we didn't set the day but we ended up on an overflow date,
      // use the last day of the right month

      if (isUndefined(normalized.day)) {
        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);
      }
    }

    var _objToTS4 = objToTS(mixed, this.o, this.zone),
        ts = _objToTS4[0],
        o = _objToTS4[1];

    return clone$1(this, {
      ts: ts,
      o: o
    });
  }
  /**
   * Add a period of time to this DateTime and return the resulting DateTime
   *
   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.
   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   * @example DateTime.now().plus(123) //~> in 123 milliseconds
   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes
   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow
   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday
   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min
   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min
   * @return {DateTime}
   */
  ;

  _proto.plus = function plus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration);
    return clone$1(this, adjustTime(this, dur));
  }
  /**
   * Subtract a period of time to this DateTime and return the resulting DateTime
   * See {@link plus}
   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()
   @return {DateTime}
  */
  ;

  _proto.minus = function minus(duration) {
    if (!this.isValid) return this;
    var dur = friendlyDuration(duration).negate();
    return clone$1(this, adjustTime(this, dur));
  }
  /**
   * "Set" this DateTime to the beginning of a unit of time.
   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'
   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'
   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'
   * @return {DateTime}
   */
  ;

  _proto.startOf = function startOf(unit) {
    if (!this.isValid) return this;
    var o = {},
        normalizedUnit = Duration.normalizeUnit(unit);

    switch (normalizedUnit) {
      case "years":
        o.month = 1;
      // falls through

      case "quarters":
      case "months":
        o.day = 1;
      // falls through

      case "weeks":
      case "days":
        o.hour = 0;
      // falls through

      case "hours":
        o.minute = 0;
      // falls through

      case "minutes":
        o.second = 0;
      // falls through

      case "seconds":
        o.millisecond = 0;
        break;
      // no default, invalid units throw in normalizeUnit()
    }

    if (normalizedUnit === "weeks") {
      o.weekday = 1;
    }

    if (normalizedUnit === "quarters") {
      var q = Math.ceil(this.month / 3);
      o.month = (q - 1) * 3 + 1;
    }

    return this.set(o);
  }
  /**
   * "Set" this DateTime to the end (meaning the last millisecond) of a unit of time
   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.
   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'
   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'
   * @return {DateTime}
   */
  ;

  _proto.endOf = function endOf(unit) {
    var _this$plus;

    return this.isValid ? this.plus((_this$plus = {}, _this$plus[unit] = 1, _this$plus)).startOf(unit).minus(1) : this;
  } // OUTPUT

  /**
   * Returns a string representation of this DateTime formatted according to the specified format string.
   * **You may not want this.** See {@link toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens).
   * Defaults to en-US if no locale has been specified, regardless of the system's locale.
   * @see https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens
   * @param {string} fmt - the format string
   * @param {Object} opts - opts to override the configuration options
   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'
   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'
   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: "fr" }) //=> '2017 avr. 22'
   * @example DateTime.now().toFormat("HH 'hours and' mm 'minutes'") //=> '20 hours and 55 minutes'
   * @return {string}
   */
  ;

  _proto.toFormat = function toFormat(fmt, opts) {
    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt) : INVALID$2;
  }
  /**
   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.
   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation
   * of the DateTime in the assigned locale.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat
   * @param opts {Object} - Intl.DateTimeFormat constructor options and configuration options
   * @example DateTime.now().toLocaleString(); //=> 4/20/2017
   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString({ locale: 'en-gb' }); //=> '20/04/2017'
   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'
   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'
   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'
   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'
   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'
   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hour12: false }); //=> '11:32'
   * @return {string}
   */
  ;

  _proto.toLocaleString = function toLocaleString(opts) {
    if (opts === void 0) {
      opts = DATE_SHORT;
    }

    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTime(this) : INVALID$2;
  }
  /**
   * Returns an array of format "parts", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.
   * Defaults to the system's locale if no locale has been specified
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts
   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.
   * @example DateTime.now().toLocaleParts(); //=> [
   *                                   //=>   { type: 'day', value: '25' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'month', value: '05' },
   *                                   //=>   { type: 'literal', value: '/' },
   *                                   //=>   { type: 'year', value: '1982' }
   *                                   //=> ]
   */
  ;

  _proto.toLocaleParts = function toLocaleParts(opts) {
    if (opts === void 0) {
      opts = {};
    }

    return this.isValid ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this) : [];
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'
   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'
   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'
   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'
   * @return {string}
   */
  ;

  _proto.toISO = function toISO(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) {
      return null;
    }

    return this.toISODate(opts) + "T" + this.toISOTime(opts);
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's date component
   * @param {Object} opts - options
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'
   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'
   * @return {string}
   */
  ;

  _proto.toISODate = function toISODate(_temp3) {
    var _ref5 = _temp3 === void 0 ? {} : _temp3,
        _ref5$format = _ref5.format,
        format = _ref5$format === void 0 ? "extended" : _ref5$format;

    var fmt = format === "basic" ? "yyyyMMdd" : "yyyy-MM-dd";

    if (this.year > 9999) {
      fmt = "+" + fmt;
    }

    return toTechFormat(this, fmt);
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's week date
   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'
   * @return {string}
   */
  ;

  _proto.toISOWeekDate = function toISOWeekDate() {
    return toTechFormat(this, "kkkk-'W'WW-c");
  }
  /**
   * Returns an ISO 8601-compliant string representation of this DateTime's time component
   * @param {Object} opts - options
   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0
   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix
   * @param {string} [opts.format='extended'] - choose between the basic and extended format
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'
   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'
   * @return {string}
   */
  ;

  _proto.toISOTime = function toISOTime(_temp4) {
    var _ref6 = _temp4 === void 0 ? {} : _temp4,
        _ref6$suppressMillise = _ref6.suppressMilliseconds,
        suppressMilliseconds = _ref6$suppressMillise === void 0 ? false : _ref6$suppressMillise,
        _ref6$suppressSeconds = _ref6.suppressSeconds,
        suppressSeconds = _ref6$suppressSeconds === void 0 ? false : _ref6$suppressSeconds,
        _ref6$includeOffset = _ref6.includeOffset,
        includeOffset = _ref6$includeOffset === void 0 ? true : _ref6$includeOffset,
        _ref6$includePrefix = _ref6.includePrefix,
        includePrefix = _ref6$includePrefix === void 0 ? false : _ref6$includePrefix,
        _ref6$format = _ref6.format,
        format = _ref6$format === void 0 ? "extended" : _ref6$format;

    return toTechTimeFormat(this, {
      suppressSeconds: suppressSeconds,
      suppressMilliseconds: suppressMilliseconds,
      includeOffset: includeOffset,
      includePrefix: includePrefix,
      format: format
    });
  }
  /**
   * Returns an RFC 2822-compatible string representation of this DateTime, always in UTC
   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'
   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'
   * @return {string}
   */
  ;

  _proto.toRFC2822 = function toRFC2822() {
    return toTechFormat(this, "EEE, dd LLL yyyy HH:mm:ss ZZZ", false);
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in HTTP headers.
   * Specifically, the string conforms to RFC 1123.
   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1
   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'
   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'
   * @return {string}
   */
  ;

  _proto.toHTTP = function toHTTP() {
    return toTechFormat(this.toUTC(), "EEE, dd LLL yyyy HH:mm:ss 'GMT'");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Date
   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'
   * @return {string}
   */
  ;

  _proto.toSQLDate = function toSQLDate() {
    return toTechFormat(this, "yyyy-MM-dd");
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL Time
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @example DateTime.utc().toSQL() //=> '05:15:16.345'
   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'
   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'
   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'
   * @return {string}
   */
  ;

  _proto.toSQLTime = function toSQLTime(_temp5) {
    var _ref7 = _temp5 === void 0 ? {} : _temp5,
        _ref7$includeOffset = _ref7.includeOffset,
        includeOffset = _ref7$includeOffset === void 0 ? true : _ref7$includeOffset,
        _ref7$includeZone = _ref7.includeZone,
        includeZone = _ref7$includeZone === void 0 ? false : _ref7$includeZone;

    return toTechTimeFormat(this, {
      includeOffset: includeOffset,
      includeZone: includeZone,
      spaceZone: true
    });
  }
  /**
   * Returns a string representation of this DateTime appropriate for use in SQL DateTime
   * @param {Object} opts - options
   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.
   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'
   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'
   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'
   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'
   * @return {string}
   */
  ;

  _proto.toSQL = function toSQL(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) {
      return null;
    }

    return this.toSQLDate() + " " + this.toSQLTime(opts);
  }
  /**
   * Returns a string representation of this DateTime appropriate for debugging
   * @return {string}
   */
  ;

  _proto.toString = function toString() {
    return this.isValid ? this.toISO() : INVALID$2;
  }
  /**
   * Returns the epoch milliseconds of this DateTime. Alias of {@link toMillis}
   * @return {number}
   */
  ;

  _proto.valueOf = function valueOf() {
    return this.toMillis();
  }
  /**
   * Returns the epoch milliseconds of this DateTime.
   * @return {number}
   */
  ;

  _proto.toMillis = function toMillis() {
    return this.isValid ? this.ts : NaN;
  }
  /**
   * Returns the epoch seconds of this DateTime.
   * @return {number}
   */
  ;

  _proto.toSeconds = function toSeconds() {
    return this.isValid ? this.ts / 1000 : NaN;
  }
  /**
   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.
   * @return {string}
   */
  ;

  _proto.toJSON = function toJSON() {
    return this.toISO();
  }
  /**
   * Returns a BSON serializable equivalent to this DateTime.
   * @return {Date}
   */
  ;

  _proto.toBSON = function toBSON() {
    return this.toJSDate();
  }
  /**
   * Returns a JavaScript object with this DateTime's year, month, day, and so on.
   * @param opts - options for generating the object
   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output
   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }
   * @return {Object}
   */
  ;

  _proto.toObject = function toObject(opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid) return {};
    var base = Object.assign({}, this.c);

    if (opts.includeConfig) {
      base.outputCalendar = this.outputCalendar;
      base.numberingSystem = this.loc.numberingSystem;
      base.locale = this.loc.locale;
    }

    return base;
  }
  /**
   * Returns a JavaScript Date equivalent to this DateTime.
   * @return {Date}
   */
  ;

  _proto.toJSDate = function toJSDate() {
    return new Date(this.isValid ? this.ts : NaN);
  } // COMPARE

  /**
   * Return the difference between two DateTimes as a Duration.
   * @param {DateTime} otherDateTime - the DateTime to compare this one to
   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @example
   * var i1 = DateTime.fromISO('1982-05-25T09:45'),
   *     i2 = DateTime.fromISO('1983-10-14T10:30');
   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }
   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }
   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }
   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }
   * @return {Duration}
   */
  ;

  _proto.diff = function diff(otherDateTime, unit, opts) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (opts === void 0) {
      opts = {};
    }

    if (!this.isValid || !otherDateTime.isValid) {
      return Duration.invalid(this.invalid || otherDateTime.invalid, "created by diffing an invalid DateTime");
    }

    var durOpts = Object.assign({
      locale: this.locale,
      numberingSystem: this.numberingSystem
    }, opts);

    var units = maybeArray(unit).map(Duration.normalizeUnit),
        otherIsLater = otherDateTime.valueOf() > this.valueOf(),
        earlier = otherIsLater ? this : otherDateTime,
        later = otherIsLater ? otherDateTime : this,
        diffed = _diff(earlier, later, units, durOpts);

    return otherIsLater ? diffed.negate() : diffed;
  }
  /**
   * Return the difference between this DateTime and right now.
   * See {@link diff}
   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration
   * @param {Object} opts - options that affect the creation of the Duration
   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use
   * @return {Duration}
   */
  ;

  _proto.diffNow = function diffNow(unit, opts) {
    if (unit === void 0) {
      unit = "milliseconds";
    }

    if (opts === void 0) {
      opts = {};
    }

    return this.diff(DateTime.now(), unit, opts);
  }
  /**
   * Return an Interval spanning between this DateTime and another DateTime
   * @param {DateTime} otherDateTime - the other end point of the Interval
   * @return {Interval}
   */
  ;

  _proto.until = function until(otherDateTime) {
    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;
  }
  /**
   * Return whether this DateTime is in the same unit of time as another DateTime.
   * Higher-order units must also be identical for this function to return `true`.
   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link setZone} to convert one of the dates if needed.
   * @param {DateTime} otherDateTime - the other DateTime
   * @param {string} unit - the unit of time to check sameness on
   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day
   * @return {boolean}
   */
  ;

  _proto.hasSame = function hasSame(otherDateTime, unit) {
    if (!this.isValid) return false;
    var inputMs = otherDateTime.valueOf();
    var otherZoneDateTime = this.setZone(otherDateTime.zone, {
      keepLocalTime: true
    });
    return otherZoneDateTime.startOf(unit) <= inputMs && inputMs <= otherZoneDateTime.endOf(unit);
  }
  /**
   * Equality check
   * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.
   * To compare just the millisecond values, use `+dt1 === +dt2`.
   * @param {DateTime} other - the other DateTime
   * @return {boolean}
   */
  ;

  _proto.equals = function equals(other) {
    return this.isValid && other.isValid && this.valueOf() === other.valueOf() && this.zone.equals(other.zone) && this.loc.equals(other.loc);
  }
  /**
   * Returns a string representation of a this time relative to now, such as "in two days". Can only internationalize if your
   * platform supports Intl.RelativeTimeFormat. Rounds down by default.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} [options.style="long"] - the style of units, must be "long", "short", or "narrow"
   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of "years", "quarters", "months", "weeks", "days", "hours", "minutes", or "seconds"
   * @param {boolean} [options.round=true] - whether to round the numbers in the output.
   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> "in 1 day"
   * @example DateTime.now().setLocale("es").toRelative({ days: 1 }) //=> "dentro de 1 día"
   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: "fr" }) //=> "dans 23 heures"
   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> "2 days ago"
   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: "hours" }) //=> "48 hours ago"
   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> "1.5 days ago"
   */
  ;

  _proto.toRelative = function toRelative(options) {
    if (options === void 0) {
      options = {};
    }

    if (!this.isValid) return null;
    var base = options.base || DateTime.fromObject({
      zone: this.zone
    }),
        padding = options.padding ? this < base ? -options.padding : options.padding : 0;
    var units = ["years", "months", "days", "hours", "minutes", "seconds"];
    var unit = options.unit;

    if (Array.isArray(options.unit)) {
      units = options.unit;
      unit = undefined;
    }

    return diffRelative(base, this.plus(padding), Object.assign(options, {
      numeric: "always",
      units: units,
      unit: unit
    }));
  }
  /**
   * Returns a string representation of this date relative to today, such as "yesterday" or "next month".
   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.
   * @param {Object} options - options that affect the output
   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.
   * @param {string} options.locale - override the locale of this DateTime
   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of "years", "quarters", "months", "weeks", or "days"
   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> "tomorrow"
   * @example DateTime.now().setLocale("es").plus({ days: 1 }).toRelative() //=> ""mañana"
   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: "fr" }) //=> "demain"
   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> "2 days ago"
   */
  ;

  _proto.toRelativeCalendar = function toRelativeCalendar(options) {
    if (options === void 0) {
      options = {};
    }

    if (!this.isValid) return null;
    return diffRelative(options.base || DateTime.fromObject({
      zone: this.zone
    }), this, Object.assign(options, {
      numeric: "auto",
      units: ["years", "months", "days"],
      calendary: true
    }));
  }
  /**
   * Return the min of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum
   * @return {DateTime} the min DateTime, or undefined if called with no argument
   */
  ;

  DateTime.min = function min() {
    for (var _len = arguments.length, dateTimes = new Array(_len), _key = 0; _key < _len; _key++) {
      dateTimes[_key] = arguments[_key];
    }

    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("min requires all arguments be DateTimes");
    }

    return bestBy(dateTimes, function (i) {
      return i.valueOf();
    }, Math.min);
  }
  /**
   * Return the max of several date times
   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum
   * @return {DateTime} the max DateTime, or undefined if called with no argument
   */
  ;

  DateTime.max = function max() {
    for (var _len2 = arguments.length, dateTimes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      dateTimes[_key2] = arguments[_key2];
    }

    if (!dateTimes.every(DateTime.isDateTime)) {
      throw new InvalidArgumentError("max requires all arguments be DateTimes");
    }

    return bestBy(dateTimes, function (i) {
      return i.valueOf();
    }, Math.max);
  } // MISC

  /**
   * Explain how a string would be parsed by fromFormat()
   * @param {string} text - the string to parse
   * @param {string} fmt - the format the string is expected to be in (see description)
   * @param {Object} options - options taken by fromFormat()
   * @return {Object}
   */
  ;

  DateTime.fromFormatExplain = function fromFormatExplain(text, fmt, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        _options$locale = _options.locale,
        locale = _options$locale === void 0 ? null : _options$locale,
        _options$numberingSys = _options.numberingSystem,
        numberingSystem = _options$numberingSys === void 0 ? null : _options$numberingSys,
        localeToUse = Locale.fromOpts({
      locale: locale,
      numberingSystem: numberingSystem,
      defaultToEN: true
    });
    return explainFromTokens(localeToUse, text, fmt);
  }
  /**
   * @deprecated use fromFormatExplain instead
   */
  ;

  DateTime.fromStringExplain = function fromStringExplain(text, fmt, options) {
    if (options === void 0) {
      options = {};
    }

    return DateTime.fromFormatExplain(text, fmt, options);
  } // FORMAT PRESETS

  /**
   * {@link toLocaleString} format like 10/14/1983
   * @type {Object}
   */
  ;

  _createClass(DateTime, [{
    key: "isValid",
    get: function get() {
      return this.invalid === null;
    }
    /**
     * Returns an error code if this DateTime is invalid, or null if the DateTime is valid
     * @type {string}
     */

  }, {
    key: "invalidReason",
    get: function get() {
      return this.invalid ? this.invalid.reason : null;
    }
    /**
     * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid
     * @type {string}
     */

  }, {
    key: "invalidExplanation",
    get: function get() {
      return this.invalid ? this.invalid.explanation : null;
    }
    /**
     * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "locale",
    get: function get() {
      return this.isValid ? this.loc.locale : null;
    }
    /**
     * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "numberingSystem",
    get: function get() {
      return this.isValid ? this.loc.numberingSystem : null;
    }
    /**
     * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime
     *
     * @type {string}
     */

  }, {
    key: "outputCalendar",
    get: function get() {
      return this.isValid ? this.loc.outputCalendar : null;
    }
    /**
     * Get the time zone associated with this DateTime.
     * @type {Zone}
     */

  }, {
    key: "zone",
    get: function get() {
      return this._zone;
    }
    /**
     * Get the name of the time zone.
     * @type {string}
     */

  }, {
    key: "zoneName",
    get: function get() {
      return this.isValid ? this.zone.name : null;
    }
    /**
     * Get the year
     * @example DateTime.local(2017, 5, 25).year //=> 2017
     * @type {number}
     */

  }, {
    key: "year",
    get: function get() {
      return this.isValid ? this.c.year : NaN;
    }
    /**
     * Get the quarter
     * @example DateTime.local(2017, 5, 25).quarter //=> 2
     * @type {number}
     */

  }, {
    key: "quarter",
    get: function get() {
      return this.isValid ? Math.ceil(this.c.month / 3) : NaN;
    }
    /**
     * Get the month (1-12).
     * @example DateTime.local(2017, 5, 25).month //=> 5
     * @type {number}
     */

  }, {
    key: "month",
    get: function get() {
      return this.isValid ? this.c.month : NaN;
    }
    /**
     * Get the day of the month (1-30ish).
     * @example DateTime.local(2017, 5, 25).day //=> 25
     * @type {number}
     */

  }, {
    key: "day",
    get: function get() {
      return this.isValid ? this.c.day : NaN;
    }
    /**
     * Get the hour of the day (0-23).
     * @example DateTime.local(2017, 5, 25, 9).hour //=> 9
     * @type {number}
     */

  }, {
    key: "hour",
    get: function get() {
      return this.isValid ? this.c.hour : NaN;
    }
    /**
     * Get the minute of the hour (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30
     * @type {number}
     */

  }, {
    key: "minute",
    get: function get() {
      return this.isValid ? this.c.minute : NaN;
    }
    /**
     * Get the second of the minute (0-59).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52
     * @type {number}
     */

  }, {
    key: "second",
    get: function get() {
      return this.isValid ? this.c.second : NaN;
    }
    /**
     * Get the millisecond of the second (0-999).
     * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654
     * @type {number}
     */

  }, {
    key: "millisecond",
    get: function get() {
      return this.isValid ? this.c.millisecond : NaN;
    }
    /**
     * Get the week year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 12, 31).weekYear //=> 2015
     * @type {number}
     */

  }, {
    key: "weekYear",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;
    }
    /**
     * Get the week number of the week year (1-52ish).
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2017, 5, 25).weekNumber //=> 21
     * @type {number}
     */

  }, {
    key: "weekNumber",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;
    }
    /**
     * Get the day of the week.
     * 1 is Monday and 7 is Sunday
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2014, 11, 31).weekday //=> 4
     * @type {number}
     */

  }, {
    key: "weekday",
    get: function get() {
      return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;
    }
    /**
     * Get the ordinal (meaning the day of the year)
     * @example DateTime.local(2017, 5, 25).ordinal //=> 145
     * @type {number|DateTime}
     */

  }, {
    key: "ordinal",
    get: function get() {
      return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;
    }
    /**
     * Get the human readable short month name, such as 'Oct'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthShort //=> Oct
     * @type {string}
     */

  }, {
    key: "monthShort",
    get: function get() {
      return this.isValid ? Info.months("short", {
        locObj: this.loc
      })[this.month - 1] : null;
    }
    /**
     * Get the human readable long month name, such as 'October'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).monthLong //=> October
     * @type {string}
     */

  }, {
    key: "monthLong",
    get: function get() {
      return this.isValid ? Info.months("long", {
        locObj: this.loc
      })[this.month - 1] : null;
    }
    /**
     * Get the human readable short weekday, such as 'Mon'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon
     * @type {string}
     */

  }, {
    key: "weekdayShort",
    get: function get() {
      return this.isValid ? Info.weekdays("short", {
        locObj: this.loc
      })[this.weekday - 1] : null;
    }
    /**
     * Get the human readable long weekday, such as 'Monday'.
     * Defaults to the system's locale if no locale has been specified
     * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday
     * @type {string}
     */

  }, {
    key: "weekdayLong",
    get: function get() {
      return this.isValid ? Info.weekdays("long", {
        locObj: this.loc
      })[this.weekday - 1] : null;
    }
    /**
     * Get the UTC offset of this DateTime in minutes
     * @example DateTime.now().offset //=> -240
     * @example DateTime.utc().offset //=> 0
     * @type {number}
     */

  }, {
    key: "offset",
    get: function get() {
      return this.isValid ? +this.o : NaN;
    }
    /**
     * Get the short human name for the zone's current offset, for example "EST" or "EDT".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */

  }, {
    key: "offsetNameShort",
    get: function get() {
      if (this.isValid) {
        return this.zone.offsetName(this.ts, {
          format: "short",
          locale: this.locale
        });
      } else {
        return null;
      }
    }
    /**
     * Get the long human name for the zone's current offset, for example "Eastern Standard Time" or "Eastern Daylight Time".
     * Defaults to the system's locale if no locale has been specified
     * @type {string}
     */

  }, {
    key: "offsetNameLong",
    get: function get() {
      if (this.isValid) {
        return this.zone.offsetName(this.ts, {
          format: "long",
          locale: this.locale
        });
      } else {
        return null;
      }
    }
    /**
     * Get whether this zone's offset ever changes, as in a DST.
     * @type {boolean}
     */

  }, {
    key: "isOffsetFixed",
    get: function get() {
      return this.isValid ? this.zone.universal : null;
    }
    /**
     * Get whether the DateTime is in a DST.
     * @type {boolean}
     */

  }, {
    key: "isInDST",
    get: function get() {
      if (this.isOffsetFixed) {
        return false;
      } else {
        return this.offset > this.set({
          month: 1
        }).offset || this.offset > this.set({
          month: 5
        }).offset;
      }
    }
    /**
     * Returns true if this DateTime is in a leap year, false otherwise
     * @example DateTime.local(2016).isInLeapYear //=> true
     * @example DateTime.local(2013).isInLeapYear //=> false
     * @type {boolean}
     */

  }, {
    key: "isInLeapYear",
    get: function get() {
      return isLeapYear(this.year);
    }
    /**
     * Returns the number of days in this DateTime's month
     * @example DateTime.local(2016, 2).daysInMonth //=> 29
     * @example DateTime.local(2016, 3).daysInMonth //=> 31
     * @type {number}
     */

  }, {
    key: "daysInMonth",
    get: function get() {
      return daysInMonth(this.year, this.month);
    }
    /**
     * Returns the number of days in this DateTime's year
     * @example DateTime.local(2016).daysInYear //=> 366
     * @example DateTime.local(2013).daysInYear //=> 365
     * @type {number}
     */

  }, {
    key: "daysInYear",
    get: function get() {
      return this.isValid ? daysInYear(this.year) : NaN;
    }
    /**
     * Returns the number of weeks in this DateTime's year
     * @see https://en.wikipedia.org/wiki/ISO_week_date
     * @example DateTime.local(2004).weeksInWeekYear //=> 53
     * @example DateTime.local(2013).weeksInWeekYear //=> 52
     * @type {number}
     */

  }, {
    key: "weeksInWeekYear",
    get: function get() {
      return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;
    }
  }], [{
    key: "DATE_SHORT",
    get: function get() {
      return DATE_SHORT;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_MED",
    get: function get() {
      return DATE_MED;
    }
    /**
     * {@link toLocaleString} format like 'Fri, Oct 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_MED_WITH_WEEKDAY",
    get: function get() {
      return DATE_MED_WITH_WEEKDAY;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_FULL",
    get: function get() {
      return DATE_FULL;
    }
    /**
     * {@link toLocaleString} format like 'Tuesday, October 14, 1983'
     * @type {Object}
     */

  }, {
    key: "DATE_HUGE",
    get: function get() {
      return DATE_HUGE;
    }
    /**
     * {@link toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_SIMPLE",
    get: function get() {
      return TIME_SIMPLE;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_SECONDS",
    get: function get() {
      return TIME_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_SHORT_OFFSET",
    get: function get() {
      return TIME_WITH_SHORT_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "TIME_WITH_LONG_OFFSET",
    get: function get() {
      return TIME_WITH_LONG_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_SIMPLE",
    get: function get() {
      return TIME_24_SIMPLE;
    }
    /**
     * {@link toLocaleString} format like '09:30:23', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_SECONDS",
    get: function get() {
      return TIME_24_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 EDT', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_SHORT_OFFSET",
    get: function get() {
      return TIME_24_WITH_SHORT_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.
     * @type {Object}
     */

  }, {
    key: "TIME_24_WITH_LONG_OFFSET",
    get: function get() {
      return TIME_24_WITH_LONG_OFFSET;
    }
    /**
     * {@link toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_SHORT",
    get: function get() {
      return DATETIME_SHORT;
    }
    /**
     * {@link toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_SHORT_WITH_SECONDS",
    get: function get() {
      return DATETIME_SHORT_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED",
    get: function get() {
      return DATETIME_MED;
    }
    /**
     * {@link toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED_WITH_SECONDS",
    get: function get() {
      return DATETIME_MED_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_MED_WITH_WEEKDAY",
    get: function get() {
      return DATETIME_MED_WITH_WEEKDAY;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_FULL",
    get: function get() {
      return DATETIME_FULL;
    }
    /**
     * {@link toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_FULL_WITH_SECONDS",
    get: function get() {
      return DATETIME_FULL_WITH_SECONDS;
    }
    /**
     * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_HUGE",
    get: function get() {
      return DATETIME_HUGE;
    }
    /**
     * {@link toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.
     * @type {Object}
     */

  }, {
    key: "DATETIME_HUGE_WITH_SECONDS",
    get: function get() {
      return DATETIME_HUGE_WITH_SECONDS;
    }
  }]);

  return DateTime;
}();
function friendlyDateTime(dateTimeish) {
  if (DateTime.isDateTime(dateTimeish)) {
    return dateTimeish;
  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {
    return DateTime.fromJSDate(dateTimeish);
  } else if (dateTimeish && typeof dateTimeish === "object") {
    return DateTime.fromObject(dateTimeish);
  } else {
    throw new InvalidArgumentError("Unknown datetime argument: " + dateTimeish + ", of type " + typeof dateTimeish);
  }
}

var VERSION = "1.28.0";

exports.DateTime = DateTime;
exports.Duration = Duration;
exports.FixedOffsetZone = FixedOffsetZone;
exports.IANAZone = IANAZone;
exports.Info = Info;
exports.Interval = Interval;
exports.InvalidZone = InvalidZone;
exports.LocalZone = LocalZone;
exports.Settings = Settings;
exports.VERSION = VERSION;
exports.Zone = Zone;
//# sourceMappingURL=luxon.js.map


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/Datepicker.js":
/*!*********************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/Datepicker.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Datepicker)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/date-format.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date-format.js");
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/event.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/event.js");
/* harmony import */ var _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./i18n/base-locales.js */ "./frontend/node_modules/vanillajs-datepicker/js/i18n/base-locales.js");
/* harmony import */ var _options_defaultOptions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./options/defaultOptions.js */ "./frontend/node_modules/vanillajs-datepicker/js/options/defaultOptions.js");
/* harmony import */ var _options_processOptions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./options/processOptions.js */ "./frontend/node_modules/vanillajs-datepicker/js/options/processOptions.js");
/* harmony import */ var _picker_Picker_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./picker/Picker.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/Picker.js");
/* harmony import */ var _events_functions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./events/functions.js */ "./frontend/node_modules/vanillajs-datepicker/js/events/functions.js");
/* harmony import */ var _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./events/inputFieldListeners.js */ "./frontend/node_modules/vanillajs-datepicker/js/events/inputFieldListeners.js");
/* harmony import */ var _events_otherListeners_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./events/otherListeners.js */ "./frontend/node_modules/vanillajs-datepicker/js/events/otherListeners.js");












function stringifyDates(dates, config) {
  return dates
    .map(dt => (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.formatDate)(dt, config.format, config.locale))
    .join(config.dateDelimiter);
}

// parse input dates and create an array of time values for selection
// returns undefined if there are no valid dates in inputDates
// when origDates (current selection) is passed, the function works to mix
// the input dates into the current selection
function processInputDates(datepicker, inputDates, clear = false) {
  const {config, dates: origDates, rangepicker} = datepicker;
  if (inputDates.length === 0) {
    // empty input is considered valid unless origiDates is passed
    return clear ? [] : undefined;
  }

  const rangeEnd = rangepicker && datepicker === rangepicker.datepickers[1];
  let newDates = inputDates.reduce((dates, dt) => {
    let date = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(dt, config.format, config.locale);
    if (date === undefined) {
      return dates;
    }
    if (config.pickLevel > 0) {
      // adjust to 1st of the month/Jan 1st of the year
      // or to the last day of the monh/Dec 31st of the year if the datepicker
      // is the range-end picker of a rangepicker
      const dt = new Date(date);
      if (config.pickLevel === 1) {
        date = rangeEnd
          ? dt.setMonth(dt.getMonth() + 1, 0)
          : dt.setDate(1);
      } else {
        date = rangeEnd
          ? dt.setFullYear(dt.getFullYear() + 1, 0, 0)
          : dt.setMonth(0, 1);
      }
    }
    if (
      (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.isInRange)(date, config.minDate, config.maxDate)
      && !dates.includes(date)
      && !config.datesDisabled.includes(date)
      && !config.daysOfWeekDisabled.includes(new Date(date).getDay())
    ) {
      dates.push(date);
    }
    return dates;
  }, []);
  if (newDates.length === 0) {
    return;
  }
  if (config.multidate && !clear) {
    // get the synmetric difference between origDates and newDates
    newDates = newDates.reduce((dates, date) => {
      if (!origDates.includes(date)) {
        dates.push(date);
      }
      return dates;
    }, origDates.filter(date => !newDates.includes(date)));
  }
  // do length check always because user can input multiple dates regardless of the mode
  return config.maxNumberOfDates && newDates.length > config.maxNumberOfDates
    ? newDates.slice(config.maxNumberOfDates * -1)
    : newDates;
}

// refresh the UI elements
// modes: 1: input only, 2, picker only, 3 both
function refreshUI(datepicker, mode = 3, quickRender = true) {
  const {config, picker, inputField} = datepicker;
  if (mode & 2) {
    const newView = picker.active ? config.pickLevel : config.startView;
    picker.update().changeView(newView).render(quickRender);
  }
  if (mode & 1 && inputField) {
    inputField.value = stringifyDates(datepicker.dates, config);
  }
}

function setDate(datepicker, inputDates, options) {
  let {clear, render, autohide} = options;
  if (render === undefined) {
    render = true;
  }
  if (!render) {
    autohide = false;
  } else if (autohide === undefined) {
    autohide = datepicker.config.autohide;
  }

  const newDates = processInputDates(datepicker, inputDates, clear);
  if (!newDates) {
    return;
  }
  if (newDates.toString() !== datepicker.dates.toString()) {
    datepicker.dates = newDates;
    refreshUI(datepicker, render ? 3 : 1);
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(datepicker, 'changeDate');
  } else {
    refreshUI(datepicker, 1);
  }
  if (autohide) {
    datepicker.hide();
  }
}

/**
 * Class representing a date picker
 */
class Datepicker {
  /**
   * Create a date picker
   * @param  {Element} element - element to bind a date picker
   * @param  {Object} [options] - config options
   * @param  {DateRangePicker} [rangepicker] - DateRangePicker instance the
   * date picker belongs to. Use this only when creating date picker as a part
   * of date range picker
   */
  constructor(element, options = {}, rangepicker = undefined) {
    element.datepicker = this;
    this.element = element;

    // set up config
    const config = this.config = Object.assign({
      buttonClass: (options.buttonClass && String(options.buttonClass)) || 'button',
      container: document.body,
      defaultViewDate: (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.today)(),
      maxDate: undefined,
      minDate: undefined,
    }, (0,_options_processOptions_js__WEBPACK_IMPORTED_MODULE_6__.default)(_options_defaultOptions_js__WEBPACK_IMPORTED_MODULE_5__.default, this));
    this._options = options;
    Object.assign(config, (0,_options_processOptions_js__WEBPACK_IMPORTED_MODULE_6__.default)(options, this));

    // configure by type
    const inline = this.inline = element.tagName !== 'INPUT';
    let inputField;
    let initialDates;

    if (inline) {
      config.container = element;
      initialDates = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToArray)(element.dataset.date, config.dateDelimiter);
      delete element.dataset.date;
    } else {
      const container = options.container ? document.querySelector(options.container) : null;
      if (container) {
        config.container = container;
      }
      inputField = this.inputField = element;
      inputField.classList.add('datepicker-input');
      initialDates = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToArray)(inputField.value, config.dateDelimiter);
    }
    if (rangepicker) {
      // check validiry
      const index = rangepicker.inputs.indexOf(inputField);
      const datepickers = rangepicker.datepickers;
      if (index < 0 || index > 1 || !Array.isArray(datepickers)) {
        throw Error('Invalid rangepicker object.');
      }
      // attach itaelf to the rangepicker here so that processInputDates() can
      // determine if this is the range-end picker of the rangepicker while
      // setting inital values when pickLevel > 0
      datepickers[index] = this;
      // add getter for rangepicker
      Object.defineProperty(this, 'rangepicker', {
        get() {
          return rangepicker;
        },
      });
    }

    // set initial dates
    this.dates = [];
    // process initial value
    const inputDateValues = processInputDates(this, initialDates);
    if (inputDateValues && inputDateValues.length > 0) {
      this.dates = inputDateValues;
    }
    if (inputField) {
      inputField.value = stringifyDates(this.dates, config);
    }

    const picker = this.picker = new _picker_Picker_js__WEBPACK_IMPORTED_MODULE_7__.default(this);

    if (inline) {
      this.show();
    } else {
      // set up event listeners in other modes
      const onMousedownDocument = _events_otherListeners_js__WEBPACK_IMPORTED_MODULE_10__.onClickOutside.bind(null, this);
      const listeners = [
        [inputField, 'keydown', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onKeydown.bind(null, this)],
        [inputField, 'focus', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onFocus.bind(null, this)],
        [inputField, 'mousedown', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onMousedown.bind(null, this)],
        [inputField, 'click', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickInput.bind(null, this)],
        [inputField, 'paste', _events_inputFieldListeners_js__WEBPACK_IMPORTED_MODULE_9__.onPaste.bind(null, this)],
        [document, 'mousedown', onMousedownDocument],
        [document, 'touchstart', onMousedownDocument],
        [window, 'resize', picker.place.bind(picker)]
      ];
      (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_3__.registerListeners)(this, listeners);
    }
  }

  /**
   * Format Date object or time value in given format and language
   * @param  {Date|Number} date - date or time value to format
   * @param  {String|Object} format - format string or object that contains
   * toDisplay() custom formatter, whose signature is
   * - args:
   *   - date: {Date} - Date instance of the date passed to the method
   *   - format: {Object} - the format object passed to the method
   *   - locale: {Object} - locale for the language specified by `lang`
   * - return:
   *     {String} formatted date
   * @param  {String} [lang=en] - language code for the locale to use
   * @return {String} formatted date
   */
  static formatDate(date, format, lang) {
    return (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.formatDate)(date, format, lang && _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales[lang] || _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales.en);
  }

  /**
   * Parse date string
   * @param  {String|Date|Number} dateStr - date string, Date object or time
   * value to parse
   * @param  {String|Object} format - format string or object that contains
   * toValue() custom parser, whose signature is
   * - args:
   *   - dateStr: {String|Date|Number} - the dateStr passed to the method
   *   - format: {Object} - the format object passed to the method
   *   - locale: {Object} - locale for the language specified by `lang`
   * - return:
   *     {Date|Number} parsed date or its time value
   * @param  {String} [lang=en] - language code for the locale to use
   * @return {Number} time value of parsed date
   */
  static parseDate(dateStr, format, lang) {
    return (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(dateStr, format, lang && _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales[lang] || _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales.en);
  }

  /**
   * @type {Object} - Installed locales in `[languageCode]: localeObject` format
   * en`:_English (US)_ is pre-installed.
   */
  static get locales() {
    return _i18n_base_locales_js__WEBPACK_IMPORTED_MODULE_4__.locales;
  }

  /**
   * @type {Boolean} - Whether the picker element is shown. `true` whne shown
   */
  get active() {
    return !!(this.picker && this.picker.active);
  }

  /**
   * @type {HTMLDivElement} - DOM object of picker element
   */
  get pickerElement() {
    return this.picker ? this.picker.element : undefined;
  }

  /**
   * Set new values to the config options
   * @param {Object} options - config options to update
   */
  setOptions(options) {
    const picker = this.picker;
    const newOptions = (0,_options_processOptions_js__WEBPACK_IMPORTED_MODULE_6__.default)(options, this);
    Object.assign(this._options, options);
    Object.assign(this.config, newOptions);
    picker.setOptions(newOptions);

    refreshUI(this, 3);
  }

  /**
   * Show the picker element
   */
  show() {
    if (this.inputField) {
      if (this.inputField.disabled) {
        return;
      }
      if (this.inputField !== document.activeElement) {
        this._showing = true;
        this.inputField.focus();
        delete this._showing;
      }
    }
    this.picker.show();
  }

  /**
   * Hide the picker element
   * Not available on inline picker
   */
  hide() {
    if (this.inline) {
      return;
    }
    this.picker.hide();
    this.picker.update().changeView(this.config.startView).render();
  }

  /**
   * Destroy the Datepicker instance
   * @return {Detepicker} - the instance destroyed
   */
  destroy() {
    this.hide();
    (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_3__.unregisterListeners)(this);
    this.picker.detach();
    if (!this.inline) {
      this.inputField.classList.remove('datepicker-input');
    }
    delete this.element.datepicker;
    return this;
  }

  /**
   * Get the selected date(s)
   *
   * The method returns a Date object of selected date by default, and returns
   * an array of selected dates in multidate mode. If format string is passed,
   * it returns date string(s) formatted in given format.
   *
   * @param  {String} [format] - Format string to stringify the date(s)
   * @return {Date|String|Date[]|String[]} - selected date(s), or if none is
   * selected, empty array in multidate mode and untitled in sigledate mode
   */
  getDate(format = undefined) {
    const callback = format
      ? date => (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.formatDate)(date, format, this.config.locale)
      : date => new Date(date);

    if (this.config.multidate) {
      return this.dates.map(callback);
    }
    if (this.dates.length > 0) {
      return callback(this.dates[0]);
    }
  }

  /**
   * Set selected date(s)
   *
   * In multidate mode, you can pass multiple dates as a series of arguments
   * or an array. (Since each date is parsed individually, the type of the
   * dates doesn't have to be the same.)
   * The given dates are used to toggle the select status of each date. The
   * number of selected dates is kept from exceeding the length set to
   * maxNumberOfDates.
   *
   * With clear: true option, the method can be used to clear the selection
   * and to replace the selection instead of toggling in multidate mode.
   * If the option is passed with no date arguments or an empty dates array,
   * it works as "clear" (clear the selection then set nothing), and if the
   * option is passed with new dates to select, it works as "replace" (clear
   * the selection then set the given dates)
   *
   * When render: false option is used, the method omits re-rendering the
   * picker element. In this case, you need to call refresh() method later in
   * order for the picker element to reflect the changes. The input field is
   * refreshed always regardless of this option.
   *
   * When invalid (unparsable, repeated, disabled or out-of-range) dates are
   * passed, the method ignores them and applies only valid ones. In the case
   * that all the given dates are invalid, which is distinguished from passing
   * no dates, the method considers it as an error and leaves the selection
   * untouched.
   *
   * @param {...(Date|Number|String)|Array} [dates] - Date strings, Date
   * objects, time values or mix of those for new selection
   * @param {Object} [options] - function options
   * - clear: {boolean} - Whether to clear the existing selection
   *     defualt: false
   * - render: {boolean} - Whether to re-render the picker element
   *     default: true
   * - autohide: {boolean} - Whether to hide the picker element after re-render
   *     Ignored when used with render: false
   *     default: config.autohide
   */
  setDate(...args) {
    const dates = [...args];
    const opts = {};
    const lastArg = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.lastItemOf)(args);
    if (
      typeof lastArg === 'object'
      && !Array.isArray(lastArg)
      && !(lastArg instanceof Date)
      && lastArg
    ) {
      Object.assign(opts, dates.pop());
    }

    const inputDates = Array.isArray(dates[0]) ? dates[0] : dates;
    setDate(this, inputDates, opts);
  }

  /**
   * Update the selected date(s) with input field's value
   * Not available on inline picker
   *
   * The input field will be refreshed with properly formatted date string.
   *
   * @param  {Object} [options] - function options
   * - autohide: {boolean} - whether to hide the picker element after refresh
   *     default: false
   */
  update(options = undefined) {
    if (this.inline) {
      return;
    }

    const opts = {clear: true, autohide: !!(options && options.autohide)};
    const inputDates = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.stringToArray)(this.inputField.value, this.config.dateDelimiter);
    setDate(this, inputDates, opts);
  }

  /**
   * Refresh the picker element and the associated input field
   * @param {String} [target] - target item when refreshing one item only
   * 'picker' or 'input'
   * @param {Boolean} [forceRender] - whether to re-render the picker element
   * regardless of its state instead of optimized refresh
   */
  refresh(target = undefined, forceRender = false) {
    if (target && typeof target !== 'string') {
      forceRender = target;
      target = undefined;
    }

    let mode;
    if (target === 'picker') {
      mode = 2;
    } else if (target === 'input') {
      mode = 1;
    } else {
      mode = 3;
    }
    refreshUI(this, mode, !forceRender);
  }

  /**
   * Enter edit mode
   * Not available on inline picker or when the picker element is hidden
   */
  enterEditMode() {
    if (this.inline || !this.picker.active || this.editMode) {
      return;
    }
    this.editMode = true;
    this.inputField.classList.add('in-edit');
  }

  /**
   * Exit from edit mode
   * Not available on inline picker
   * @param  {Object} [options] - function options
   * - update: {boolean} - whether to call update() after exiting
   *     If false, input field is revert to the existing selection
   *     default: false
   */
  exitEditMode(options = undefined) {
    if (this.inline || !this.editMode) {
      return;
    }
    const opts = Object.assign({update: false}, options);
    delete this.editMode;
    this.inputField.classList.remove('in-edit');
    if (opts.update) {
      this.update(opts);
    }
  }
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/events/functions.js":
/*!***************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/events/functions.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "triggerDatepickerEvent": () => (/* binding */ triggerDatepickerEvent),
/* harmony export */   "goToPrevOrNext": () => (/* binding */ goToPrevOrNext),
/* harmony export */   "switchView": () => (/* binding */ switchView),
/* harmony export */   "unfocus": () => (/* binding */ unfocus)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");



function triggerDatepickerEvent(datepicker, type) {
  const detail = {
    date: datepicker.getDate(),
    viewDate: new Date(datepicker.picker.viewDate),
    viewId: datepicker.picker.currentView.id,
    datepicker,
  };
  datepicker.element.dispatchEvent(new CustomEvent(type, {detail}));
}

// direction: -1 (to previous), 1 (to next)
function goToPrevOrNext(datepicker, direction) {
  const {minDate, maxDate} = datepicker.config;
  const {currentView, viewDate} = datepicker.picker;
  let newViewDate;
  switch (currentView.id) {
    case 0:
      newViewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addMonths)(viewDate, direction);
      break;
    case 1:
      newViewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears)(viewDate, direction);
      break;
    default:
      newViewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears)(viewDate, direction * currentView.navStep);
  }
  newViewDate = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.limitToRange)(newViewDate, minDate, maxDate);
  datepicker.picker.changeFocus(newViewDate).render();
}

function switchView(datepicker) {
  const viewId = datepicker.picker.currentView.id;
  if (viewId === datepicker.config.maxView) {
    return;
  }
  datepicker.picker.changeView(viewId + 1).render();
}

function unfocus(datepicker) {
  if (datepicker.config.updateOnBlur) {
    datepicker.update({autohide: true});
  } else {
    datepicker.refresh('input');
    datepicker.hide();
  }
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/events/inputFieldListeners.js":
/*!*************************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/events/inputFieldListeners.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onKeydown": () => (/* binding */ onKeydown),
/* harmony export */   "onFocus": () => (/* binding */ onFocus),
/* harmony export */   "onMousedown": () => (/* binding */ onMousedown),
/* harmony export */   "onClickInput": () => (/* binding */ onClickInput),
/* harmony export */   "onPaste": () => (/* binding */ onPaste)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functions.js */ "./frontend/node_modules/vanillajs-datepicker/js/events/functions.js");




// Find the closest date that doesn't meet the condition for unavailable date
// Returns undefined if no available date is found
// addFn: function to calculate the next date
//   - args: time value, amount
// increase: amount to pass to addFn
// testFn: function to test the unavailablity of the date
//   - args: time value; retun: true if unavailable
function findNextAvailableOne(date, addFn, increase, testFn, min, max) {
  if (!(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.isInRange)(date, min, max)) {
    return;
  }
  if (testFn(date)) {
    const newDate = addFn(date, increase);
    return findNextAvailableOne(newDate, addFn, increase, testFn, min, max);
  }
  return date;
}

// direction: -1 (left/up), 1 (right/down)
// vertical: true for up/down, false for left/right
function moveByArrowKey(datepicker, ev, direction, vertical) {
  const picker = datepicker.picker;
  const currentView = picker.currentView;
  const step = currentView.step || 1;
  let viewDate = picker.viewDate;
  let addFn;
  let testFn;
  switch (currentView.id) {
    case 0:
      if (vertical) {
        viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addDays)(viewDate, direction * 7);
      } else if (ev.ctrlKey || ev.metaKey) {
        viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears)(viewDate, direction);
      } else {
        viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addDays)(viewDate, direction);
      }
      addFn = _lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addDays;
      testFn = (date) => currentView.disabled.includes(date);
      break;
    case 1:
      viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addMonths)(viewDate, vertical ? direction * 4 : direction);
      addFn = _lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addMonths;
      testFn = (date) => {
        const dt = new Date(date);
        const {year, disabled} = currentView;
        return dt.getFullYear() === year && disabled.includes(dt.getMonth());
      };
      break;
    default:
      viewDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears)(viewDate, direction * (vertical ? 4 : 1) * step);
      addFn = _lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addYears;
      testFn = date => currentView.disabled.includes((0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(date, step));
  }
  viewDate = findNextAvailableOne(
    viewDate,
    addFn,
    direction < 0 ? -step : step,
    testFn,
    currentView.minDate,
    currentView.maxDate
  );
  if (viewDate !== undefined) {
    picker.changeFocus(viewDate).render();
  }
}

function onKeydown(datepicker, ev) {
  if (ev.key === 'Tab') {
    (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.unfocus)(datepicker);
    return;
  }

  const picker = datepicker.picker;
  const {id, isMinView} = picker.currentView;
  if (!picker.active) {
    switch (ev.key) {
      case 'ArrowDown':
      case 'Escape':
        picker.show();
        break;
      case 'Enter':
        datepicker.update();
        break;
      default:
        return;
    }
  } else if (datepicker.editMode) {
    switch (ev.key) {
      case 'Escape':
        picker.hide();
        break;
      case 'Enter':
        datepicker.exitEditMode({update: true, autohide: datepicker.config.autohide});
        break;
      default:
        return;
    }
  } else {
    switch (ev.key) {
      case 'Escape':
        picker.hide();
        break;
      case 'ArrowLeft':
        if (ev.ctrlKey || ev.metaKey) {
          (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.goToPrevOrNext)(datepicker, -1);
        } else if (ev.shiftKey) {
          datepicker.enterEditMode();
          return;
        } else {
          moveByArrowKey(datepicker, ev, -1, false);
        }
        break;
      case 'ArrowRight':
        if (ev.ctrlKey || ev.metaKey) {
          (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.goToPrevOrNext)(datepicker, 1);
        } else if (ev.shiftKey) {
          datepicker.enterEditMode();
          return;
        } else {
          moveByArrowKey(datepicker, ev, 1, false);
        }
        break;
      case 'ArrowUp':
        if (ev.ctrlKey || ev.metaKey) {
          (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.switchView)(datepicker);
        } else if (ev.shiftKey) {
          datepicker.enterEditMode();
          return;
        } else {
          moveByArrowKey(datepicker, ev, -1, true);
        }
        break;
      case 'ArrowDown':
        if (ev.shiftKey && !ev.ctrlKey && !ev.metaKey) {
          datepicker.enterEditMode();
          return;
        }
        moveByArrowKey(datepicker, ev, 1, true);
        break;
      case 'Enter':
        if (isMinView) {
          datepicker.setDate(picker.viewDate);
        } else {
          picker.changeView(id - 1).render();
        }
        break;
      case 'Backspace':
      case 'Delete':
        datepicker.enterEditMode();
        return;
      default:
        if (ev.key.length === 1 && !ev.ctrlKey && !ev.metaKey) {
          datepicker.enterEditMode();
        }
        return;
    }
  }
  ev.preventDefault();
  ev.stopPropagation();
}

function onFocus(datepicker) {
  if (datepicker.config.showOnFocus && !datepicker._showing) {
    datepicker.show();
  }
}

// for the prevention for entering edit mode while getting focus on click
function onMousedown(datepicker, ev) {
  const el = ev.target;
  if (datepicker.picker.active || datepicker.config.showOnClick) {
    el._active = el === document.activeElement;
    el._clicking = setTimeout(() => {
      delete el._active;
      delete el._clicking;
    }, 2000);
  }
}

function onClickInput(datepicker, ev) {
  const el = ev.target;
  if (!el._clicking) {
    return;
  }
  clearTimeout(el._clicking);
  delete el._clicking;

  if (el._active) {
    datepicker.enterEditMode();
  }
  delete el._active;

  if (datepicker.config.showOnClick) {
    datepicker.show();
  }
}

function onPaste(datepicker, ev) {
  if (ev.clipboardData.types.includes('text/plain')) {
    datepicker.enterEditMode();
  }
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/events/otherListeners.js":
/*!********************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/events/otherListeners.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onClickOutside": () => (/* binding */ onClickOutside)
/* harmony export */ });
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/event.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/event.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions.js */ "./frontend/node_modules/vanillajs-datepicker/js/events/functions.js");



// for the `document` to delegate the events from outside the picker/input field
function onClickOutside(datepicker, ev) {
  const element = datepicker.element;
  if (element !== document.activeElement) {
    return;
  }
  const pickerElem = datepicker.picker.element;
  if ((0,_lib_event_js__WEBPACK_IMPORTED_MODULE_0__.findElementInEventPath)(ev, el => el === element || el === pickerElem)) {
    return;
  }
  (0,_functions_js__WEBPACK_IMPORTED_MODULE_1__.unfocus)(datepicker);
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/events/pickerListeners.js":
/*!*********************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/events/pickerListeners.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onClickTodayBtn": () => (/* binding */ onClickTodayBtn),
/* harmony export */   "onClickClearBtn": () => (/* binding */ onClickClearBtn),
/* harmony export */   "onClickViewSwitch": () => (/* binding */ onClickViewSwitch),
/* harmony export */   "onClickPrevBtn": () => (/* binding */ onClickPrevBtn),
/* harmony export */   "onClickNextBtn": () => (/* binding */ onClickNextBtn),
/* harmony export */   "onClickView": () => (/* binding */ onClickView),
/* harmony export */   "onClickPicker": () => (/* binding */ onClickPicker)
/* harmony export */ });
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/event.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/event.js");
/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functions.js */ "./frontend/node_modules/vanillajs-datepicker/js/events/functions.js");




function goToSelectedMonthOrYear(datepicker, selection) {
  const picker = datepicker.picker;
  const viewDate = new Date(picker.viewDate);
  const viewId = picker.currentView.id;
  const newDate = viewId === 1
    ? (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_0__.addMonths)(viewDate, selection - viewDate.getMonth())
    : (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_0__.addYears)(viewDate, selection - viewDate.getFullYear());

  picker.changeFocus(newDate).changeView(viewId - 1).render();
}

function onClickTodayBtn(datepicker) {
  const picker = datepicker.picker;
  const currentDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_0__.today)();
  if (datepicker.config.todayBtnMode === 1) {
    if (datepicker.config.autohide) {
      datepicker.setDate(currentDate);
      return;
    }
    datepicker.setDate(currentDate, {render: false});
    picker.update();
  }
  if (picker.viewDate !== currentDate) {
    picker.changeFocus(currentDate);
  }
  picker.changeView(0).render();
}

function onClickClearBtn(datepicker) {
  datepicker.setDate({clear: true});
}

function onClickViewSwitch(datepicker) {
  (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.switchView)(datepicker);
}

function onClickPrevBtn(datepicker) {
  (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.goToPrevOrNext)(datepicker, -1);
}

function onClickNextBtn(datepicker) {
  (0,_functions_js__WEBPACK_IMPORTED_MODULE_2__.goToPrevOrNext)(datepicker, 1);
}

// For the picker's main block to delegete the events from `datepicker-cell`s
function onClickView(datepicker, ev) {
  const target = (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_1__.findElementInEventPath)(ev, '.datepicker-cell');
  if (!target || target.classList.contains('disabled')) {
    return;
  }

  const {id, isMinView} = datepicker.picker.currentView;
  if (isMinView) {
    datepicker.setDate(Number(target.dataset.date));
  } else if (id === 1) {
    goToSelectedMonthOrYear(datepicker, Number(target.dataset.month));
  } else {
    goToSelectedMonthOrYear(datepicker, Number(target.dataset.year));
  }
}

function onClickPicker(datepicker) {
  if (!datepicker.inline && !datepicker.config.disableTouchKeyboard) {
    datepicker.inputField.focus();
  }
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/i18n/base-locales.js":
/*!****************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/i18n/base-locales.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "locales": () => (/* binding */ locales)
/* harmony export */ });
// default locales
const locales = {
  en: {
    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    today: "Today",
    clear: "Clear",
    titleFormat: "MM y"
  }
};


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/lib/date-format.js":
/*!**************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/lib/date-format.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "reFormatTokens": () => (/* binding */ reFormatTokens),
/* harmony export */   "reNonDateParts": () => (/* binding */ reNonDateParts),
/* harmony export */   "parseDate": () => (/* binding */ parseDate),
/* harmony export */   "formatDate": () => (/* binding */ formatDate)
/* harmony export */ });
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");



// pattern for format parts
const reFormatTokens = /dd?|DD?|mm?|MM?|yy?(?:yy)?/;
// pattern for non date parts
const reNonDateParts = /[\s!-/:-@[-`{-~年月日]+/;
// cache for persed formats
let knownFormats = {};
// parse funtions for date parts
const parseFns = {
  y(date, year) {
    return new Date(date).setFullYear(parseInt(year, 10));
  },
  m(date, month, locale) {
    const newDate = new Date(date);
    let monthIndex = parseInt(month, 10) - 1;

    if (isNaN(monthIndex)) {
      if (!month) {
        return NaN;
      }

      const monthName = month.toLowerCase();
      const compareNames = name => name.toLowerCase().startsWith(monthName);
      // compare with both short and full names because some locales have periods
      // in the short names (not equal to the first X letters of the full names)
      monthIndex = locale.monthsShort.findIndex(compareNames);
      if (monthIndex < 0) {
        monthIndex = locale.months.findIndex(compareNames);
      }
      if (monthIndex < 0) {
        return NaN;
      }
    }

    newDate.setMonth(monthIndex);
    return newDate.getMonth() !== normalizeMonth(monthIndex)
      ? newDate.setDate(0)
      : newDate.getTime();
  },
  d(date, day) {
    return new Date(date).setDate(parseInt(day, 10));
  },
};
// format functions for date parts
const formatFns = {
  d(date) {
    return date.getDate();
  },
  dd(date) {
    return padZero(date.getDate(), 2);
  },
  D(date, locale) {
    return locale.daysShort[date.getDay()];
  },
  DD(date, locale) {
    return locale.days[date.getDay()];
  },
  m(date) {
    return date.getMonth() + 1;
  },
  mm(date) {
    return padZero(date.getMonth() + 1, 2);
  },
  M(date, locale) {
    return locale.monthsShort[date.getMonth()];
  },
  MM(date, locale) {
    return locale.months[date.getMonth()];
  },
  y(date) {
    return date.getFullYear();
  },
  yy(date) {
    return padZero(date.getFullYear(), 2).slice(-2);
  },
  yyyy(date) {
    return padZero(date.getFullYear(), 4);
  },
};

// get month index in normal range (0 - 11) from any number
function normalizeMonth(monthIndex) {
  return monthIndex > -1 ? monthIndex % 12 : normalizeMonth(monthIndex + 12);
}

function padZero(num, length) {
  return num.toString().padStart(length, '0');
}

function parseFormatString(format) {
  if (typeof format !== 'string') {
    throw new Error("Invalid date format.");
  }
  if (format in knownFormats) {
    return knownFormats[format];
  }

  // sprit the format string into parts and seprators
  const separators = format.split(reFormatTokens);
  const parts = format.match(new RegExp(reFormatTokens, 'g'));
  if (separators.length === 0 || !parts) {
    throw new Error("Invalid date format.");
  }

  // collect format functions used in the format
  const partFormatters = parts.map(token => formatFns[token]);

  // collect parse function keys used in the format
  // iterate over parseFns' keys in order to keep the order of the keys.
  const partParserKeys = Object.keys(parseFns).reduce((keys, key) => {
    const token = parts.find(part => part[0] !== 'D' && part[0].toLowerCase() === key);
    if (token) {
      keys.push(key);
    }
    return keys;
  }, []);

  return knownFormats[format] = {
    parser(dateStr, locale) {
      const dateParts = dateStr.split(reNonDateParts).reduce((dtParts, part, index) => {
        if (part.length > 0 && parts[index]) {
          const token = parts[index][0];
          if (token === 'M') {
            dtParts.m = part;
          } else if (token !== 'D') {
            dtParts[token] = part;
          }
        }
        return dtParts;
      }, {});

      // iterate over partParserkeys so that the parsing is made in the oder
      // of year, month and day to prevent the day parser from correcting last
      // day of month wrongly
      return partParserKeys.reduce((origDate, key) => {
        const newDate = parseFns[key](origDate, dateParts[key], locale);
        // ingnore the part failed to parse
        return isNaN(newDate) ? origDate : newDate;
      }, (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.today)());
    },
    formatter(date, locale) {
      let dateStr = partFormatters.reduce((str, fn, index) => {
        return str += `${separators[index]}${fn(date, locale)}`;
      }, '');
      // separators' length is always parts' length + 1,
      return dateStr += (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.lastItemOf)(separators);
    },
  };
}

function parseDate(dateStr, format, locale) {
  if (dateStr instanceof Date || typeof dateStr === 'number') {
    const date = (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.stripTime)(dateStr);
    return isNaN(date) ? undefined : date;
  }
  if (!dateStr) {
    return undefined;
  }
  if (dateStr === 'today') {
    return (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.today)();
  }

  if (format && format.toValue) {
    const date = format.toValue(dateStr, format, locale);
    return isNaN(date) ? undefined : (0,_date_js__WEBPACK_IMPORTED_MODULE_0__.stripTime)(date);
  }

  return parseFormatString(format).parser(dateStr, locale);
}

function formatDate(date, format, locale) {
  if (isNaN(date) || (!date && date !== 0)) {
    return '';
  }

  const dateObj = typeof date === 'number' ? new Date(date) : date;

  if (format.toDisplay) {
    return format.toDisplay(dateObj, format, locale);
  }

  return parseFormatString(format).formatter(dateObj, locale);
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js":
/*!*******************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/lib/date.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stripTime": () => (/* binding */ stripTime),
/* harmony export */   "today": () => (/* binding */ today),
/* harmony export */   "dateValue": () => (/* binding */ dateValue),
/* harmony export */   "addDays": () => (/* binding */ addDays),
/* harmony export */   "addWeeks": () => (/* binding */ addWeeks),
/* harmony export */   "addMonths": () => (/* binding */ addMonths),
/* harmony export */   "addYears": () => (/* binding */ addYears),
/* harmony export */   "dayOfTheWeekOf": () => (/* binding */ dayOfTheWeekOf),
/* harmony export */   "getWeek": () => (/* binding */ getWeek),
/* harmony export */   "startOfYearPeriod": () => (/* binding */ startOfYearPeriod)
/* harmony export */ });
function stripTime(timeValue) {
  return new Date(timeValue).setHours(0, 0, 0, 0);
}

function today() {
  return new Date().setHours(0, 0, 0, 0);
}

// Get the time value of the start of given date or year, month and day
function dateValue(...args) {
  switch (args.length) {
    case 0:
      return today();
    case 1:
      return stripTime(args[0]);
  }

  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999
  const newDate = new Date(0);
  newDate.setFullYear(...args);
  return newDate.setHours(0, 0, 0, 0);
}

function addDays(date, amount) {
  const newDate = new Date(date);
  return newDate.setDate(newDate.getDate() + amount);
}

function addWeeks(date, amount) {
  return addDays(date, amount * 7);
}

function addMonths(date, amount) {
  // If the day of the date is not in the new month, the last day of the new
  // month will be returned. e.g. Jan 31 + 1 month → Feb 28 (not Mar 03)
  const newDate = new Date(date);
  const monthsToSet = newDate.getMonth() + amount;
  let expectedMonth = monthsToSet % 12;
  if (expectedMonth < 0) {
    expectedMonth += 12;
  }

  const time = newDate.setMonth(monthsToSet);
  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;
}

function addYears(date, amount) {
  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the
  // new year will be returned.
  const newDate = new Date(date);
  const expectedMonth = newDate.getMonth();
  const time = newDate.setFullYear(newDate.getFullYear() + amount);
  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;
}

// Calculate the distance bettwen 2 days of the week
function dayDiff(day, from) {
  return (day - from + 7) % 7;
}

// Get the date of the specified day of the week of given base date
function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {
  const baseDay = new Date(baseDate).getDay();
  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));
}

// Get the ISO week of a date
function getWeek(date) {
  // start of ISO week is Monday
  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);
  // 1st week == the week where the 4th of January is in
  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);
  return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;
}

// Get the start year of the period of years that includes given date
// years: length of the year period
function startOfYearPeriod(date, years) {
  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */
  const year = new Date(date).getFullYear();
  return Math.floor(year / years) * years;
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/lib/dom.js":
/*!******************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/lib/dom.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseHTML": () => (/* binding */ parseHTML),
/* harmony export */   "isVisible": () => (/* binding */ isVisible),
/* harmony export */   "hideElement": () => (/* binding */ hideElement),
/* harmony export */   "showElement": () => (/* binding */ showElement),
/* harmony export */   "emptyChildNodes": () => (/* binding */ emptyChildNodes),
/* harmony export */   "replaceChildNodes": () => (/* binding */ replaceChildNodes)
/* harmony export */ });
const range = document.createRange();

function parseHTML(html) {
  return range.createContextualFragment(html);
}

// equivalent to jQuery's :visble
function isVisible(el) {
  return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length);
}

function hideElement(el) {
  if (el.style.display === 'none') {
    return;
  }
  // back up the existing display setting in data-style-display
  if (el.style.display) {
    el.dataset.styleDisplay = el.style.display;
  }
  el.style.display = 'none';
}

function showElement(el) {
  if (el.style.display !== 'none') {
    return;
  }
  if (el.dataset.styleDisplay) {
    // restore backed-up dispay property
    el.style.display = el.dataset.styleDisplay;
    delete el.dataset.styleDisplay;
  } else {
    el.style.display = '';
  }
}

function emptyChildNodes(el) {
  if (el.firstChild) {
    el.removeChild(el.firstChild);
    emptyChildNodes(el);
  }
}

function replaceChildNodes(el, newChildNodes) {
  emptyChildNodes(el);
  if (newChildNodes instanceof DocumentFragment) {
    el.appendChild(newChildNodes);
  } else if (typeof newChildNodes === 'string') {
    el.appendChild(parseHTML(newChildNodes));
  } else if (typeof newChildNodes.forEach === 'function') {
    newChildNodes.forEach((node) => {
      el.appendChild(node);
    });
  }
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/lib/event.js":
/*!********************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/lib/event.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "registerListeners": () => (/* binding */ registerListeners),
/* harmony export */   "unregisterListeners": () => (/* binding */ unregisterListeners),
/* harmony export */   "findElementInEventPath": () => (/* binding */ findElementInEventPath)
/* harmony export */ });
const listenerRegistry = new WeakMap();
const {addEventListener, removeEventListener} = EventTarget.prototype;

// Register event listeners to a key object
// listeners: array of listener definitions;
//   - each definition must be a flat array of event target and the arguments
//     used to call addEventListener() on the target
function registerListeners(keyObj, listeners) {
  let registered = listenerRegistry.get(keyObj);
  if (!registered) {
    registered = [];
    listenerRegistry.set(keyObj, registered);
  }
  listeners.forEach((listener) => {
    addEventListener.call(...listener);
    registered.push(listener);
  });
}

function unregisterListeners(keyObj) {
  let listeners = listenerRegistry.get(keyObj);
  if (!listeners) {
    return;
  }
  listeners.forEach((listener) => {
    removeEventListener.call(...listener);
  });
  listenerRegistry.delete(keyObj);
}

// Event.composedPath() polyfill for Edge
// based on https://gist.github.com/kleinfreund/e9787d73776c0e3750dcfcdc89f100ec
if (!Event.prototype.composedPath) {
  const getComposedPath = (node, path = []) => {
    path.push(node);

    let parent;
    if (node.parentNode) {
      parent = node.parentNode;
    } else if (node.host) { // ShadowRoot
      parent = node.host;
    } else if (node.defaultView) {  // Document
      parent = node.defaultView;
    }
    return parent ? getComposedPath(parent, path) : path;
  };

  Event.prototype.composedPath = function () {
    return getComposedPath(this.target);
  };
}

function findFromPath(path, criteria, currentTarget, index = 0) {
  const el = path[index];
  if (criteria(el)) {
    return el;
  } else if (el === currentTarget || !el.parentElement) {
    // stop when reaching currentTarget or <html>
    return;
  }
  return findFromPath(path, criteria, currentTarget, index + 1);
}

// Search for the actual target of a delegated event
function findElementInEventPath(ev, selector) {
  const criteria = typeof selector === 'function' ? selector : el => el.matches(selector);
  return findFromPath(ev.composedPath(), criteria, ev.currentTarget);
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js":
/*!********************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasProperty": () => (/* binding */ hasProperty),
/* harmony export */   "lastItemOf": () => (/* binding */ lastItemOf),
/* harmony export */   "pushUnique": () => (/* binding */ pushUnique),
/* harmony export */   "stringToArray": () => (/* binding */ stringToArray),
/* harmony export */   "isInRange": () => (/* binding */ isInRange),
/* harmony export */   "limitToRange": () => (/* binding */ limitToRange),
/* harmony export */   "createTagRepeat": () => (/* binding */ createTagRepeat),
/* harmony export */   "optimizeTemplateHTML": () => (/* binding */ optimizeTemplateHTML)
/* harmony export */ });
function hasProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

function lastItemOf(arr) {
  return arr[arr.length - 1];
}

// push only the items not included in the array
function pushUnique(arr, ...items) {
  items.forEach((item) => {
    if (arr.includes(item)) {
      return;
    }
    arr.push(item);
  });
  return arr;
}

function stringToArray(str, separator) {
  // convert empty string to an empty array
  return str ? str.split(separator) : [];
}

function isInRange(testVal, min, max) {
  const minOK = min === undefined || testVal >= min;
  const maxOK = max === undefined || testVal <= max;
  return minOK && maxOK;
}

function limitToRange(val, min, max) {
  if (val < min) {
    return min;
  }
  if (val > max) {
    return max;
  }
  return val;
}

function createTagRepeat(tagName, repeat, attributes = {}, index = 0, html = '') {
  const openTagSrc = Object.keys(attributes).reduce((src, attr) => {
    let val = attributes[attr];
    if (typeof val === 'function') {
      val = val(index);
    }
    return `${src} ${attr}="${val}"`;
  }, tagName);
  html += `<${openTagSrc}></${tagName}>`;

  const next = index + 1;
  return next < repeat
    ? createTagRepeat(tagName, repeat, attributes, next, html)
    : html;
}

// Remove the spacing surrounding tags for HTML parser not to create text nodes
// before/after elements
function optimizeTemplateHTML(html) {
  return html.replace(/>\s+/g, '>').replace(/\s+</, '<');
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/options/defaultOptions.js":
/*!*********************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/options/defaultOptions.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// config options updatable by setOptions() and their default values
const defaultOptions = {
  autohide: false,
  beforeShowDay: null,
  beforeShowDecade: null,
  beforeShowMonth: null,
  beforeShowYear: null,
  calendarWeeks: false,
  clearBtn: false,
  dateDelimiter: ',',
  datesDisabled: [],
  daysOfWeekDisabled: [],
  daysOfWeekHighlighted: [],
  defaultViewDate: undefined, // placeholder, defaults to today() by the program
  disableTouchKeyboard: false,
  format: 'mm/dd/yyyy',
  language: 'en',
  maxDate: null,
  maxNumberOfDates: 1,
  maxView: 3,
  minDate: null,
  nextArrow: '»',
  orientation: 'auto',
  pickLevel: 0,
  prevArrow: '«',
  showDaysOfWeek: true,
  showOnClick: true,
  showOnFocus: true,
  startView: 0,
  title: '',
  todayBtn: false,
  todayBtnMode: 0,
  todayHighlight: false,
  updateOnBlur: true,
  weekStart: 0,
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defaultOptions);


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/options/processOptions.js":
/*!*********************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/options/processOptions.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ processOptions)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/date-format.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date-format.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/dom.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/dom.js");
/* harmony import */ var _defaultOptions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultOptions.js */ "./frontend/node_modules/vanillajs-datepicker/js/options/defaultOptions.js");






const {
  language: defaultLang,
  format: defaultFormat,
  weekStart: defaultWeekStart,
} = _defaultOptions_js__WEBPACK_IMPORTED_MODULE_4__.default;

// Reducer function to filter out invalid day-of-week from the input
function sanitizeDOW(dow, day) {
  return dow.length < 6 && day >= 0 && day < 7
    ? (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(dow, day)
    : dow;
}

function calcEndOfWeek(startOfWeek) {
  return (startOfWeek + 6) % 7;
}

// validate input date. if invalid, fallback to the original value
function validateDate(value, format, locale, origValue) {
  const date = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(value, format, locale);
  return date !== undefined ? date : origValue;
}

// Validate viewId. if invalid, fallback to the original value
function validateViewId(value, origValue, max = 3) {
  const viewId = parseInt(value, 10);
  return viewId >= 0 && viewId <= max ? viewId : origValue;
}

// Create Datepicker configuration to set
function processOptions(options, datepicker) {
  const inOpts = Object.assign({}, options);
  const config = {};
  const locales = datepicker.constructor.locales;
  let {
    format,
    language,
    locale,
    maxDate,
    maxView,
    minDate,
    pickLevel,
    startView,
    weekStart,
  } = datepicker.config || {};

  if (inOpts.language) {
    let lang;
    if (inOpts.language !== language) {
      if (locales[inOpts.language]) {
        lang = inOpts.language;
      } else {
        // Check if langauge + region tag can fallback to the one without
        // region (e.g. fr-CA → fr)
        lang = inOpts.language.split('-')[0];
        if (locales[lang] === undefined) {
          lang = false;
        }
      }
    }
    delete inOpts.language;
    if (lang) {
      language = config.language = lang;

      // update locale as well when updating language
      const origLocale = locale || locales[defaultLang];
      // use default language's properties for the fallback
      locale = Object.assign({
        format: defaultFormat,
        weekStart: defaultWeekStart
      }, locales[defaultLang]);
      if (language !== defaultLang) {
        Object.assign(locale, locales[language]);
      }
      config.locale = locale;
      // if format and/or weekStart are the same as old locale's defaults,
      // update them to new locale's defaults
      if (format === origLocale.format) {
        format = config.format = locale.format;
      }
      if (weekStart === origLocale.weekStart) {
        weekStart = config.weekStart = locale.weekStart;
        config.weekEnd = calcEndOfWeek(locale.weekStart);
      }
    }
  }

  if (inOpts.format) {
    const hasToDisplay = typeof inOpts.format.toDisplay === 'function';
    const hasToValue = typeof inOpts.format.toValue === 'function';
    const validFormatString = _lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.reFormatTokens.test(inOpts.format);
    if ((hasToDisplay && hasToValue) || validFormatString) {
      format = config.format = inOpts.format;
    }
    delete inOpts.format;
  }

  //*** dates ***//
  // while min and maxDate for "no limit" in the options are better to be null
  // (especially when updating), the ones in the config have to be undefined
  // because null is treated as 0 (= unix epoch) when comparing with time value
  let minDt = minDate;
  let maxDt = maxDate;
  if (inOpts.minDate !== undefined) {
    minDt = inOpts.minDate === null
      ? (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(0, 0, 1)  // set 0000-01-01 to prevent negative values for year
      : validateDate(inOpts.minDate, format, locale, minDt);
    delete inOpts.minDate;
  }
  if (inOpts.maxDate !== undefined) {
    maxDt = inOpts.maxDate === null
      ? undefined
      : validateDate(inOpts.maxDate, format, locale, maxDt);
    delete inOpts.maxDate;
  }
  if (maxDt < minDt) {
    minDate = config.minDate = maxDt;
    maxDate = config.maxDate = minDt;
  } else {
    if (minDate !== minDt) {
      minDate = config.minDate = minDt;
    }
    if (maxDate !== maxDt) {
      maxDate = config.maxDate = maxDt;
    }
  }

  if (inOpts.datesDisabled) {
    config.datesDisabled = inOpts.datesDisabled.reduce((dates, dt) => {
      const date = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(dt, format, locale);
      return date !== undefined ? (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(dates, date) : dates;
    }, []);
    delete inOpts.datesDisabled;
  }
  if (inOpts.defaultViewDate !== undefined) {
    const viewDate = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.parseDate)(inOpts.defaultViewDate, format, locale);
    if (viewDate !== undefined) {
      config.defaultViewDate = viewDate;
    }
    delete inOpts.defaultViewDate;
  }

  //*** days of week ***//
  if (inOpts.weekStart !== undefined) {
    const wkStart = Number(inOpts.weekStart) % 7;
    if (!isNaN(wkStart)) {
      weekStart = config.weekStart = wkStart;
      config.weekEnd = calcEndOfWeek(wkStart);
    }
    delete inOpts.weekStart;
  }
  if (inOpts.daysOfWeekDisabled) {
    config.daysOfWeekDisabled = inOpts.daysOfWeekDisabled.reduce(sanitizeDOW, []);
    delete inOpts.daysOfWeekDisabled;
  }
  if (inOpts.daysOfWeekHighlighted) {
    config.daysOfWeekHighlighted = inOpts.daysOfWeekHighlighted.reduce(sanitizeDOW, []);
    delete inOpts.daysOfWeekHighlighted;
  }

  //*** multi date ***//
  if (inOpts.maxNumberOfDates !== undefined) {
    const maxNumberOfDates = parseInt(inOpts.maxNumberOfDates, 10);
    if (maxNumberOfDates >= 0) {
      config.maxNumberOfDates = maxNumberOfDates;
      config.multidate = maxNumberOfDates !== 1;
    }
    delete inOpts.maxNumberOfDates;
  }
  if (inOpts.dateDelimiter) {
    config.dateDelimiter = String(inOpts.dateDelimiter);
    delete inOpts.dateDelimiter;
  }

  //*** pick level & view ***//
  let newPickLevel = pickLevel;
  if (inOpts.pickLevel !== undefined) {
    newPickLevel = validateViewId(inOpts.pickLevel, 2);
    delete inOpts.pickLevel;
  }
  if (newPickLevel !== pickLevel) {
    pickLevel = config.pickLevel = newPickLevel;
  }

  let newMaxView = maxView;
  if (inOpts.maxView !== undefined) {
    newMaxView = validateViewId(inOpts.maxView, maxView);
    delete inOpts.maxView;
  }
  // ensure max view >= pick level
  newMaxView = pickLevel > newMaxView ? pickLevel : newMaxView;
  if (newMaxView !== maxView) {
    maxView = config.maxView = newMaxView;
  }

  let newStartView = startView;
  if (inOpts.startView !== undefined) {
    newStartView = validateViewId(inOpts.startView, newStartView);
    delete inOpts.startView;
  }
  // ensure pick level <= start view <= max view
  if (newStartView < pickLevel) {
    newStartView = pickLevel;
  } else if (newStartView > maxView) {
    newStartView = maxView;
  }
  if (newStartView !== startView) {
    config.startView = newStartView;
  }

  //*** template ***//
  if (inOpts.prevArrow) {
    const prevArrow = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.parseHTML)(inOpts.prevArrow);
    if (prevArrow.childNodes.length > 0) {
      config.prevArrow = prevArrow.childNodes;
    }
    delete inOpts.prevArrow;
  }
  if (inOpts.nextArrow) {
    const nextArrow = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.parseHTML)(inOpts.nextArrow);
    if (nextArrow.childNodes.length > 0) {
      config.nextArrow = nextArrow.childNodes;
    }
    delete inOpts.nextArrow;
  }

  //*** misc ***//
  if (inOpts.disableTouchKeyboard !== undefined) {
    config.disableTouchKeyboard = 'ontouchstart' in document && !!inOpts.disableTouchKeyboard;
    delete inOpts.disableTouchKeyboard;
  }
  if (inOpts.orientation) {
    const orientation = inOpts.orientation.toLowerCase().split(/\s+/g);
    config.orientation = {
      x: orientation.find(x => (x === 'left' || x === 'right')) || 'auto',
      y: orientation.find(y => (y === 'top' || y === 'bottom')) || 'auto',
    };
    delete inOpts.orientation;
  }
  if (inOpts.todayBtnMode !== undefined) {
    switch(inOpts.todayBtnMode) {
      case 0:
      case 1:
        config.todayBtnMode = inOpts.todayBtnMode;
    }
    delete inOpts.todayBtnMode;
  }

  //*** copy the rest ***//
  Object.keys(inOpts).forEach((key) => {
    if (inOpts[key] !== undefined && (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(_defaultOptions_js__WEBPACK_IMPORTED_MODULE_4__.default, key)) {
      config[key] = inOpts[key];
    }
  });

  return config;
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/picker/Picker.js":
/*!************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/picker/Picker.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Picker)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/dom.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/dom.js");
/* harmony import */ var _lib_event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/event.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/event.js");
/* harmony import */ var _templates_pickerTemplate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./templates/pickerTemplate.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/templates/pickerTemplate.js");
/* harmony import */ var _views_DaysView_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./views/DaysView.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/DaysView.js");
/* harmony import */ var _views_MonthsView_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./views/MonthsView.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/MonthsView.js");
/* harmony import */ var _views_YearsView_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./views/YearsView.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/YearsView.js");
/* harmony import */ var _events_functions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../events/functions.js */ "./frontend/node_modules/vanillajs-datepicker/js/events/functions.js");
/* harmony import */ var _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../events/pickerListeners.js */ "./frontend/node_modules/vanillajs-datepicker/js/events/pickerListeners.js");











function processPickerOptions(picker, options) {
  if (options.title !== undefined) {
    if (options.title) {
      picker.controls.title.textContent = options.title;
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.showElement)(picker.controls.title);
    } else {
      picker.controls.title.textContent = '';
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.hideElement)(picker.controls.title);
    }
  }
  if (options.prevArrow) {
    const prevBtn = picker.controls.prevBtn;
    (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.emptyChildNodes)(prevBtn);
    options.prevArrow.forEach((node) => {
      prevBtn.appendChild(node.cloneNode(true));
    });
  }
  if (options.nextArrow) {
    const nextBtn = picker.controls.nextBtn;
    (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.emptyChildNodes)(nextBtn);
    options.nextArrow.forEach((node) => {
      nextBtn.appendChild(node.cloneNode(true));
    });
  }
  if (options.locale) {
    picker.controls.todayBtn.textContent = options.locale.today;
    picker.controls.clearBtn.textContent = options.locale.clear;
  }
  if (options.todayBtn !== undefined) {
    if (options.todayBtn) {
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.showElement)(picker.controls.todayBtn);
    } else {
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.hideElement)(picker.controls.todayBtn);
    }
  }
  if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'minDate') || (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'maxDate')) {
    const {minDate, maxDate} = picker.datepicker.config;
    picker.controls.todayBtn.disabled = !(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.isInRange)((0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.today)(), minDate, maxDate);
  }
  if (options.clearBtn !== undefined) {
    if (options.clearBtn) {
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.showElement)(picker.controls.clearBtn);
    } else {
      (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.hideElement)(picker.controls.clearBtn);
    }
  }
}

// Compute view date to reset, which will be...
// - the last item of the selected dates or defaultViewDate if no selection
// - limitted to minDate or maxDate if it exceeds the range
function computeResetViewDate(datepicker) {
  const {dates, config} = datepicker;
  const viewDate = dates.length > 0 ? (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.lastItemOf)(dates) : config.defaultViewDate;
  return (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.limitToRange)(viewDate, config.minDate, config.maxDate);
}

// Change current view's view date
function setViewDate(picker, newDate) {
  const oldViewDate = new Date(picker.viewDate);
  const newViewDate = new Date(newDate);
  const {id, year, first, last} = picker.currentView;
  const viewYear = newViewDate.getFullYear();

  picker.viewDate = newDate;
  if (viewYear !== oldViewDate.getFullYear()) {
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(picker.datepicker, 'changeYear');
  }
  if (newViewDate.getMonth() !== oldViewDate.getMonth()) {
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(picker.datepicker, 'changeMonth');
  }

  // return whether the new date is in different period on time from the one
  // displayed in the current view
  // when true, the view needs to be re-rendered on the next UI refresh.
  switch (id) {
    case 0:
      return newDate < first || newDate > last;
    case 1:
      return viewYear !== year;
    default:
      return viewYear < first || viewYear > last;
  }
}

function getTextDirection(el) {
  return window.getComputedStyle(el).direction;
}

// Class representing the picker UI
class Picker {
  constructor(datepicker) {
    this.datepicker = datepicker;

    const template = _templates_pickerTemplate_js__WEBPACK_IMPORTED_MODULE_4__.default.replace(/%buttonClass%/g, datepicker.config.buttonClass);
    const element = this.element = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.parseHTML)(template).firstChild;
    const [header, main, footer] = element.firstChild.children;
    const title = header.firstElementChild;
    const [prevBtn, viewSwitch, nextBtn] = header.lastElementChild.children;
    const [todayBtn, clearBtn] = footer.firstChild.children;
    const controls = {
      title,
      prevBtn,
      viewSwitch,
      nextBtn,
      todayBtn,
      clearBtn,
    };
    this.main = main;
    this.controls = controls;

    const elementClass = datepicker.inline ? 'inline' : 'dropdown';
    element.classList.add(`datepicker-${elementClass}`);

    processPickerOptions(this, datepicker.config);
    this.viewDate = computeResetViewDate(datepicker);

    // set up event listeners
    (0,_lib_event_js__WEBPACK_IMPORTED_MODULE_3__.registerListeners)(datepicker, [
      [element, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickPicker.bind(null, datepicker), {capture: true}],
      [main, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickView.bind(null, datepicker)],
      [controls.viewSwitch, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickViewSwitch.bind(null, datepicker)],
      [controls.prevBtn, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickPrevBtn.bind(null, datepicker)],
      [controls.nextBtn, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickNextBtn.bind(null, datepicker)],
      [controls.todayBtn, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickTodayBtn.bind(null, datepicker)],
      [controls.clearBtn, 'click', _events_pickerListeners_js__WEBPACK_IMPORTED_MODULE_9__.onClickClearBtn.bind(null, datepicker)],
    ]);

    // set up views
    this.views = [
      new _views_DaysView_js__WEBPACK_IMPORTED_MODULE_5__.default(this),
      new _views_MonthsView_js__WEBPACK_IMPORTED_MODULE_6__.default(this),
      new _views_YearsView_js__WEBPACK_IMPORTED_MODULE_7__.default(this, {id: 2, name: 'years', cellClass: 'year', step: 1}),
      new _views_YearsView_js__WEBPACK_IMPORTED_MODULE_7__.default(this, {id: 3, name: 'decades', cellClass: 'decade', step: 10}),
    ];
    this.currentView = this.views[datepicker.config.startView];

    this.currentView.render();
    this.main.appendChild(this.currentView.element);
    datepicker.config.container.appendChild(this.element);
  }

  setOptions(options) {
    processPickerOptions(this, options);
    this.views.forEach((view) => {
      view.init(options, false);
    });
    this.currentView.render();
  }

  detach() {
    this.datepicker.config.container.removeChild(this.element);
  }

  show() {
    if (this.active) {
      return;
    }
    this.element.classList.add('active');
    this.active = true;

    const datepicker = this.datepicker;
    if (!datepicker.inline) {
      // ensure picker's direction matches input's
      const inputDirection = getTextDirection(datepicker.inputField);
      if (inputDirection !== getTextDirection(datepicker.config.container)) {
        this.element.dir = inputDirection;
      } else if (this.element.dir) {
        this.element.removeAttribute('dir');
      }

      this.place();
      if (datepicker.config.disableTouchKeyboard) {
        datepicker.inputField.blur();
      }
    }
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(datepicker, 'show');
  }

  hide() {
    if (!this.active) {
      return;
    }
    this.datepicker.exitEditMode();
    this.element.classList.remove('active');
    this.active = false;
    (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(this.datepicker, 'hide');
  }

  place() {
    const {classList, style} = this.element;
    const {config, inputField} = this.datepicker;
    const container = config.container;
    const {
      width: calendarWidth,
      height: calendarHeight,
    } = this.element.getBoundingClientRect();
    const {
      left: containerLeft,
      top: containerTop,
      width: containerWidth,
    } = container.getBoundingClientRect();
    const {
      left: inputLeft,
      top: inputTop,
      width: inputWidth,
      height: inputHeight
    } = inputField.getBoundingClientRect();
    let {x: orientX, y: orientY} = config.orientation;
    let scrollTop;
    let left;
    let top;

    if (container === document.body) {
      scrollTop = window.scrollY;
      left = inputLeft + window.scrollX;
      top = inputTop + scrollTop;
    } else {
      scrollTop = container.scrollTop;
      left = inputLeft - containerLeft;
      top = inputTop - containerTop + scrollTop;
    }

    if (orientX === 'auto') {
      if (left < 0) {
        // align to the left and move into visible area if input's left edge < window's
        orientX = 'left';
        left = 10;
      } else if (left + calendarWidth > containerWidth) {
        // align to the right if canlendar's right edge > container's
        orientX = 'right';
      } else {
        orientX = getTextDirection(inputField) === 'rtl' ? 'right' : 'left';
      }
    }
    if (orientX === 'right') {
      left -= calendarWidth - inputWidth;
    }

    if (orientY === 'auto') {
      orientY = top - calendarHeight < scrollTop ? 'bottom' : 'top';
    }
    if (orientY === 'top') {
      top -= calendarHeight;
    } else {
      top += inputHeight;
    }

    classList.remove(
      'datepicker-orient-top',
      'datepicker-orient-bottom',
      'datepicker-orient-right',
      'datepicker-orient-left'
    );
    classList.add(`datepicker-orient-${orientY}`, `datepicker-orient-${orientX}`);

    style.top = top ? `${top}px` : top;
    style.left = left ? `${left}px` : left;
  }

  setViewSwitchLabel(labelText) {
    this.controls.viewSwitch.textContent = labelText;
  }

  setPrevBtnDisabled(disabled) {
    this.controls.prevBtn.disabled = disabled;
  }

  setNextBtnDisabled(disabled) {
    this.controls.nextBtn.disabled = disabled;
  }

  changeView(viewId) {
    const oldView = this.currentView;
    const newView =  this.views[viewId];
    if (newView.id !== oldView.id) {
      this.currentView = newView;
      this._renderMethod = 'render';
      (0,_events_functions_js__WEBPACK_IMPORTED_MODULE_8__.triggerDatepickerEvent)(this.datepicker, 'changeView');
      this.main.replaceChild(newView.element, oldView.element);
    }
    return this;
  }

  // Change the focused date (view date)
  changeFocus(newViewDate) {
    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refreshFocus';
    this.views.forEach((view) => {
      view.updateFocus();
    });
    return this;
  }

  // Apply the change of the selected dates
  update() {
    const newViewDate = computeResetViewDate(this.datepicker);
    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refresh';
    this.views.forEach((view) => {
      view.updateFocus();
      view.updateSelection();
    });
    return this;
  }

  // Refresh the picker UI
  render(quickRender = true) {
    const renderMethod = (quickRender && this._renderMethod) || 'render';
    delete this._renderMethod;

    this.currentView[renderMethod]();
  }
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/picker/templates/calendarWeeksTemplate.js":
/*!*************************************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/picker/templates/calendarWeeksTemplate.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");


const calendarWeeksTemplate = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.optimizeTemplateHTML)(`<div class="calendar-weeks">
  <div class="days-of-week"><span class="dow"></span></div>
  <div class="weeks">${(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 6, {class: 'week'})}</div>
</div>`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (calendarWeeksTemplate);


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/picker/templates/daysTemplate.js":
/*!****************************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/picker/templates/daysTemplate.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");


const daysTemplate = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.optimizeTemplateHTML)(`<div class="days">
  <div class="days-of-week">${(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 7, {class: 'dow'})}</div>
  <div class="datepicker-grid">${(0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 42)}</div>
</div>`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (daysTemplate);


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/picker/templates/pickerTemplate.js":
/*!******************************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/picker/templates/pickerTemplate.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");


const pickerTemplate = (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.optimizeTemplateHTML)(`<div class="datepicker">
  <div class="datepicker-picker">
    <div class="datepicker-header">
      <div class="datepicker-title"></div>
      <div class="datepicker-controls">
        <button type="button" class="%buttonClass% prev-btn"></button>
        <button type="button" class="%buttonClass% view-switch"></button>
        <button type="button" class="%buttonClass% next-btn"></button>
      </div>
    </div>
    <div class="datepicker-main"></div>
    <div class="datepicker-footer">
      <div class="datepicker-controls">
        <button type="button" class="%buttonClass% today-btn"></button>
        <button type="button" class="%buttonClass% clear-btn"></button>
      </div>
    </div>
  </div>
</div>`);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pickerTemplate);


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/DaysView.js":
/*!********************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/picker/views/DaysView.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DaysView)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/date-format.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date-format.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../lib/dom.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/dom.js");
/* harmony import */ var _templates_daysTemplate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../templates/daysTemplate.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/templates/daysTemplate.js");
/* harmony import */ var _templates_calendarWeeksTemplate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../templates/calendarWeeksTemplate.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/templates/calendarWeeksTemplate.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./View.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/View.js");








class DaysView extends _View_js__WEBPACK_IMPORTED_MODULE_6__.default {
  constructor(picker) {
    super(picker, {
      id: 0,
      name: 'days',
      cellClass: 'day',
    });
  }

  init(options, onConstruction = true) {
    if (onConstruction) {
      const inner = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.parseHTML)(_templates_daysTemplate_js__WEBPACK_IMPORTED_MODULE_4__.default).firstChild;
      this.dow = inner.firstChild;
      this.grid = inner.lastChild;
      this.element.appendChild(inner);
    }
    super.init(options);
  }

  setOptions(options) {
    let updateDOW;

    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'minDate')) {
      this.minDate = options.minDate;
    }
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'maxDate')) {
      this.maxDate = options.maxDate;
    }
    if (options.datesDisabled) {
      this.datesDisabled = options.datesDisabled;
    }
    if (options.daysOfWeekDisabled) {
      this.daysOfWeekDisabled = options.daysOfWeekDisabled;
      updateDOW = true;
    }
    if (options.daysOfWeekHighlighted) {
      this.daysOfWeekHighlighted = options.daysOfWeekHighlighted;
    }
    if (options.todayHighlight !== undefined) {
      this.todayHighlight = options.todayHighlight;
    }
    if (options.weekStart !== undefined) {
      this.weekStart = options.weekStart;
      this.weekEnd = options.weekEnd;
      updateDOW = true;
    }
    if (options.locale) {
      const locale = this.locale = options.locale;
      this.dayNames = locale.daysMin;
      this.switchLabelFormat = locale.titleFormat;
      updateDOW = true;
    }
    if (options.beforeShowDay !== undefined) {
      this.beforeShow = typeof options.beforeShowDay === 'function'
        ? options.beforeShowDay
        : undefined;
    }

    if (options.calendarWeeks !== undefined) {
      if (options.calendarWeeks && !this.calendarWeeks) {
        const weeksElem = (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.parseHTML)(_templates_calendarWeeksTemplate_js__WEBPACK_IMPORTED_MODULE_5__.default).firstChild;
        this.calendarWeeks = {
          element: weeksElem,
          dow: weeksElem.firstChild,
          weeks: weeksElem.lastChild,
        };
        this.element.insertBefore(weeksElem, this.element.firstChild);
      } else if (this.calendarWeeks && !options.calendarWeeks) {
        this.element.removeChild(this.calendarWeeks.element);
        this.calendarWeeks = null;
      }
    }
    if (options.showDaysOfWeek !== undefined) {
      if (options.showDaysOfWeek) {
        (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.showElement)(this.dow);
        if (this.calendarWeeks) {
          (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.showElement)(this.calendarWeeks.dow);
        }
      } else {
        (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.hideElement)(this.dow);
        if (this.calendarWeeks) {
          (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_3__.hideElement)(this.calendarWeeks.dow);
        }
      }
    }

    // update days-of-week when locale, daysOfweekDisabled or weekStart is changed
    if (updateDOW) {
      Array.from(this.dow.children).forEach((el, index) => {
        const dow = (this.weekStart + index) % 7;
        el.textContent = this.dayNames[dow];
        el.className = this.daysOfWeekDisabled.includes(dow) ? 'dow disabled' : 'dow';
      });
    }
  }

  // Apply update on the focused date to view's settings
  updateFocus() {
    const viewDate = new Date(this.picker.viewDate);
    const viewYear = viewDate.getFullYear();
    const viewMonth = viewDate.getMonth();
    const firstOfMonth = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(viewYear, viewMonth, 1);
    const start = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dayOfTheWeekOf)(firstOfMonth, this.weekStart, this.weekStart);

    this.first = firstOfMonth;
    this.last = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(viewYear, viewMonth + 1, 0);
    this.start = start;
    this.focused = this.picker.viewDate;
  }

  // Apply update on the selected dates to view's settings
  updateSelection() {
    const {dates, rangepicker} = this.picker.datepicker;
    this.selected = dates;
    if (rangepicker) {
      this.range = rangepicker.dates;
    }
  }

   // Update the entire view UI
  render() {
    // update today marker on ever render
    this.today = this.todayHighlight ? (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.today)() : undefined;
    // refresh disabled dates on every render in order to clear the ones added
    // by beforeShow hook at previous render
    this.disabled = [...this.datesDisabled];

    const switchLabel = (0,_lib_date_format_js__WEBPACK_IMPORTED_MODULE_2__.formatDate)(this.focused, this.switchLabelFormat, this.locale);
    this.picker.setViewSwitchLabel(switchLabel);
    this.picker.setPrevBtnDisabled(this.first <= this.minDate);
    this.picker.setNextBtnDisabled(this.last >= this.maxDate);

    if (this.calendarWeeks) {
      // start of the UTC week (Monday) of the 1st of the month
      const startOfWeek = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dayOfTheWeekOf)(this.first, 1, 1);
      Array.from(this.calendarWeeks.weeks.children).forEach((el, index) => {
        el.textContent = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.getWeek)((0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addWeeks)(startOfWeek, index));
      });
    }
    Array.from(this.grid.children).forEach((el, index) => {
      const classList = el.classList;
      const current = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.addDays)(this.start, index);
      const date = new Date(current);
      const day = date.getDay();

      el.className = `datepicker-cell ${this.cellClass}`;
      el.dataset.date = current;
      el.textContent = date.getDate();

      if (current < this.first) {
        classList.add('prev');
      } else if (current > this.last) {
        classList.add('next');
      }
      if (this.today === current) {
        classList.add('today');
      }
      if (current < this.minDate || current > this.maxDate || this.disabled.includes(current)) {
        classList.add('disabled');
      }
      if (this.daysOfWeekDisabled.includes(day)) {
        classList.add('disabled');
        (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(this.disabled, current);
      }
      if (this.daysOfWeekHighlighted.includes(day)) {
        classList.add('highlighted');
      }
      if (this.range) {
        const [rangeStart, rangeEnd] = this.range;
        if (current > rangeStart && current < rangeEnd) {
          classList.add('range');
        }
        if (current === rangeStart) {
          classList.add('range-start');
        }
        if (current === rangeEnd) {
          classList.add('range-end');
        }
      }
      if (this.selected.includes(current)) {
        classList.add('selected');
      }
      if (current === this.focused) {
        classList.add('focused');
      }

      if (this.beforeShow) {
        this.performBeforeHook(el, current, current);
      }
    });
  }

  // Update the view UI by applying the changes of selected and focused items
  refresh() {
    const [rangeStart, rangeEnd] = this.range || [];
    this.grid
      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')
      .forEach((el) => {
        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');
      });
    Array.from(this.grid.children).forEach((el) => {
      const current = Number(el.dataset.date);
      const classList = el.classList;
      if (current > rangeStart && current < rangeEnd) {
        classList.add('range');
      }
      if (current === rangeStart) {
        classList.add('range-start');
      }
      if (current === rangeEnd) {
        classList.add('range-end');
      }
      if (this.selected.includes(current)) {
        classList.add('selected');
      }
      if (current === this.focused) {
        classList.add('focused');
      }
    });
  }

  // Update the view UI by applying the change of focused item
  refreshFocus() {
    const index = Math.round((this.focused - this.start) / 86400000);
    this.grid.querySelectorAll('.focused').forEach((el) => {
      el.classList.remove('focused');
    });
    this.grid.children[index].classList.add('focused');
  }
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/MonthsView.js":
/*!**********************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/picker/views/MonthsView.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MonthsView)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/dom.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/dom.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./View.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/View.js");





function computeMonthRange(range, thisYear) {
  if (!range || !range[0] || !range[1]) {
    return;
  }

  const [[startY, startM], [endY, endM]] = range;
  if (startY > thisYear || endY < thisYear) {
    return;
  }
  return [
    startY === thisYear ? startM : -1,
    endY === thisYear ? endM : 12,
  ];
}

class MonthsView extends _View_js__WEBPACK_IMPORTED_MODULE_3__.default {
  constructor(picker) {
    super(picker, {
      id: 1,
      name: 'months',
      cellClass: 'month',
    });
  }

  init(options, onConstruction = true) {
    if (onConstruction) {
      this.grid = this.element;
      this.element.classList.add('months', 'datepicker-grid');
      this.grid.appendChild((0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.parseHTML)((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 12, {'data-month': ix => ix})));
    }
    super.init(options);
  }

  setOptions(options) {
    if (options.locale) {
      this.monthNames = options.locale.monthsShort;
    }
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'minDate')) {
      if (options.minDate === undefined) {
        this.minYear = this.minMonth = this.minDate = undefined;
      } else {
        const minDateObj = new Date(options.minDate);
        this.minYear = minDateObj.getFullYear();
        this.minMonth = minDateObj.getMonth();
        this.minDate = minDateObj.setDate(1);
      }
    }
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'maxDate')) {
      if (options.maxDate === undefined) {
        this.maxYear = this.maxMonth = this.maxDate = undefined;
      } else {
        const maxDateObj = new Date(options.maxDate);
        this.maxYear = maxDateObj.getFullYear();
        this.maxMonth = maxDateObj.getMonth();
        this.maxDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(this.maxYear, this.maxMonth + 1, 0);
      }
    }
    if (options.beforeShowMonth !== undefined) {
      this.beforeShow = typeof options.beforeShowMonth === 'function'
        ? options.beforeShowMonth
        : undefined;
    }
  }

  // Update view's settings to reflect the viewDate set on the picker
  updateFocus() {
    const viewDate = new Date(this.picker.viewDate);
    this.year = viewDate.getFullYear();
    this.focused = viewDate.getMonth();
  }

  // Update view's settings to reflect the selected dates
  updateSelection() {
    const {dates, rangepicker} = this.picker.datepicker;
    this.selected = dates.reduce((selected, timeValue) => {
      const date = new Date(timeValue);
      const year = date.getFullYear();
      const month = date.getMonth();
      if (selected[year] === undefined) {
        selected[year] = [month];
      } else {
        (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(selected[year], month);
      }
      return selected;
    }, {});
    if (rangepicker && rangepicker.dates) {
      this.range = rangepicker.dates.map(timeValue => {
        const date = new Date(timeValue);
        return isNaN(date) ? undefined : [date.getFullYear(), date.getMonth()];
      });
    }
  }

  // Update the entire view UI
  render() {
    // refresh disabled months on every render in order to clear the ones added
    // by beforeShow hook at previous render
    this.disabled = [];

    this.picker.setViewSwitchLabel(this.year);
    this.picker.setPrevBtnDisabled(this.year <= this.minYear);
    this.picker.setNextBtnDisabled(this.year >= this.maxYear);

    const selected = this.selected[this.year] || [];
    const yrOutOfRange = this.year < this.minYear || this.year > this.maxYear;
    const isMinYear = this.year === this.minYear;
    const isMaxYear = this.year === this.maxYear;
    const range = computeMonthRange(this.range, this.year);

    Array.from(this.grid.children).forEach((el, index) => {
      const classList = el.classList;
      const date = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(this.year, index, 1);

      el.className = `datepicker-cell ${this.cellClass}`;
      if (this.isMinView) {
        el.dataset.date = date;
      }
      // reset text on every render to clear the custom content set
      // by beforeShow hook at previous render
      el.textContent = this.monthNames[index];

      if (
        yrOutOfRange
        || isMinYear && index < this.minMonth
        || isMaxYear && index > this.maxMonth
      ) {
        classList.add('disabled');
      }
      if (range) {
        const [rangeStart, rangeEnd] = range;
        if (index > rangeStart && index < rangeEnd) {
          classList.add('range');
        }
        if (index === rangeStart) {
          classList.add('range-start');
        }
        if (index === rangeEnd) {
          classList.add('range-end');
        }
      }
      if (selected.includes(index)) {
        classList.add('selected');
      }
      if (index === this.focused) {
        classList.add('focused');
      }

      if (this.beforeShow) {
        this.performBeforeHook(el, index, date);
      }
    });
  }

  // Update the view UI by applying the changes of selected and focused items
  refresh() {
    const selected = this.selected[this.year] || [];
    const [rangeStart, rangeEnd] = computeMonthRange(this.range, this.year) || [];
    this.grid
      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')
      .forEach((el) => {
        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');
      });
    Array.from(this.grid.children).forEach((el, index) => {
      const classList = el.classList;
      if (index > rangeStart && index < rangeEnd) {
        classList.add('range');
      }
      if (index === rangeStart) {
        classList.add('range-start');
      }
      if (index === rangeEnd) {
        classList.add('range-end');
      }
      if (selected.includes(index)) {
        classList.add('selected');
      }
      if (index === this.focused) {
        classList.add('focused');
      }
    });
  }

  // Update the view UI by applying the change of focused item
  refreshFocus() {
    this.grid.querySelectorAll('.focused').forEach((el) => {
      el.classList.remove('focused');
    });
    this.grid.children[this.focused].classList.add('focused');
  }
}

/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/View.js":
/*!****************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/picker/views/View.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ View)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/dom.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/dom.js");



// Base class of the view classes
class View {
  constructor(picker, config) {
    Object.assign(this, config, {
      picker,
      element: (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_1__.parseHTML)(`<div class="datepicker-view"></div>`).firstChild,
      selected: [],
    });
    this.init(this.picker.datepicker.config);
  }

  init(options) {
    if (options.pickLevel !== undefined) {
      this.isMinView = this.id === options.pickLevel;
    }
    this.setOptions(options);
    this.updateFocus();
    this.updateSelection();
  }

  // Execute beforeShow() callback and apply the result to the element
  // args:
  // - current - current value on the iteration on view rendering
  // - timeValue - time value of the date to pass to beforeShow()
  performBeforeHook(el, current, timeValue) {
    let result = this.beforeShow(new Date(timeValue));
    switch (typeof result) {
      case 'boolean':
        result = {enabled: result};
        break;
      case 'string':
        result = {classes: result};
    }

    if (result) {
      if (result.enabled === false) {
        el.classList.add('disabled');
        (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(this.disabled, current);
      }
      if (result.classes) {
        const extraClasses = result.classes.split(/\s+/);
        el.classList.add(...extraClasses);
        if (extraClasses.includes('disabled')) {
          (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(this.disabled, current);
        }
      }
      if (result.content) {
        (0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_1__.replaceChildNodes)(el, result.content);
      }
    }
  }
}


/***/ }),

/***/ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/YearsView.js":
/*!*********************************************************************************!*\
  !*** ./frontend/node_modules/vanillajs-datepicker/js/picker/views/YearsView.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ YearsView)
/* harmony export */ });
/* harmony import */ var _lib_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/utils.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/utils.js");
/* harmony import */ var _lib_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/date.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/date.js");
/* harmony import */ var _lib_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/dom.js */ "./frontend/node_modules/vanillajs-datepicker/js/lib/dom.js");
/* harmony import */ var _View_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./View.js */ "./frontend/node_modules/vanillajs-datepicker/js/picker/views/View.js");





function toTitleCase(word) {
  return [...word].reduce((str, ch, ix) => str += ix ? ch : ch.toUpperCase(), '');
}

// Class representing the years and decades view elements
class YearsView extends _View_js__WEBPACK_IMPORTED_MODULE_3__.default {
  constructor(picker, config) {
    super(picker, config);
  }

  init(options, onConstruction = true) {
    if (onConstruction) {
      this.navStep = this.step * 10;
      this.beforeShowOption = `beforeShow${toTitleCase(this.cellClass)}`;
      this.grid = this.element;
      this.element.classList.add(this.name, 'datepicker-grid');
      this.grid.appendChild((0,_lib_dom_js__WEBPACK_IMPORTED_MODULE_2__.parseHTML)((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.createTagRepeat)('span', 12)));
    }
    super.init(options);
  }

  setOptions(options) {
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'minDate')) {
      if (options.minDate === undefined) {
        this.minYear = this.minDate = undefined;
      } else {
        this.minYear = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(options.minDate, this.step);
        this.minDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(this.minYear, 0, 1);
      }
    }
    if ((0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasProperty)(options, 'maxDate')) {
      if (options.maxDate === undefined) {
        this.maxYear = this.maxDate = undefined;
      } else {
        this.maxYear = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(options.maxDate, this.step);
        this.maxDate = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(this.maxYear, 11, 31);
      }
    }
    if (options[this.beforeShowOption] !== undefined) {
      const beforeShow = options[this.beforeShowOption];
      this.beforeShow = typeof beforeShow === 'function' ? beforeShow : undefined;
    }
  }

  // Update view's settings to reflect the viewDate set on the picker
  updateFocus() {
    const viewDate = new Date(this.picker.viewDate);
    const first = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(viewDate, this.navStep);
    const last = first + 9 * this.step;

    this.first = first;
    this.last = last;
    this.start = first - this.step;
    this.focused = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(viewDate, this.step);
  }

  // Update view's settings to reflect the selected dates
  updateSelection() {
    const {dates, rangepicker} = this.picker.datepicker;
    this.selected = dates.reduce((years, timeValue) => {
      return (0,_lib_utils_js__WEBPACK_IMPORTED_MODULE_0__.pushUnique)(years, (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(timeValue, this.step));
    }, []);
    if (rangepicker && rangepicker.dates) {
      this.range = rangepicker.dates.map(timeValue => {
        if (timeValue !== undefined) {
          return (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.startOfYearPeriod)(timeValue, this.step);
        }
      });
    }
  }

  // Update the entire view UI
  render() {
    // refresh disabled years on every render in order to clear the ones added
    // by beforeShow hook at previous render
    this.disabled = [];

    this.picker.setViewSwitchLabel(`${this.first}-${this.last}`);
    this.picker.setPrevBtnDisabled(this.first <= this.minYear);
    this.picker.setNextBtnDisabled(this.last >= this.maxYear);

    Array.from(this.grid.children).forEach((el, index) => {
      const classList = el.classList;
      const current = this.start + (index * this.step);
      const date = (0,_lib_date_js__WEBPACK_IMPORTED_MODULE_1__.dateValue)(current, 0, 1);

      el.className = `datepicker-cell ${this.cellClass}`;
      if (this.isMinView) {
        el.dataset.date = date;
      }
      el.textContent = el.dataset.year = current;

      if (index === 0) {
        classList.add('prev');
      } else if (index === 11) {
        classList.add('next');
      }
      if (current < this.minYear || current > this.maxYear) {
        classList.add('disabled');
      }
      if (this.range) {
        const [rangeStart, rangeEnd] = this.range;
        if (current > rangeStart && current < rangeEnd) {
          classList.add('range');
        }
        if (current === rangeStart) {
          classList.add('range-start');
        }
        if (current === rangeEnd) {
          classList.add('range-end');
        }
      }
      if (this.selected.includes(current)) {
        classList.add('selected');
      }
      if (current === this.focused) {
        classList.add('focused');
      }

      if (this.beforeShow) {
        this.performBeforeHook(el, current, date);
      }
    });
  }

  // Update the view UI by applying the changes of selected and focused items
  refresh() {
    const [rangeStart, rangeEnd] = this.range || [];
    this.grid
      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')
      .forEach((el) => {
        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');
      });
    Array.from(this.grid.children).forEach((el) => {
      const current = Number(el.textContent);
      const classList = el.classList;
      if (current > rangeStart && current < rangeEnd) {
        classList.add('range');
      }
      if (current === rangeStart) {
        classList.add('range-start');
      }
      if (current === rangeEnd) {
        classList.add('range-end');
      }
      if (this.selected.includes(current)) {
        classList.add('selected');
      }
      if (current === this.focused) {
        classList.add('focused');
      }
    });
  }

  // Update the view UI by applying the change of focused item
  refreshFocus() {
    const index = Math.round((this.focused - this.start) / this.step);
    this.grid.querySelectorAll('.focused').forEach((el) => {
      el.classList.remove('focused');
    });
    this.grid.children[index].classList.add('focused');
  }
}


/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "./frontend/src/animations/animate-sprite-edited.js":
/*!**********************************************************!*\
  !*** ./frontend/src/animations/animate-sprite-edited.js ***!
  \**********************************************************/
/***/ (() => {

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*! jqueryanimatesprite - v1.3.5 - 2014-10-17
* http://blaiprat.github.io/jquery.animateSprite/
* Copyright (c) 2014 blai Pratdesaba; Licensed MIT */

/* Edited slightly by Corey Sinnamon to get rid of initial delay on sprite animation */
(function ($, window, undefined) {
  var init = function init(options) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('animateSprite'); // ASYNC
      // If we don't specify the columns, we
      // can discover using the background size

      var discoverColumns = function discoverColumns(cb) {
        var imageSrc = $this.css('background-image').replace(/url\((['"])?(.*?)\1\)/gi, '$2');
        var image = new Image();

        image.onload = function () {
          var width = image.width,
              height = image.height;
          cb(width, height);
        };

        image.src = imageSrc;
      };

      if (!data || options !== {}) {
        $this.data('animateSprite', {
          settings: $.extend({
            width: $this.width(),
            height: $this.height(),
            totalFrames: false,
            columns: false,
            fps: 12,
            complete: function complete() {},
            loop: false,
            autoplay: true
          }, options),
          currentFrame: 0,
          controlAnimation: function controlAnimation() {
            var checkLoop = function checkLoop(currentFrame, finalFrame) {
              currentFrame++;

              if (currentFrame >= finalFrame) {
                if (this.settings.loop === true) {
                  currentFrame = 0;
                  data.controlTimer();
                } else {
                  this.settings.complete();
                }
              } else {
                data.controlTimer();
              }

              return currentFrame;
            };

            if (this.settings.animations === undefined) {
              $this.animateSprite('frame', this.currentFrame);
              this.currentFrame = checkLoop.call(this, this.currentFrame, this.settings.totalFrames);
            } else {
              if (this.currentAnimation === undefined) {
                for (var k in this.settings.animations) {
                  this.currentAnimation = this.settings.animations[k];
                  break;
                }
              }

              var newFrame = this.currentAnimation[this.currentFrame];
              $this.animateSprite('frame', newFrame);
              this.currentFrame = checkLoop.call(this, this.currentFrame, this.currentAnimation.length);
            }
          },
          controlTimer: function controlTimer() {
            // duration overrides fps
            var speed = 1000 / data.settings.fps;

            if (data.settings.duration !== undefined) {
              speed = data.settings.duration / data.settings.totalFrames;
            }

            data.interval = setTimeout(function () {
              data.controlAnimation();
            }, speed);
          }
        });
        data = $this.data('animateSprite'); // Setting up columns and total frames

        if (!data.settings.columns) {
          // this is an async function
          discoverColumns(function (width, height) {
            // getting amount of columns
            data.settings.columns = Math.round(width / data.settings.width); // if totalframes are not specified

            if (!data.settings.totalFrames) {
              // total frames is columns times rows
              var rows = Math.round(height / data.settings.height);
              data.settings.totalFrames = data.settings.columns * rows;
            }

            if (data.settings.autoplay) {
              data.controlAnimation();
            }
          });
        } else {
          // if everything is already set up
          // we start the interval
          if (data.settings.autoplay) {
            data.controlAnimation();
          }
        }
      }
    });
  };

  var frame = function frame(frameNumber) {
    // If no frame number is given, return the frame
    if (frameNumber === undefined) {
      if ($(this).data('animateSprite') !== undefined) {
        var $this = $(this),
            data = $this.data('animateSprite');
        return data.currentFrame;
      }
    } // Otherwise set the frame


    return this.each(function () {
      if ($(this).data('animateSprite') !== undefined) {
        var $this = $(this),
            data = $this.data('animateSprite'),
            row = Math.floor(frameNumber / data.settings.columns),
            column = frameNumber % data.settings.columns;
        $this.css('background-position', -data.settings.width * column + 'px ' + -data.settings.height * row + 'px');
      }
    });
  };

  var stop = function stop() {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('animateSprite');

      if (data && data.interval) {
        clearTimeout(data.interval);
      }
    });
  };

  var resume = function resume() {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('animateSprite'); // always stop animation to prevent overlapping intervals

      $this.animateSprite('stopAnimation');
      data.controlTimer();
    });
  };

  var restart = function restart() {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('animateSprite');
      $this.animateSprite('stopAnimation');
      data.currentFrame = 0;
      data.controlTimer();
    });
  };

  var play = function play(animationName) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('animateSprite');

      if (typeof animationName === 'string') {
        $this.animateSprite('stopAnimation');

        if (data.settings.animations[animationName] !== data.currentAnimation) {
          data.currentFrame = 0;
          data.currentAnimation = data.settings.animations[animationName];
        }

        data.controlTimer();
      } else {
        $this.animateSprite('stopAnimation');
        data.controlTimer();
      }
    });
  };

  var fps = function fps(val) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('animateSprite'); // data.fps

      data.settings.fps = val;
    });
  };

  var methods = {
    init: init,
    frame: frame,
    stop: stop,
    resume: resume,
    restart: restart,
    play: play,
    stopAnimation: stop,
    resumeAnimation: resume,
    restartAnimation: restart,
    fps: fps
  };

  $.fn.animateSprite = function (method) {
    if (methods[method]) {
      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
    } else if (_typeof(method) === 'object' || !method) {
      return methods.init.apply(this, arguments);
    } else {
      $.error('Method ' + method + ' does not exist on jQuery.animateSprite');
    }
  };
})(jQuery, window);

/***/ }),

/***/ "./frontend/src/animations/sprites.js":
/*!********************************************!*\
  !*** ./frontend/src/animations/sprites.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSpriteDiv": () => (/* binding */ createSpriteDiv)
/* harmony export */ });
/* harmony import */ var _animate_sprite_edited_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./animate-sprite-edited.js */ "./frontend/src/animations/animate-sprite-edited.js");
/* harmony import */ var _animate_sprite_edited_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_animate_sprite_edited_js__WEBPACK_IMPORTED_MODULE_0__);


function createSpriteDiv(wrapperDiv, spriteData, callback) {
  if (!wrapperDiv) {
    wrapperDiv = $('<div></div>');
  }

  wrapperDiv.css({
    "position": "absolute",
    "pointer-events": "none" // This keeps the animation from preventing mouse events on elements behind the animation

  });
  var sprite = $('<div></div>'); // Basic css to prepare for animation

  sprite.css({
    "width": spriteData.width + "px",
    "height": spriteData.height + "px",
    "background-image": "url(" + spriteData.sheet + ")",
    "position": "relative",
    "left": "-" + spriteData.width / 2 + "px",
    "top": "-" + spriteData.height / 2 + "px",
    "background-repeat": "no-repeat",
    "background-position": "0px " + spriteData.height
  }); // Add custom css for specific sprite

  if (spriteData.custom_css) sprite.css(spriteData.custom_css);
  var frames;

  if (spriteData.frames) {
    frames = spriteData.frames;
  } else {
    var reps = spriteData.repetitions ? spriteData.repetitions : 1;
    var startingFrame = spriteData.startingFrame ? spriteData.startingFrame : 0;
    frames = [];

    for (var i = 0; i < spriteData.numFrames * reps; i++) {
      frames.push((startingFrame + i) % spriteData.numFrames);
    }
  }

  sprite.animateSprite({
    fps: spriteData.fps,
    animations: {
      frames: frames
    },
    loop: spriteData.loop ? true : false,
    complete: function complete() {
      // use complete only when you set animations with 'loop: false'
      sprite.remove();
      wrapperDiv.remove();
      callback();
    }
  });
  wrapperDiv.append(sprite);
  return wrapperDiv;
}



/***/ }),

/***/ "./frontend/src/classes/FormController.js":
/*!************************************************!*\
  !*** ./frontend/src/classes/FormController.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FormController)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var FormController = /*#__PURE__*/function () {
  function FormController(comp) {
    _classCallCheck(this, FormController);

    this.comp = comp;
    this.waiting = false;
  }

  _createClass(FormController, [{
    key: "src",
    get: function get() {
      return this.comp.src;
    }
  }, {
    key: "parent",
    get: function get() {
      return this.comp.parent;
    }
  }, {
    key: "submit",
    value: function () {
      var _submit = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.waiting) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return");

              case 2:
                _context.next = 4;
                return this.doSubmission();

              case 4:
                this.waiting = false;

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function submit() {
        return _submit.apply(this, arguments);
      }

      return submit;
    }()
  }, {
    key: "doSubmission",
    value: function () {
      var _doSubmission = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return");

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function doSubmission() {
        return _doSubmission.apply(this, arguments);
      }

      return doSubmission;
    }()
  }, {
    key: "delete",
    value: function () {
      var _delete2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!this.waiting) {
                  _context3.next = 2;
                  break;
                }

                return _context3.abrupt("return");

              case 2:
                _context3.next = 4;
                return this.doDeletion();

              case 4:
                this.waiting = false;

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function _delete() {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }()
  }, {
    key: "doDeletion",
    value: function () {
      var _doDeletion = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee4() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return");

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function doDeletion() {
        return _doDeletion.apply(this, arguments);
      }

      return doDeletion;
    }()
  }]);

  return FormController;
}();



/***/ }),

/***/ "./frontend/src/classes/components/Accordion.js":
/*!******************************************************!*\
  !*** ./frontend/src/classes/components/Accordion.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Accordion)
/* harmony export */ });
/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component.js */ "./frontend/src/classes/components/Component.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var Accordion = /*#__PURE__*/function (_Component) {
  _inherits(Accordion, _Component);

  var _super = _createSuper(Accordion);

  function Accordion(parent) {
    var _this;

    var startOpen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var openingRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 600;
    var closingRate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 600;
    var minHeight = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;

    _classCallCheck(this, Accordion);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent);

    _defineProperty(_assertThisInitialized(_this), "expansionScale", 1);

    _this.name = "accordion";
    _this.openingRate = openingRate; // in pixels per second

    _this.closingRate = closingRate; // in pixels per second

    _this.isOpen = false;
    _this.minHeight = minHeight;
    _this.maxHeight = minHeight;
    _this.expansionTimeout = undefined;

    _this.populate();

    _this.updateDOM();

    if (startOpen) {
      _this.snapOpen();
    }

    return _this;
  }

  _createClass(Accordion, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(Accordion.prototype), "populate", this).call(this);

      var dom = this.dom;
      this.wrapper.removeClass().addClass('accordion');
      dom.accordion = this.wrapper;
      dom.accordionContent = $('<div class="accordion-content"></div>');
      dom.accordion.append(dom.accordionContent);
      this.dom.accordion.css({
        "transition": '',
        "min-height": this.minHeight + "px",
        "max-height": this.maxHeight + "px"
      });
    }
  }, {
    key: "getContentDiv",
    value: function getContentDiv() {
      return this.dom.accordionContent;
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this.isOpen) {
        this.close();
      } else {
        this.open();
      }
    }
  }, {
    key: "snapOpen",
    value: function snapOpen() {
      if (this.isOpen) {
        return;
      }

      if (this.expansionTimeout) {
        clearTimeout(this.expansionTimeout);
      }

      this.isOpen = true;
      this.dom.accordion.addClass('open');
      this.dom.accordion.css({
        "transition": '',
        "max-height": ''
      });
    }
  }, {
    key: "snapClosed",
    value: function snapClosed() {
      if (!this.isOpen) {
        return;
      }

      if (this.expansionTimeout) {
        clearTimeout(this.expansionTimeout);
      }

      this.isOpen = false;
      this.dom.accordion.removeClass('open');
      var currentHeight = this.dom.accordion.height();
      this.dom.accordion.css({
        "transition": '',
        "max-height": this.minHeight + "px"
      });
      this.maxHeight = this.minHeight;
    }
  }, {
    key: "open",
    value: function open() {
      if (this.isOpen) {
        return;
      }

      if (this.expansionTimeout) {
        clearTimeout(this.expansionTimeout);
      }

      this.isOpen = true;
      this.dom.accordion.addClass('open');
      this.expansionCheckIn();
    }
  }, {
    key: "close",
    value: function close() {
      if (!this.isOpen) {
        return;
      }

      if (this.expansionTimeout) {
        clearTimeout(this.expansionTimeout);
      }

      this.isOpen = false;
      this.dom.accordion.removeClass('open');
      var currentHeight = this.dom.accordion.height();
      this.dom.accordion.css({
        "transition": '',
        "max-height": currentHeight + "px"
      });
      this.maxHeight = currentHeight;
      this.expansionCheckIn();
    }
  }, {
    key: "expansionCheckIn",
    value: function expansionCheckIn() {
      /* Helper function for expanding with jQuery */
      this.expansionTimeout = undefined;
      var comp = this;

      function transitionToMaxHeight(maxHeight) {
        var duration;

        if (maxHeight > comp.maxHeight) {
          duration = (maxHeight - comp.maxHeight) / comp.openingRate; // in seconds
        } else {
          duration = (comp.maxHeight - maxHeight) / comp.closingRate; // in seconds
        }

        if (duration > 0.05) {
          comp.dom.accordion.css({
            "transition": "max-height " + duration + "s linear",
            "max-height": maxHeight + "px"
          });
        } else {
          comp.dom.accordion.css({
            "transition": '',
            "max-height": maxHeight + "px"
          });
        }

        comp.maxHeight = maxHeight;
        return duration;
      }

      function setMaxHeight(maxHeight) {
        comp.dom.accordion.css({
          "transition": '',
          "max-height": maxHeight + "px"
        });
        comp.maxHeight = maxHeight;
      }

      var currentHeight = this.dom.accordion.height();
      var duration;

      if (this.isOpen && this.maxHeight != undefined) {
        if (currentHeight < 0.9 * this.maxHeight) {
          // We have expanded enough!
          this.maxHeight = undefined;
          this.dom.accordion.css({
            "transition": '',
            "max-height": ''
          });
          return;
        } else {
          duration = transitionToMaxHeight(currentHeight + this.openingRate);
        }
      } else {
        if (currentHeight <= 0) {
          // Fully closed
          setMaxHeight(this.minHeight);
          return;
        } else {
          duration = transitionToMaxHeight(Math.max(0, currentHeight - this.closingRate));
        }
      }

      this.expansionTimeout = setTimeout(function () {
        return comp.expansionCheckIn();
      }, 1000 * duration);
    }
  }]);

  return Accordion;
}(_Component_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/Component.js":
/*!******************************************************!*\
  !*** ./frontend/src/classes/components/Component.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Component)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Component = /*#__PURE__*/function () {
  function Component(wrapper) {
    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
    var src = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;

    _classCallCheck(this, Component);

    if (wrapper) {
      this.wrapper = wrapper;
    } else {
      this.wrapper = $('<div></div>');
    }

    Component.register(this);
    this.name = "component-name";
    this.parent = parent;
    this.components = {};
    /* dom is an object listing the descendants in the DOM that the manager will manage. */

    this.dom = {};
    /* src is a DataSource containing the fields that show up in the component */

    this.src = src;
    /* There may also be state variables, separate from the source data, that capture
    *  the state of the component.
    */

    this.hasPopulated = false;
  }

  _createClass(Component, [{
    key: "getWrapper",
    value: function getWrapper() {
      return this.wrapper;
    }
  }, {
    key: "populate",
    value: function populate() {
      this.wrapper.empty();
    }
    /* updateDOM()
     * Update the changeable parts of the DOM components using current data from the src,
     * and the current state.
     */

  }, {
    key: "updateDOM",
    value: function updateDOM() {
      this.hasPopulated = true;
    }
    /* handleMessage()
     *
     */

  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      console.log(this.name + " received \"" + msg + "\" from " + Component.dir[id].name + " " + id);
    }
  }, {
    key: "messageParent",
    value: function messageParent(msg, data) {
      if (this.parent) {
        this.parent.handleMessage(this.id, msg, data);
      }
    }
  }], [{
    key: "getFreshId",
    value: function getFreshId() {
      Component.latest_id += 1;
      return Component.latest_id;
    }
  }, {
    key: "register",
    value: function register(comp) {
      var id = Component.getFreshId();
      comp.id = id;
      Component.dir[id] = comp;
    }
  }]);

  return Component;
}();

_defineProperty(Component, "latest_id", 1000);

_defineProperty(Component, "dir", {});



/***/ }),

/***/ "./frontend/src/classes/components/ConfirmComponent.js":
/*!*************************************************************!*\
  !*** ./frontend/src/classes/components/ConfirmComponent.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ConfirmComponent)
/* harmony export */ });
/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component.js */ "./frontend/src/classes/components/Component.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var ConfirmComponent = /*#__PURE__*/function (_Component) {
  _inherits(ConfirmComponent, _Component);

  var _super = _createSuper(ConfirmComponent);

  function ConfirmComponent(message, callback) {
    var _this;

    _classCallCheck(this, ConfirmComponent);

    _this = _super.call(this);
    _this.name = "confirm";
    _this.message = message;
    _this.callback = callback;

    _this.populate();

    _this.updateDOM();

    $('body').append(_this.wrapper);

    _this.show();

    return _this;
  }

  _createClass(ConfirmComponent, [{
    key: "populate",
    value: function populate() {
      this.wrapper.empty();
      this.wrapper.removeClass().addClass('modal fade modal-overflow ld-modal');
      this.wrapper.attr({
        'data-backdrop': 'static',
        'data-keyboard': 'false',
        'tabindex': '-1',
        'role': 'dialog'
      });
      var dom = this.dom;
      dom.modal = this.wrapper;
      dom.dialog = $('<div class="modal-dialog" role="document" style="max-width:300px; top:30vh; left:calc(50vw - 150px); position: fixed !important;"></div>');
      dom.content = $('<div class="modal-content"></div>');
      dom.body = $('<div class="modal-body"></div>');
      dom.messageSpan = $('<span style="margin:auto;"></span>');
      dom.messageSpan.html(this.message);
      dom.footer = $('<div class="modal-footer"></div>');
      dom.cancelBtn = $('<button type="button" class="btn btn-secondary">Cancel</button>');
      dom.okayBtn = $('<button type="button" class="btn btn-primary">Okay</button>');
      dom.modal.append(dom.dialog);
      dom.dialog.append(dom.content);
      dom.content.append(dom.body).append(dom.footer);
      dom.body.append(dom.messageSpan);
      dom.footer.append(dom.cancelBtn);
      dom.footer.append(dom.okayBtn);
      var comp = this;
      dom.okayBtn.on('click', function () {
        comp.callback();
        comp.close();
      });
      dom.cancelBtn.on('click', function () {
        comp.close();
      });
    }
  }, {
    key: "show",
    value: function show() {
      this.dom.modal.modal('show');
    }
  }, {
    key: "close",
    value: function close() {
      this.dom.modal.modal('hide');
      var w = this.wrapper;
      setTimeout(function () {
        return w.remove();
      }, 1000);
    }
  }]);

  return ConfirmComponent;
}(_Component_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/EditableComponent.js":
/*!**************************************************************!*\
  !*** ./frontend/src/classes/components/EditableComponent.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ EditableComponent)
/* harmony export */ });
/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component.js */ "./frontend/src/classes/components/Component.js");
/* harmony import */ var _IconButton_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./IconButton.js */ "./frontend/src/classes/components/IconButton.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




var EditableComponent = /*#__PURE__*/function (_Component) {
  _inherits(EditableComponent, _Component);

  var _super = _createSuper(EditableComponent);

  function EditableComponent(wrapper) {
    var _this;

    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
    var src = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;

    _classCallCheck(this, EditableComponent);

    _this = _super.call(this, wrapper, parent, src);
    _this.name = "editable-component";
    /* editableComponents holds any EditableComponent objects subordinate to this */

    _this.editableComponents = {};
    _this.editing = false;
    return _this;
  }

  _createClass(EditableComponent, [{
    key: "populate",
    value: function populate() {
      var _this2 = this;

      _get(_getPrototypeOf(EditableComponent.prototype), "populate", this).call(this);

      this.editableComponents.editButton = new _IconButton_js__WEBPACK_IMPORTED_MODULE_1__.default(this, 'edit-button');
      this.dom.editButton = this.editableComponents.editButton.getWrapper();
      this.dom.editButton.on("click", function () {
        if (_this2.editing) {
          _this2.stopEditing();
        } else {
          _this2.startEditing();
        }
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(EditableComponent.prototype), "updateDOM", this).call(this);
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      this.editing = true;
      this.wrapper.addClass("editing");
      this.dom.editButton.addClass("editing");

      if (recurseDown) {
        Object.values(this.editableComponents).forEach(function (comp) {
          return comp.startEditing(true, false);
        });
      }

      if (recurseUp && this.parent && typeof this.parent['startEditing'] == "function") {
        this.parent.startEditing(false, true);
      }
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      this.editing = false;
      this.wrapper.removeClass("editing");
      this.dom.editButton.removeClass("editing");

      if (recurseDown) {
        Object.values(this.editableComponents).forEach(function (comp) {
          return comp.stopEditing(true, false);
        });
      }

      if (recurseUp && this.parent && typeof this.parent['stopEditing'] == "function") {
        this.parent.stopEditing(false, true);
      }
    }
  }]);

  return EditableComponent;
}(_Component_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/FeedbackComponent.js":
/*!**************************************************************!*\
  !*** ./frontend/src/classes/components/FeedbackComponent.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FeedbackComponent)
/* harmony export */ });
/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component.js */ "./frontend/src/classes/components/Component.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var FeedbackComponent = /*#__PURE__*/function (_Component) {
  _inherits(FeedbackComponent, _Component);

  var _super = _createSuper(FeedbackComponent);

  function FeedbackComponent(parent) {
    var _this;

    _classCallCheck(this, FeedbackComponent);

    var wrapper = $('<span class="feedback"></span>');
    _this = _super.call(this, wrapper, parent);
    _this.name = "feedback-component";

    _this.populate();

    _this.updateDOM();

    _this.clearMessage();

    return _this;
  }

  _createClass(FeedbackComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(FeedbackComponent.prototype), "populate", this).call(this);
    }
  }, {
    key: "showSuccessMessage",
    value: function showSuccessMessage(msg) {
      this.wrapper.removeClass('hidden');
      this.wrapper.removeClass('error').addClass('success');
      this.wrapper.html(msg);
      this.hidden = false;
    }
  }, {
    key: "showErrorMessage",
    value: function showErrorMessage(msg) {
      this.wrapper.removeClass('hidden');
      this.wrapper.removeClass('success').addClass('error');
      this.wrapper.html(msg);
    }
  }, {
    key: "showMessage",
    value: function showMessage(msg) {
      this.wrapper.removeClass('hidden');
      this.wrapper.removeClass(['error', 'success']);
      this.wrapper.html(msg);
    }
  }, {
    key: "clearMessage",
    value: function clearMessage() {
      this.wrapper.addClass('hidden');
      this.wrapper.removeClass(['error', 'success']);
      this.wrapper.html("");
    }
  }]);

  return FeedbackComponent;
}(_Component_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/GoalBasisDisplay.js":
/*!*************************************************************!*\
  !*** ./frontend/src/classes/components/GoalBasisDisplay.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GoalBasisDisplay)
/* harmony export */ });
/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component.js */ "./frontend/src/classes/components/Component.js");
/* harmony import */ var _utilities_time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/time.js */ "./frontend/src/utilities/time.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





var GoalBasisDisplay = /*#__PURE__*/function (_Component) {
  _inherits(GoalBasisDisplay, _Component);

  var _super = _createSuper(GoalBasisDisplay);

  function GoalBasisDisplay(parent, goal) {
    var _this;

    var relativeTime = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    _classCallCheck(this, GoalBasisDisplay);

    var wrapper = $('<div class="goal-basis"></div>');
    _this = _super.call(this, wrapper, parent, goal);
    _this.name = "goal-basis-display";
    _this.relativeTime = relativeTime;
    _this.connectorText = "Due ";

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(GoalBasisDisplay, [{
    key: "populate",
    value: function populate() {
      var dom = this.dom;
      dom.basisDiv = this.wrapper;
      dom.basisIcon = $('<i class="far fa-calendar-check fa-lg" style="margin-right:10px;"></i>');
      dom.frequencySpan = $('<span></span>');
      dom.dotSpan = $('<span style = "margin: 0 10px;" class="goal-data" >&bull;</span >');
      dom.completeSpan = $('<span class="goal-data"></span>');
      dom.deadlineSpan = $('<span class="goal-data"></span>');
      dom.basisDiv.append(dom.basisIcon).append(dom.frequencySpan).append(dom.dotSpan).append(dom.completeSpan).append(dom.deadlineSpan);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      var dom = this.dom;
      var rpt = this.src.repeat;
      var deadlineText;
      dom.completeSpan.html(this.connectorText);

      if (this.relativeTime) {
        deadlineText = (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_1__.describeDatetimeRelative)(this.src.nextDeadline);
      } else {
        deadlineText = (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_1__.describeDatetimeAbsolute)(this.src.nextDeadline);
      }

      if (rpt.type !== _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.RepeatType.ONE_TIME) {
        // For recurring goals
        dom.basisIcon.removeClass("fa-calendar-check").addClass("fa-clock"); // Should be expanded to all possible frequency options

        switch (rpt.type) {
          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.RepeatType.DAILY:
            dom.frequencySpan.html('Daily');
            break;

          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.RepeatType.WEEKLY:
            dom.frequencySpan.html('Weekly');
            break;

          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.RepeatType.MONTHLY:
            dom.frequencySpan.html('Monthly');
            break;

          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.RepeatType.YEARLY:
            dom.frequencySpan.html('Yearly');
            break;
        }
      } else {
        // For non-recurring goals
        if (this.src.completed) {
          deadlineText = "Complete";
          dom.completeSpan.html("");
        }

        dom.basisIcon.removeClass("fa-clock").addClass("fa-calendar-check");
        dom.frequencySpan.html('One time');
      }

      dom.deadlineSpan.html(deadlineText);
    }
  }]);

  return GoalBasisDisplay;
}(_Component_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/GoalComponent.js":
/*!**********************************************************!*\
  !*** ./frontend/src/classes/components/GoalComponent.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GoalComponent)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _Accordion_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Accordion.js */ "./frontend/src/classes/components/Accordion.js");
/* harmony import */ var _GoalBasisDisplay_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GoalBasisDisplay.js */ "./frontend/src/classes/components/GoalBasisDisplay.js");
/* harmony import */ var _field_components_CheckmarkComponent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./field-components/CheckmarkComponent.js */ "./frontend/src/classes/components/field-components/CheckmarkComponent.js");
/* harmony import */ var _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./field-components/TextInputComponent.js */ "./frontend/src/classes/components/field-components/TextInputComponent.js");
/* harmony import */ var _field_components_TextAreaComponent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./field-components/TextAreaComponent.js */ "./frontend/src/classes/components/field-components/TextAreaComponent.js");
/* harmony import */ var _field_components_DateInputComponent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./field-components/DateInputComponent.js */ "./frontend/src/classes/components/field-components/DateInputComponent.js");
/* harmony import */ var _field_components_DateTimeComponent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./field-components/DateTimeComponent.js */ "./frontend/src/classes/components/field-components/DateTimeComponent.js");
/* harmony import */ var _LinkSectionForGoal_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./LinkSectionForGoal.js */ "./frontend/src/classes/components/LinkSectionForGoal.js");
/* harmony import */ var _StaticTextField_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./StaticTextField.js */ "./frontend/src/classes/components/StaticTextField.js");
/* harmony import */ var _IconButton_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./IconButton.js */ "./frontend/src/classes/components/IconButton.js");
/* harmony import */ var _GoalForm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./GoalForm.js */ "./frontend/src/classes/components/GoalForm.js");
/* harmony import */ var _FormController_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../FormController.js */ "./frontend/src/classes/FormController.js");
/* harmony import */ var _data_sources_User_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../data-sources/User.js */ "./frontend/src/classes/data-sources/User.js");
/* harmony import */ var _utilities_time_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utilities/time.js */ "./frontend/src/utilities/time.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


















var GoalComponent = /*#__PURE__*/function (_EditableComponent) {
  _inherits(GoalComponent, _EditableComponent);

  var _super = _createSuper(GoalComponent);

  function GoalComponent(parent, goal) {
    var _this;

    _classCallCheck(this, GoalComponent);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, goal);
    _this.name = "goal-component";
    _this.ctrl = new UpdateGoalController(_assertThisInitialized(_this));

    _this.populate();

    _this.updateDOM();

    _this.wrapper.css({
      "order": _this.src.sortOrder
    });

    return _this;
  }

  _createClass(GoalComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(GoalComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      /*  Editable components */

      this.editableComponents.description = new _field_components_TextAreaComponent_js__WEBPACK_IMPORTED_MODULE_6__.default(this, 'description', 'Details', '', "", false);
      this.editableComponents.links = new _LinkSectionForGoal_js__WEBPACK_IMPORTED_MODULE_9__.default(this, this.src);
      this.editableComponents.notes = new _field_components_TextAreaComponent_js__WEBPACK_IMPORTED_MODULE_6__.default(this, 'notes', 'Notes', '', "", false);
      this.editableComponents.showFormBtn = new _IconButton_js__WEBPACK_IMPORTED_MODULE_11__.default(this, 'show-form-button');
      /* Non-editable components */

      this.components.checkmark = new _field_components_CheckmarkComponent_js__WEBPACK_IMPORTED_MODULE_4__.default(this, 'checkmark', this.src.completed);

      if (this.src.user_id == _data_sources_User_js__WEBPACK_IMPORTED_MODULE_14__.default.currentUserId) {
        // If this is the owner of the goal, let the checkmark be checkable
        this.components.checkmark.startEditing(true, false);
      }

      this.components.accordionComponent = new _Accordion_js__WEBPACK_IMPORTED_MODULE_2__.default(this);
      this.components.basisDisplay = new _GoalBasisDisplay_js__WEBPACK_IMPORTED_MODULE_3__.default(this, this.src, true);
      this.components.completeBy = new _StaticTextField_js__WEBPACK_IMPORTED_MODULE_10__.default(this, "Complete by: ", "");
      this.components.repeatBasis = new _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_5__.default(this, "static repeat basis", "Frequency: ", "", "...", false);
      this.components.createdOn = new _field_components_DateInputComponent_js__WEBPACK_IMPORTED_MODULE_7__.default(this, "created", "Created: ", this.src.createdOn, undefined, false);
      dom.description = this.editableComponents.description.getWrapper();
      dom.links = this.editableComponents.links.getWrapper();
      dom.notes = this.editableComponents.notes.getWrapper();
      dom.checkDiv = this.components.checkmark.getWrapper();
      dom.accordion = this.components.accordionComponent.getWrapper();
      dom.accordionContent = this.components.accordionComponent.getContentDiv();
      dom.showFormButton = this.editableComponents.showFormBtn.getWrapper();
      dom.basisDiv = this.components.basisDisplay.getWrapper();
      dom.completeBy = this.components.completeBy.getWrapper();
      dom.repeatDiv = this.components.repeatBasis.getWrapper();
      dom.createdOn = this.components.createdOn.getWrapper();
      this.wrapper.addClass('goal js-hoverable');
      dom.goalDiv = this.wrapper;
      dom.headerDiv = $('<div class="goal-header"></div>');
      dom.contentDiv = $('<div class="goal-content"></div>');
      dom.infoDiv = $('<div class="goal-info"></div>');
      dom.nameDiv = $('<div class="goal-name js-fit-text"></div>');
      dom.nameSpan = $('<span maxfontsize="24" minfontsize="16"></span>');
      dom.buttonBox = $('<div class="goal-button-box"></div>');
      dom.accordionMain = $('<div class="accordion-main"></div>');
      dom.accordionForm = $('<div class="goal-details"></div>');
      dom.accordionTopbar = $('<div class="accordion-topbar"></div>');
      dom.goalDiv.append(dom.headerDiv);
      dom.headerDiv.append(dom.contentDiv);
      dom.contentDiv.append(dom.infoDiv);
      dom.infoDiv.append(dom.nameDiv).append(dom.basisDiv);
      dom.nameDiv.append(dom.nameSpan);
      dom.contentDiv.append(dom.buttonBox);
      dom.buttonBox.append(dom.checkDiv);
      dom.goalDiv.append(dom.accordion);
      dom.accordionMain.append(dom.accordionForm).append(dom.accordionTopbar);
      dom.accordionForm.append(dom.description).append(dom.completeBy).append(dom.repeatDiv).append(dom.createdOn).append(dom.links).append(dom.notes);

      if (this.src.user_id == _data_sources_User_js__WEBPACK_IMPORTED_MODULE_14__.default.currentUserId) {
        dom.accordionTopbar.append(dom.editButton).append(dom.showFormButton);
      }

      dom.accordionContent.append(dom.accordionMain);
      /* Create editing form */

      this.components.goalForm = new _GoalForm_js__WEBPACK_IMPORTED_MODULE_12__.default(this, this.src);
      var comp = this;
      this.dom.headerDiv.on("click", function () {
        return comp.toggleAccordion();
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      if (!this.src) return;
      var dom = this.dom;
      var src = this.src;

      if (src.category) {
        dom.goalDiv.addClass('ld-' + src.category.toLowerCase());
      }

      dom.nameSpan.html(src.name);
      dom.nameSpan.fitTextByWidth();
      this.components.basisDisplay.updateDOM();
      this.components.completeBy.value = (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_15__.describeDatetimeAbsolute)(this.src.nextDeadline);
      this.components.completeBy.updateDOM();
      this.components.repeatBasis.value = this.src.repeat.toString();
      this.components.repeatBasis.updateDOM();
      this.components.createdOn.value = src.createdOn;
      this.components.createdOn.updateDOM();
      this.editableComponents.description.value = src.description;
      this.editableComponents.description.updateDOM();
      this.editableComponents.notes.value = src.notes;
      this.editableComponents.notes.updateDOM();
    }
  }, {
    key: "toggleAccordion",
    value: function toggleAccordion() {
      if (this.components.accordionComponent.isOpen) {
        this.closeAccordion();
      } else {
        this.openAccordion();
      }
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (this.src.user_id == _data_sources_User_js__WEBPACK_IMPORTED_MODULE_14__.default.currentUserId) {
        _get(_getPrototypeOf(GoalComponent.prototype), "startEditing", this).call(this, recurseDown, recurseUp);
      }
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      this.ctrl.submit();

      _get(_getPrototypeOf(GoalComponent.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);
    }
  }, {
    key: "openForm",
    value: function openForm() {
      this.components.goalForm.show();
      this.components.goalForm.startEditing();
    }
  }, {
    key: "closeForm",
    value: function closeForm() {
      this.components.goalForm.stopEditing();
      this.components.goalForm.hide();
    }
  }, {
    key: "openAccordion",
    value: function openAccordion() {
      this.components.accordionComponent.open();
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion() {
      this.stopEditing();
      this.components.accordionComponent.close();
    }
  }, {
    key: "snapOpenAccordion",
    value: function snapOpenAccordion() {
      this.components.accordionComponent.snapOpen();
    }
  }, {
    key: "snapClosedAccordion",
    value: function snapClosedAccordion() {
      this.stopEditing();
      this.components.accordionComponent.snapClose();
    }
  }, {
    key: "getEditableData",
    value: function getEditableData() {
      var _ecs$description$valu, _ecs$notes$value;

      // Return the contents of the components in the goal accordion that the user can edit
      var ecs = this.editableComponents;
      return {
        description: (_ecs$description$valu = ecs.description.value) !== null && _ecs$description$valu !== void 0 ? _ecs$description$valu : "",
        notes: (_ecs$notes$value = ecs.notes.value) !== null && _ecs$notes$value !== void 0 ? _ecs$notes$value : ""
      };
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      var _this2 = this;

      switch (id) {
        case this.editableComponents.showFormBtn.id:
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Message.CLICK) {
            this.openForm();
          }

          return;

        case this.components.goalForm.id:
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Message.EDIT_GOAL) {
            this.updateDOM();
            this.closeForm();
          } else if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Message.DELETE_GOAL) {
            this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Message.DELETE_GOAL);
            this.closeForm();
          } else if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Message.CLOSE_MODAL) {
            this.closeForm();
          }

          return;

        case this.components.checkmark.id:
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Message.CHANGE) {
            // Update the goal on the db with the checkmark state
            var comp = this;
            this.src.update({
              completed: this.components.checkmark.checked ? 1 : 0
            }).then(function () {
              return _this2.updateDOM();
            });
          }

          return;
      }

      _get(_getPrototypeOf(GoalComponent.prototype), "handleMessage", this).call(this, id, msg, data);
    }
  }]);

  return GoalComponent;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__.default);



var UpdateGoalController = /*#__PURE__*/function (_FormController) {
  _inherits(UpdateGoalController, _FormController);

  var _super2 = _createSuper(UpdateGoalController);

  function UpdateGoalController() {
    _classCallCheck(this, UpdateGoalController);

    return _super2.apply(this, arguments);
  }

  _createClass(UpdateGoalController, [{
    key: "doSubmission",
    value: function () {
      var _doSubmission = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        var data, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                data = this.comp.getEditableData(); // notes and description

                _context.next = 3;
                return this.src.update(data);

              case 3:
                resp = _context.sent;
                _context.t0 = resp.status;
                _context.next = _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Status.SUCCESS ? 7 : _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Status.FAILURE ? 11 : _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_16__.Status.EXCEPTION ? 11 : 13;
                break;

              case 7:
                // update goal src
                this.src.description = data.description;
                this.src.notes = data.notes;
                this.comp.updateDOM();
                return _context.abrupt("break", 13);

              case 11:
                this.comp(showFeedback(resp.data));
                return _context.abrupt("break", 13);

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function doSubmission() {
        return _doSubmission.apply(this, arguments);
      }

      return doSubmission;
    }()
  }]);

  return UpdateGoalController;
}(_FormController_js__WEBPACK_IMPORTED_MODULE_13__.default);

/***/ }),

/***/ "./frontend/src/classes/components/GoalForm.js":
/*!*****************************************************!*\
  !*** ./frontend/src/classes/components/GoalForm.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GoalForm)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _ModalComponent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModalComponent.js */ "./frontend/src/classes/components/ModalComponent.js");
/* harmony import */ var _GoalComponent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GoalComponent.js */ "./frontend/src/classes/components/GoalComponent.js");
/* harmony import */ var _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./field-components/TextInputComponent.js */ "./frontend/src/classes/components/field-components/TextInputComponent.js");
/* harmony import */ var _data_sources_Goal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data-sources/Goal.js */ "./frontend/src/classes/data-sources/Goal.js");
/* harmony import */ var _FormController_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../FormController.js */ "./frontend/src/classes/FormController.js");
/* harmony import */ var _field_components_DropdownComponent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./field-components/DropdownComponent.js */ "./frontend/src/classes/components/field-components/DropdownComponent.js");
/* harmony import */ var _field_components_DateInputComponent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./field-components/DateInputComponent.js */ "./frontend/src/classes/components/field-components/DateInputComponent.js");
/* harmony import */ var _field_components_LabelledFieldWrapper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./field-components/LabelledFieldWrapper.js */ "./frontend/src/classes/components/field-components/LabelledFieldWrapper.js");
/* harmony import */ var _field_components_WeekSelectorComponent_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./field-components/WeekSelectorComponent.js */ "./frontend/src/classes/components/field-components/WeekSelectorComponent.js");
/* harmony import */ var _field_components_MonthSelectorComponent_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./field-components/MonthSelectorComponent.js */ "./frontend/src/classes/components/field-components/MonthSelectorComponent.js");
/* harmony import */ var _field_components_TimeInputComponent_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./field-components/TimeInputComponent.js */ "./frontend/src/classes/components/field-components/TimeInputComponent.js");
/* harmony import */ var _field_components_TextAreaComponent_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./field-components/TextAreaComponent.js */ "./frontend/src/classes/components/field-components/TextAreaComponent.js");
/* harmony import */ var _field_components_CheckboxComponent_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./field-components/CheckboxComponent.js */ "./frontend/src/classes/components/field-components/CheckboxComponent.js");
/* harmony import */ var _utilities_asyncConfirm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utilities/asyncConfirm.js */ "./frontend/src/utilities/asyncConfirm.js");
/* harmony import */ var _utilities_object_fields__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../utilities/object-fields */ "./frontend/src/utilities/object-fields.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _TemplateGoalSection_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./TemplateGoalSection.js */ "./frontend/src/classes/components/TemplateGoalSection.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




















var GoalForm = /*#__PURE__*/function (_EditableComponent) {
  _inherits(GoalForm, _EditableComponent);

  var _super = _createSuper(GoalForm);

  function GoalForm(parent, src) {
    var _this;

    _classCallCheck(this, GoalForm);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, src);
    _this.name = "goal-form";

    if (_this.parent instanceof _GoalComponent_js__WEBPACK_IMPORTED_MODULE_3__.default) {
      _this.title = "Edit Goal";
      _this.saveText = "Save";
      _this.closeText = "Close";
      _this.ctrl = new EditGoalController(_assertThisInitialized(_this));
    } else {
      _this.title = "Add Goal";
      _this.saveText = "Save";
      _this.closeText = "Close";
      _this.ctrl = new AddGoalController(_assertThisInitialized(_this));
    } // Gatekeeper to prevent multiple submission
    // Form becomes active on show, inactive on hide
    // Can't submit unless active


    _this.active = false;
    _this.templateGoal = undefined; // Only populate on show()

    return _this;
  }

  _createClass(GoalForm, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(GoalForm.prototype), "populate", this).call(this);

      var dom = this.dom;
      /* Non-editable components */

      this.components.modal = new _ModalComponent_js__WEBPACK_IMPORTED_MODULE_2__.default(this.wrapper, this, this.title, this.saveText, this.closeText, "Delete", this.parent instanceof _GoalComponent_js__WEBPACK_IMPORTED_MODULE_3__.default);
      this.components.frequencyWrapper = new _field_components_LabelledFieldWrapper_js__WEBPACK_IMPORTED_MODULE_9__.default(this, 'every-x-days', "Frequency: ", true);
      this.components.templateSection = new _TemplateGoalSection_js__WEBPACK_IMPORTED_MODULE_18__.default(this, this.src instanceof _data_sources_Goal_js__WEBPACK_IMPORTED_MODULE_5__.default ? this.src.parent : this.src);
      /*  Editable components */

      this.editableComponents.name = new _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_4__.default(this, 'name', undefined, undefined, "What is your goal?", true);
      this.editableComponents.repeatType = new _field_components_DropdownComponent_js__WEBPACK_IMPORTED_MODULE_7__.default(this, 'type', "How often do you want to complete this goal? ", _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.WEEKLY, ["One time", "Daily", "Weekly", "Monthly", "Yearly"], [_utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.ONE_TIME, _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.DAILY, _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.WEEKLY, _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.MONTHLY, _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.YEARLY], undefined, true);
      this.editableComponents.description = new _field_components_TextAreaComponent_js__WEBPACK_IMPORTED_MODULE_13__.default(this, 'description', 'Details', '', "", false);
      this.editableComponents.frequency = new _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_4__.default(this, 'frequency', undefined, "1", '-', false, 3, "\d*");
      this.editableComponents.starting = new _field_components_DateInputComponent_js__WEBPACK_IMPORTED_MODULE_8__.default(this, "starting date", "Starting on: ", undefined, undefined, false);
      this.editableComponents.weekSelector = new _field_components_WeekSelectorComponent_js__WEBPACK_IMPORTED_MODULE_10__.default(this, "days of week", "On days: ", {
        SUN: false,
        MON: false,
        TUE: true,
        WED: false,
        THU: true,
        FRI: false,
        SAT: false
      }, true);
      this.editableComponents.monthSelector = new _field_components_MonthSelectorComponent_js__WEBPACK_IMPORTED_MODULE_11__.default(this, "days of month", "On days: ", undefined, true);
      this.editableComponents.atTime = new _field_components_TimeInputComponent_js__WEBPACK_IMPORTED_MODULE_12__.default(this, "at time", "Before: ", 17 * 60 * 60, undefined, true);
      this.editableComponents["private"] = new _field_components_CheckboxComponent_js__WEBPACK_IMPORTED_MODULE_14__.default(this, "private", "Private: ", false);
      this.wrapper.addClass('goal-form');
      dom.modal = this.wrapper;
      dom.formBody = this.components.modal.getBodyDiv();
      dom.name = this.editableComponents.name.getWrapper();
      dom.templateSection = this.components.templateSection.getWrapper();
      dom.description = this.editableComponents.description.getWrapper();
      dom.repeatType = this.editableComponents.repeatType.getWrapper();
      dom.repeatType.css({
        "flex-direction": "column"
      });
      dom.frequencyWrapper = this.components.frequencyWrapper.getWrapper();
      dom.frequency = this.editableComponents.frequency.getWrapper();
      dom.frequencyUnit = $('<span></span>');
      dom.starting = this.editableComponents.starting.getWrapper();
      dom.weekSelector = this.editableComponents.weekSelector.getWrapper();
      dom.monthSelector = this.editableComponents.monthSelector.getWrapper();
      dom.atTime = this.editableComponents.atTime.getWrapper();
      dom["private"] = this.editableComponents["private"].getWrapper();
      /* Sprucing up the name */

      this.editableComponents.name.dom.input.css({
        "padding": "8px"
      });
      /* Set show options for different repeat types */

      dom.frequencyWrapper.addClass('daily weekly monthly yearly');
      this.components.frequencyWrapper.getMainDiv().append('<span>Every </span>').append(dom.frequency).append(dom.frequencyUnit);
      dom.frequency.css({
        'width': 'auto',
        'margin': '0 4px 0 4px'
      });
      dom.weekSelector.addClass('weekly');
      dom.monthSelector.addClass('monthly');
      dom.atTime.addClass('one-time daily weekly monthly yearly');
      dom.timingOptions = $('<div class="timing-options"></div>');
      dom.timingOptions.append(dom.frequencyWrapper).append('<br class="one-time daily weekly monthly yearly"/>').append(dom.weekSelector).append(dom.monthSelector).append('<br class="one-time daily weekly monthly yearly"/>').append(dom.atTime);
      dom.formBody.append(dom.name).append('<br/>').append(dom.description).append('<br/>').append(dom.templateSection).append('<br/>').append(dom.repeatType).append('<br/>').append(dom.timingOptions).append('<br/>').append(dom.starting).append('<br/>').append(dom["private"]);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      if (this.src instanceof _data_sources_Goal_js__WEBPACK_IMPORTED_MODULE_5__.default) {
        var repeatRule = this.src.repeat;
        this.editableComponents.name.value = this.src.name;
        this.editableComponents.description.value = this.src.description;
        this.editableComponents.repeatType.value = repeatRule.type;
        this.editableComponents.frequency.value = repeatRule.frequency;
        this.editableComponents.starting.value = repeatRule.startingOn;
        this.editableComponents.atTime.value = repeatRule.times[0];
        this.editableComponents.weekSelector.valueFromList(repeatRule.daysOfWeek);
        this.editableComponents.monthSelector.valueFromList(repeatRule.daysOfMonth);
        this.editableComponents["private"].value = this.src["private"];
      }

      for (var _i = 0, _Object$values = Object.values(this.components); _i < _Object$values.length; _i++) {
        var comp = _Object$values[_i];
        comp.updateDOM();
      }

      for (var _i2 = 0, _Object$values2 = Object.values(this.editableComponents); _i2 < _Object$values2.length; _i2++) {
        var _comp = _Object$values2[_i2];

        _comp.updateDOM();
      }

      this.onChangeRepeatType();
    }
  }, {
    key: "show",
    value: function show() {
      this.populate();
      this.updateDOM();
      this.active = true;
      this.components.modal.show();
    }
  }, {
    key: "hide",
    value: function hide() {
      this.active = false;
      this.components.modal.hide();
      this.updateDOM();
    }
  }, {
    key: "disableSubmit",
    value: function disableSubmit() {
      this.components.modal.disableSubmitButton();
      this.components.modal.disableDeleteButton();
    }
  }, {
    key: "enableSubmit",
    value: function enableSubmit() {
      this.components.modal.enableSubmitButton();
      this.components.modal.enableDeleteButton();
    }
  }, {
    key: "getFormData",
    value: function getFormData() {
      var ecs = this.editableComponents;
      var rpt = new _utilities_object_fields__WEBPACK_IMPORTED_MODULE_16__.RepeatRule(ecs.repeatType.value, ecs.starting.value, ecs.frequency.value, [ecs.atTime.value], ecs.weekSelector.valueAsList(), ecs.monthSelector.valueAsList());
      var data = {
        name: ecs.name.value,
        repeat_rule: rpt.toJSON(),
        description: ecs.description.value,
        "private": ecs["private"].value ? 1 : 0
      };
      console.log(this.components.templateSection.selectedTemplate);

      if (this.components.templateSection.selectedTemplate) {
        data.template_id = this.components.templateSection.selectedTemplate.name;
      }

      return data;
    }
  }, {
    key: "showFeedback",
    value: function showFeedback(messages) {
      /* TODO */
      if (messages.url) {
        this.editableComponents.url.showErrorMessage(messages.url);
      }

      if (messages.name) {
        this.editableComponents.name.showErrorMessage(messages.name);
      }
    }
  }, {
    key: "setTemplate",
    value: function setTemplate(tempGoal) {
      this.editableComponents.name.value = tempGoal.name;
      this.editableComponents.description.value = tempGoal.description;
      this.editableComponents.name.updateDOM();
      this.editableComponents.description.updateDOM();

      if (tempGoal.frequency) {
        this.editableComponents.frequency.value = tempGoal.frequency;
      }

      if (tempGoal.times && tempGoal.times.length > 0) {
        this.editableComponents.atTime.setTimeInSeconds(tempGoal.times[0]);
      }

      if (tempGoal.type) {
        if (this.editableComponents.repeatType.value !== tempGoal.type) {
          this.editableComponents.repeatType.value = tempGoal.type;
          this.onChangeRepeatType();
        }

        switch (tempGoal.type) {
          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.ONE_TIME:
            break;

          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.DAILY:
            break;

          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.WEEKLY:
            if (tempGoal.days) {
              this.editableComponents.weekSelector.clearDays();

              for (var day in tempGoal.days) {
                this.editableComponents.weekSelector.addDay(day.toUpperCase());
                this.editableComponents.atTime.setTimeInSeconds(tempGoal.days[day][0]);
              }
            }

            break;

          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.MONTHLY:
            if (tempGoal.days) {
              this.editableComponents.monthSelector.clearDays();

              var _iterator = _createForOfIteratorHelper(tempGoal.days),
                  _step;

              try {
                for (_iterator.s(); !(_step = _iterator.n()).done;) {
                  var _day = _step.value;
                  this.editableComponents.monthSelector.addDay(_day);
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
            }

            break;

          case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.YEARLY:
            break;
        }
      }
    }
  }, {
    key: "unsetTemplate",
    value: function unsetTemplate() {// do nothing
    }
  }, {
    key: "onChangeRepeatType",
    value: function onChangeRepeatType() {
      var recurrenceType = this.editableComponents.repeatType.value;
      this.dom.timingOptions.removeClass('one-time daily weekly monthly yearly');

      switch (recurrenceType) {
        case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.ONE_TIME:
          this.dom.timingOptions.addClass('one-time');
          this.editableComponents.starting.label = "Due date: ";
          this.editableComponents.starting.updateDOM();
          break;

        case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.DAILY:
          this.dom.timingOptions.addClass('daily');
          this.dom.frequencyUnit.html(' day(s).');
          this.editableComponents.starting.label = "Starting on: ";
          this.editableComponents.starting.updateDOM();
          break;

        case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.WEEKLY:
          this.dom.timingOptions.addClass('weekly');
          this.dom.frequencyUnit.html(' week(s).');
          this.editableComponents.starting.label = "Starting on: ";
          this.editableComponents.starting.updateDOM();
          break;

        case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.MONTHLY:
          this.dom.timingOptions.addClass('monthly');
          this.dom.frequencyUnit.html(' month(s).');
          this.editableComponents.starting.label = "Starting on: ";
          this.editableComponents.starting.updateDOM();
          break;

        case _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.RepeatType.YEARLY:
          this.dom.timingOptions.addClass('yearly');
          this.dom.frequencyUnit.html(' year(s).');
          this.editableComponents.starting.label = "Starting on: ";
          this.editableComponents.starting.updateDOM();
          break;
      }
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      switch (id) {
        case this.components.modal.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.CLOSE_MODAL) {
            this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.CLOSE_MODAL);
          } else if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.SUBMIT) {
            // This could be to a goal controller (for updating) or a milestone controller (for creating)
            if (this.active) {
              this.disableSubmit();
              var comp = this;
              this.ctrl.submit().then(function () {
                return comp.enableSubmit();
              });
            }
          } else if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.DELETE) {
            if (this.active) {
              var _comp2 = this;

              (0,_utilities_asyncConfirm_js__WEBPACK_IMPORTED_MODULE_15__.asyncConfirm)("Are you sure you want to delete this goal?", function () {
                _comp2.disableSubmit();

                _comp2.ctrl["delete"]().then(function () {
                  return _comp2.enableSubmit();
                });
              });
            }
          }

          return;

        case this.editableComponents.repeatType.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.CHANGE) {
            this.onChangeRepeatType();
          }

          return;

        case this.components.templateSection.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.SET_TEMPLATE) {
            this.setTemplate(data);
          }

          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.UNSET_TEMPLATE) {
            this.unsetTemplate();
          }

          return;
      }

      _get(_getPrototypeOf(GoalForm.prototype), "handleMessage", this).call(this, id, msg, data);
    }
  }]);

  return GoalForm;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__.default); // Controllers for the goal form.




var EditGoalController = /*#__PURE__*/function (_FormController) {
  _inherits(EditGoalController, _FormController);

  var _super2 = _createSuper(EditGoalController);

  function EditGoalController() {
    _classCallCheck(this, EditGoalController);

    return _super2.apply(this, arguments);
  }

  _createClass(EditGoalController, [{
    key: "doSubmission",
    value: function () {
      var _doSubmission = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        var data, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                data = this.comp.getFormData();
                _context.next = 3;
                return this.src.update(data);

              case 3:
                resp = _context.sent;
                _context.t0 = resp.status;
                _context.next = _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.SUCCESS ? 7 : _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.FAILURE ? 9 : _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.EXCEPTION ? 9 : 11;
                break;

              case 7:
                // update goal src
                this.comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.EDIT_GOAL);
                return _context.abrupt("break", 11);

              case 9:
                this.comp.showFeedback(resp.data);
                return _context.abrupt("break", 11);

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function doSubmission() {
        return _doSubmission.apply(this, arguments);
      }

      return doSubmission;
    }()
  }, {
    key: "doDeletion",
    value: function () {
      var _doDeletion = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.src["delete"]();

              case 2:
                resp = _context2.sent;
                _context2.t0 = resp.status;
                _context2.next = _context2.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.SUCCESS ? 6 : _context2.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.FAILURE ? 8 : _context2.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.EXCEPTION ? 8 : 10;
                break;

              case 6:
                // update goal src
                this.comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.DELETE_GOAL);
                return _context2.abrupt("break", 10);

              case 8:
                this.comp.showFeedback(resp.data);
                return _context2.abrupt("break", 10);

              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function doDeletion() {
        return _doDeletion.apply(this, arguments);
      }

      return doDeletion;
    }()
  }]);

  return EditGoalController;
}(_FormController_js__WEBPACK_IMPORTED_MODULE_6__.default);

var AddGoalController = /*#__PURE__*/function (_FormController2) {
  _inherits(AddGoalController, _FormController2);

  var _super3 = _createSuper(AddGoalController);

  function AddGoalController() {
    _classCallCheck(this, AddGoalController);

    return _super3.apply(this, arguments);
  }

  _createClass(AddGoalController, [{
    key: "doSubmission",
    value: function () {
      var _doSubmission2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3() {
        var data, goal, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                data = this.comp.getFormData();
                goal = _data_sources_Goal_js__WEBPACK_IMPORTED_MODULE_5__.default.make(data, this.src);
                _context3.next = 4;
                return goal.create();

              case 4:
                resp = _context3.sent;
                _context3.t0 = resp.status;
                _context3.next = _context3.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.SUCCESS ? 8 : _context3.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.FAILURE ? 11 : _context3.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Status.EXCEPTION ? 11 : 13;
                break;

              case 8:
                this.src.addGoal(goal);
                this.comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_17__.Message.ADD_GOAL, goal);
                return _context3.abrupt("break", 13);

              case 11:
                this.comp.showFeedback(resp.data);
                return _context3.abrupt("break", 13);

              case 13:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function doSubmission() {
        return _doSubmission2.apply(this, arguments);
      }

      return doSubmission;
    }()
  }]);

  return AddGoalController;
}(_FormController_js__WEBPACK_IMPORTED_MODULE_6__.default);

/***/ }),

/***/ "./frontend/src/classes/components/GoalSection.js":
/*!********************************************************!*\
  !*** ./frontend/src/classes/components/GoalSection.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GoalSection)
/* harmony export */ });
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _GoalComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GoalComponent.js */ "./frontend/src/classes/components/GoalComponent.js");
/* harmony import */ var _IconButton_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IconButton.js */ "./frontend/src/classes/components/IconButton.js");
/* harmony import */ var _GoalForm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GoalForm.js */ "./frontend/src/classes/components/GoalForm.js");
/* harmony import */ var _Accordion_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Accordion.js */ "./frontend/src/classes/components/Accordion.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _data_sources_User_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../data-sources/User.js */ "./frontend/src/classes/data-sources/User.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









var GoalSection = /*#__PURE__*/function (_EditableComponent) {
  _inherits(GoalSection, _EditableComponent);

  var _super = _createSuper(GoalSection);

  function GoalSection(parent, milestoneOrUser) {
    var _this;

    var showButtons = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var placeholder = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "Add your first goal";
    var title = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "Goals";

    _classCallCheck(this, GoalSection);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, milestoneOrUser);
    _this.name = "goal-section";

    if (_this.src instanceof _data_sources_User_js__WEBPACK_IMPORTED_MODULE_6__.default) {
      _this.section_user_id = _this.src.id;
    } else {
      _this.section_user_id = _this.src.user_id;
    }

    _this.showButtons = _this.section_user_id == _data_sources_User_js__WEBPACK_IMPORTED_MODULE_6__.default.currentUserId ? showButtons : false;
    _this.placeholder = placeholder;
    _this.title = title;

    _this.wrapper.addClass("empty");

    _this.numberGoals = 0;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(GoalSection, [{
    key: "addGoalComponent",
    value: function addGoalComponent(goal) {
      this.wrapper.removeClass("empty");
      var comp = new _GoalComponent_js__WEBPACK_IMPORTED_MODULE_1__.default(this, goal);
      var wrapper = comp.getWrapper();
      this.components[comp.id] = comp;
      this.dom.goalBox.append(wrapper);
      this.numberGoals += 1;
    }
  }, {
    key: "deleteGoalComponent",
    value: function deleteGoalComponent(id) {
      if (id in this.components) {
        this.components[id].getWrapper().remove();
        delete this.components[id]; // Figure out if the section is empty

        for (var _i = 0, _Object$values = Object.values(this.components); _i < _Object$values.length; _i++) {
          var comp = _Object$values[_i];

          if (comp instanceof _GoalComponent_js__WEBPACK_IMPORTED_MODULE_1__.default) {
            return;
          }

          this.wrapper.addClass("empty");
        }
      }
    }
  }, {
    key: "closeAllAccordions",
    value: function closeAllAccordions() {
      for (var _i2 = 0, _Object$values2 = Object.values(this.editableComponents); _i2 < _Object$values2.length; _i2++) {
        var comp = _Object$values2[_i2];
        comp.closeAccordion();
      }
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(GoalSection.prototype), "populate", this).call(this);

      var dom = this.dom;
      this.wrapper.addClass("goals-section");
      this.editableComponents.addBtn = new _IconButton_js__WEBPACK_IMPORTED_MODULE_2__.default(this, 'add-button');
      this.components.accordionComponent = new _Accordion_js__WEBPACK_IMPORTED_MODULE_4__.default(this, true, 1200, 1200);
      dom.accordion = this.components.accordionComponent.getWrapper();
      dom.accordionContent = this.components.accordionComponent.getContentDiv();
      dom.openAccordionButton = $('<div class="accordionOpenArrow"><div></div></div>');
      dom.sectionWrapper = this.wrapper;
      dom.titleDiv = $('<div class="ms-section-title"></div>');
      dom.titleText = $('<h4></h4>').html(this.title);
      dom.titleDiv.append(dom.titleText);
      dom.goalBox = $('<div class="goal-box"></div>');
      dom.addButton = this.editableComponents.addBtn.getWrapper();

      if (this.showButtons) {
        this.components.goalForm = new _GoalForm_js__WEBPACK_IMPORTED_MODULE_3__.default(this, this.src);
        dom.sectionWrapper.append(dom.addButton);
      }

      if (this.title) {
        dom.sectionWrapper.append(dom.titleDiv);
      }

      dom.sectionWrapper.append(dom.openAccordionButton).append(dom.accordion);
      dom.accordionContent.append(dom.goalBox);
      dom.placeholder = $('<div class="goal-placeholder"></div>');
      dom.placeholder.html(this.placeholder);
      var comp = this;
      dom.placeholder.on('click', function () {
        return comp.handleMessage("placeholder", _utilities_enums_js__WEBPACK_IMPORTED_MODULE_5__.Message.CLICK);
      });
      dom.goalBox.append(dom.placeholder);
      dom.titleDiv.on("click", function () {
        if (comp.numberGoals >= 4) {
          comp.toggleAccordion();
        }
      });
      dom.openAccordionButton.on("click", function () {
        if (comp.numberGoals >= 4) {
          comp.toggleAccordion();
        }
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(GoalSection.prototype), "updateDOM", this).call(this);

      if (!this.src) return;
      var dom = this.dom;
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      _get(_getPrototypeOf(GoalSection.prototype), "startEditing", this).call(this, recurseDown, recurseUp);

      this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_5__.Message.START_EDITING);
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      _get(_getPrototypeOf(GoalSection.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);

      this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_5__.Message.STOP_EDITING);
    }
  }, {
    key: "openForm",
    value: function openForm() {
      this.components.goalForm.show();
      this.components.goalForm.startEditing();
    }
  }, {
    key: "closeForm",
    value: function closeForm() {
      this.components.goalForm.stopEditing();
      this.components.goalForm.hide();
    }
  }, {
    key: "toggleAccordion",
    value: function toggleAccordion() {
      if (this.components.accordionComponent.isOpen) {
        this.closeAccordion();
      } else {
        this.openAccordion();
      }
    }
  }, {
    key: "openAccordion",
    value: function openAccordion() {
      this.components.accordionComponent.open();
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion() {
      this.stopEditing();
      this.components.accordionComponent.close();
    }
  }, {
    key: "snapOpenAccordion",
    value: function snapOpenAccordion() {
      this.components.accordionComponent.snapOpen();
    }
  }, {
    key: "snapClosedAccordion",
    value: function snapClosedAccordion() {
      this.stopEditing();
      this.components.accordionComponent.snapClosed();
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      switch (id) {
        case this.editableComponents.addBtn.id:
        case "placeholder":
          // This is a weird antipattern, should be changed later as we change the placeholder
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_5__.Message.CLICK) {
            if (this.editing) {
              this.openForm();
            }
          }

          return;
      }

      if (this.components.goalForm && id == this.components.goalForm.id) {
        if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_5__.Message.ADD_GOAL) {
          this.addGoalComponent(data);
          this.closeForm();
        } else if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_5__.Message.CLOSE_MODAL) {
          this.closeForm();
        }

        return;
      }

      if (id in this.components) {
        if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_5__.Message.DELETE_GOAL) {
          this.deleteGoalComponent(id);
        }
      }

      _get(_getPrototypeOf(GoalSection.prototype), "handleMessage", this).call(this, id, msg, data);
    }
  }]);

  return GoalSection;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/IconButton.js":
/*!*******************************************************!*\
  !*** ./frontend/src/classes/components/IconButton.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ IconButton)
/* harmony export */ });
/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component.js */ "./frontend/src/classes/components/Component.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var IconButton = /*#__PURE__*/function (_Component) {
  _inherits(IconButton, _Component);

  var _super = _createSuper(IconButton);

  function IconButton(parent, className) {
    var _this;

    _classCallCheck(this, IconButton);

    var wrapper = $('<div class="action-icon js-hoverable js-activable"><div></div></div>');
    _this = _super.call(this, wrapper, parent);
    _this.name = "icon-" + className;
    _this.className = className;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(IconButton, [{
    key: "populate",
    value: function populate() {
      this.wrapper.addClass(this.className);

      if (this.parent) {
        var comp = this;
        this.wrapper.on("click", function () {
          return comp.messageParent("clicked");
        });
      }
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      this.wrapper.addClass('editing');
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      this.wrapper.removeClass('editing');
    }
  }]);

  return IconButton;
}(_Component_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/IconComponent.js":
/*!**********************************************************!*\
  !*** ./frontend/src/classes/components/IconComponent.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ IconComponent)
/* harmony export */ });
/* harmony import */ var _utilities_enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/enums */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _EditableComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EditableComponent */ "./frontend/src/classes/components/EditableComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




var IconComponent = /*#__PURE__*/function (_EditableComponent) {
  _inherits(IconComponent, _EditableComponent);

  var _super = _createSuper(IconComponent);

  function IconComponent(parent, category) {
    var _this;

    var includeLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

    _classCallCheck(this, IconComponent);

    var wrapper = $('<div class="category-icon-container"></div>');
    _this = _super.call(this, wrapper, parent);
    _this.name = "milestone-image-component";
    _this.category = category;
    _this.includeLabel = includeLabel;
    _this.selected = false;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(IconComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(IconComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.outerDiv = this.wrapper;
      dom.backCircle = $('<i class="fa fa-circle fa-stack-2x"></i>');

      switch (this.category) {
        case _utilities_enums__WEBPACK_IMPORTED_MODULE_0__.CategoryEnum.HOUSING:
          dom.outerSpan = $('<span class="fa-stack fa-2x ld-housing"></span>');
          dom.icon = $('<i class="fa fa-home fa-stack-1x inverse"></i>');
          dom.label = $("<span>Housing</span>");
          break;

        case _utilities_enums__WEBPACK_IMPORTED_MODULE_0__.CategoryEnum.HEALTH:
          dom.outerSpan = $('<span class="fa-stack fa-2x ld-health"></span>');
          dom.icon = $('<i class="fa fa-heart fa-stack-1x inverse"></i>');
          dom.label = $("<span>Health</span>");
          break;

        case _utilities_enums__WEBPACK_IMPORTED_MODULE_0__.CategoryEnum.EDUCATION:
          dom.outerSpan = $('<span class="fa-stack fa-2x ld-education"></span>');
          dom.icon = $('<i class="fa fa-graduation-cap fa-stack-1x inverse"></i>');
          dom.label = $("<span>Education</span>");
          break;

        case _utilities_enums__WEBPACK_IMPORTED_MODULE_0__.CategoryEnum.MONEY:
        case "Money Management":
          dom.outerSpan = $('<span class="fa-stack fa-2x ld-money"></span>');
          dom.icon = $('<i class="fa fa-money-bill-wave fa-stack-1x inverse"></i>');
          dom.label = $("<span>Money</span>");
          break;

        case _utilities_enums__WEBPACK_IMPORTED_MODULE_0__.CategoryEnum.JOBS:
          dom.outerSpan = $('<span class="fa-stack fa-2x ld-jobs"></span>');
          dom.icon = $('<i class="fa fa-chart-line fa-stack-1x inverse"></i>');
          dom.label = $("<span>Jobs</span>");
          break;

        case _utilities_enums__WEBPACK_IMPORTED_MODULE_0__.CategoryEnum.CHILDREN:
          dom.outerSpan = $('<span class="fa-stack fa-2x ld-children"></span>');
          dom.icon = $('<i class="fa fa-child fa-stack-1x inverse"></i>');
          dom.label = $("<span>Children</span>");
          break;

        case _utilities_enums__WEBPACK_IMPORTED_MODULE_0__.CategoryEnum.OTHER:
          dom.outerSpan = $('<span class="fa-stack fa-2x ld-other"></span>');
          dom.icon = $('<i class="fa fa-star fa-stack-1x inverse"></i>');
          dom.label = $("<span>Other</span>");
          break;

        default:
          dom.outerSpan = $('<span class="fa-stack fa-2x ld-other"></span>');
          dom.icon = $('<i class="fa fa-star fa-stack-1x inverse"></i>');
          dom.label = $("<span>" + this.category + "</span>");
          break;
      } //  dom.label.css({color: 'red'});
      //  dom.label.addClass('red-text')


      dom.outerSpan.append(dom.backCircle).append(dom.icon);
      dom.outerDiv.append(dom.outerSpan);
      if (this.includeLabel) dom.outerDiv.append(dom.label);
      var comp = this;
      dom.outerDiv.on('click', function () {
        if (comp.editing) {
          comp.toggleSelect();
        }
      });
    }
  }, {
    key: "select",
    value: function select() {
      if (!this.selected) {
        this.selected = true;
        this.wrapper.addClass('selected');
        this.ungreyOut(); // Notify parent that the "selected" value has changed

        this.messageParent(_utilities_enums__WEBPACK_IMPORTED_MODULE_0__.Message.CHANGE);
      }
    }
  }, {
    key: "unselect",
    value: function unselect() {
      if (this.selected) {
        this.selected = false;
        this.wrapper.removeClass('selected'); // Notify parent that the "selected" value has changed

        this.messageParent(_utilities_enums__WEBPACK_IMPORTED_MODULE_0__.Message.CHANGE);
      }
    }
  }, {
    key: "toggleSelect",
    value: function toggleSelect() {
      if (this.selected) {
        this.unselect();
      } else {
        this.select();
      }
    }
  }, {
    key: "greyOut",
    value: function greyOut() {
      if (!this.selected) {
        this.wrapper.addClass('greyed-out');
      }
    }
  }, {
    key: "ungreyOut",
    value: function ungreyOut() {
      this.wrapper.removeClass('greyed-out');
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      _get(_getPrototypeOf(IconComponent.prototype), "startEditing", this).call(this, recurseDown, recurseUp);
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      _get(_getPrototypeOf(IconComponent.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);
    }
  }]);

  return IconComponent;
}(_EditableComponent__WEBPACK_IMPORTED_MODULE_1__.default);



/***/ }),

/***/ "./frontend/src/classes/components/LinkComponent.js":
/*!**********************************************************!*\
  !*** ./frontend/src/classes/components/LinkComponent.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LinkComponent)
/* harmony export */ });
/* harmony import */ var _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data-sources/Link.js */ "./frontend/src/classes/data-sources/Link.js");
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _LinkForm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LinkForm.js */ "./frontend/src/classes/components/LinkForm.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _utilities_request_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/request.js */ "./frontend/src/utilities/request.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







var LinkComponent = /*#__PURE__*/function (_EditableComponent) {
  _inherits(LinkComponent, _EditableComponent);

  var _super = _createSuper(LinkComponent);

  function LinkComponent(parent, link) {
    var _this;

    _classCallCheck(this, LinkComponent);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, link);
    _this.name = "link-component";

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(LinkComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(LinkComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      this.wrapper.removeClass().addClass('link-wrapper');
      dom.wrapperDiv = this.wrapper;
      dom.linkDiv = $('<div class="link js-hoverable"></div>');
      dom.contentDiv = $('<div class="link-content"></div>');
      dom.nameSpan = $('<span class="no-select link-name"></span>');
      dom.linkIcon = $('<i class="fa fa-external-link-alt fa-lg link-icon"></i>');
      dom.editIcon = $('<i class="fa fa-edit fa-lg edit-icon"></i>');
      dom.wrapperDiv.append(dom.linkDiv);
      dom.linkDiv.append(dom.contentDiv);
      dom.contentDiv.append(dom.infoDiv);
      dom.contentDiv.append(dom.nameSpan).append(dom.linkIcon).append(dom.editIcon);
      var comp = this;
      dom.linkDiv.on("mouseup", function (e) {
        if (e.which !== 1) {
          // Only look for left mouse clicks!
          return false;
        }

        if (!comp.editing) {
          comp.goToLink();
        } else {
          comp.openForm();
        }
      });
      /* Create editing form */

      this.components.linkForm = new _LinkForm_js__WEBPACK_IMPORTED_MODULE_2__.default(this, this.src);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      if (!this.src) return;
      var dom = this.dom;
      var src = this.src;
      dom.nameSpan.html(src.description);
      this.wrapper.removeClass(["user-link", "staff-link", "template-link"]);

      switch (src.origin) {
        case _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_0__.default.Types.user:
          this.wrapper.addClass("user-link");
          break;

        case _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_0__.default.Types.staff:
          this.wrapper.addClass("staff-link");
          break;

        case _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_0__.default.Types.template:
          this.wrapper.addClass("template-link");
          break;
      }
    }
  }, {
    key: "goToLink",
    value: function goToLink() {
      (0,_utilities_request_js__WEBPACK_IMPORTED_MODULE_4__.redirect)(this.src.url);
    }
  }, {
    key: "openForm",
    value: function openForm() {
      this.components.linkForm.startEditing();
      this.components.linkForm.show();
    }
  }, {
    key: "closeForm",
    value: function closeForm() {
      this.components.linkForm.stopEditing();
      this.components.linkForm.hide();
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (this.src.origin != _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_0__.default.Types.template) {
        _get(_getPrototypeOf(LinkComponent.prototype), "startEditing", this).call(this, recurseDown, recurseUp);
      }
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      _get(_getPrototypeOf(LinkComponent.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      switch (id) {
        case this.components.linkForm.id:
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.Message.EDIT_LINK) {
            this.updateDOM();
            this.closeForm();
          } else if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.Message.DELETE_LINK) {
            this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.Message.DELETE_LINK);
            this.closeForm();
          } else if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.Message.CLOSE_MODAL) {
            this.closeForm();
          }

          return;
      }

      _get(_getPrototypeOf(LinkComponent.prototype), "handleMessage", this).call(this, id, msg, data);
    }
  }]);

  return LinkComponent;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__.default);



/***/ }),

/***/ "./frontend/src/classes/components/LinkForm.js":
/*!*****************************************************!*\
  !*** ./frontend/src/classes/components/LinkForm.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LinkForm)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _ModalComponent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModalComponent.js */ "./frontend/src/classes/components/ModalComponent.js");
/* harmony import */ var _LinkComponent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LinkComponent.js */ "./frontend/src/classes/components/LinkComponent.js");
/* harmony import */ var _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./field-components/TextInputComponent.js */ "./frontend/src/classes/components/field-components/TextInputComponent.js");
/* harmony import */ var _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data-sources/Link.js */ "./frontend/src/classes/data-sources/Link.js");
/* harmony import */ var _FormController_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../FormController.js */ "./frontend/src/classes/FormController.js");
/* harmony import */ var _utilities_asyncConfirm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utilities/asyncConfirm.js */ "./frontend/src/utilities/asyncConfirm.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










var LinkForm = /*#__PURE__*/function (_EditableComponent) {
  _inherits(LinkForm, _EditableComponent);

  var _super = _createSuper(LinkForm);

  function LinkForm(parent, src) {
    var _this;

    _classCallCheck(this, LinkForm);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, src);
    _this.name = "link-form";

    if (_this.src instanceof _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_5__.default) {
      _this.title = "Edit Link";
      _this.saveText = "Save";
      _this.closeText = "Close";
      _this.ctrl = new EditLinkController(_assertThisInitialized(_this));
    } else {
      _this.title = "Add Link";
      _this.saveText = "Save";
      _this.closeText = "Close";
      _this.ctrl = new AddLinkController(_assertThisInitialized(_this));
    } // Gatekeeper to prevent multiple submission
    // Form becomes active on show, inactive on hide
    // Can't submit unless active


    _this.active = false;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(LinkForm, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(LinkForm.prototype), "populate", this).call(this);

      var dom = this.dom;
      /*  Editable components */

      this.editableComponents.desc = new _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_4__.default(this, 'description', 'Description', undefined, "What is this link for?");
      this.editableComponents.url = new _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_4__.default(this, 'url', 'URL', undefined, "www.example.com");
      this.components.modal = new _ModalComponent_js__WEBPACK_IMPORTED_MODULE_2__.default(this.wrapper, this, this.title, this.saveText, this.closeText, "Delete", this.src instanceof _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_5__.default);
      this.wrapper.addClass('link-form');
      dom.modal = this.wrapper;
      dom.formBody = this.components.modal.getBodyDiv();
      dom.desc = this.editableComponents.desc.getWrapper();
      dom.url = this.editableComponents.url.getWrapper();
      dom.formBody.append(dom.desc).append('<br/>').append(dom.url);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(LinkForm.prototype), "updateDOM", this).call(this);

      if (this.src instanceof _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_5__.default) {
        this.editableComponents.desc.value = this.src.description;
        this.editableComponents.url.value = this.src.url;
      }

      this.editableComponents.desc.updateDOM();
      this.editableComponents.url.updateDOM();
    }
  }, {
    key: "show",
    value: function show() {
      if (!this.hasPopulated) {
        this.populate();
        this.updateDOM();
      }

      this.active = true;
      this.components.modal.show();

      if (!(this.src instanceof _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_5__.default)) {
        this.editableComponents.desc.value = "";
        this.editableComponents.url.value = "";
      }

      this.updateDOM();
    }
  }, {
    key: "hide",
    value: function hide() {
      this.active = false;
      this.components.modal.hide();
    }
  }, {
    key: "disableSubmit",
    value: function disableSubmit() {
      this.components.modal.disableSubmitButton();
      this.components.modal.disableDeleteButton();
    }
  }, {
    key: "enableSubmit",
    value: function enableSubmit() {
      this.components.modal.enableSubmitButton();
      this.components.modal.enableDeleteButton();
    }
  }, {
    key: "getFormData",
    value: function getFormData() {
      var ecs = this.editableComponents;
      return {
        name: ecs.desc.value,
        url: ecs.url.value
      };
    }
  }, {
    key: "showFeedback",
    value: function showFeedback(messages) {
      if (messages.url && messages.url[0] != _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Outcome.SUCCESS) {
        this.editableComponents.url.showErrorMessage(messages.url[1]);
      }

      if (messages.name && messages.name[0] != _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Outcome.SUCCESS) {
        this.editableComponents.name.showErrorMessage(messages.name[1]);
      }
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      switch (id) {
        case this.components.modal.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Message.CLOSE_MODAL) {
            this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Message.CLOSE_MODAL);
          } else if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Message.SUBMIT) {
            // This could be to a link controller (for updating) or a milestone or goal controller (for creating)
            if (this.active) {
              this.disableSubmit();
              var comp = this;
              this.ctrl.submit().then(function () {
                return comp.enableSubmit();
              });
            }
          } else if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Message.DELETE) {
            if (this.active) {
              var _comp = this;

              (0,_utilities_asyncConfirm_js__WEBPACK_IMPORTED_MODULE_7__.asyncConfirm)("Are you sure you want to delete this link?", function () {
                _comp.disableSubmit();

                _comp.ctrl["delete"]().then(function () {
                  return _comp.enableSubmit();
                });
              });
            }
          }

          return;
      }

      _get(_getPrototypeOf(LinkForm.prototype), "handleMessage", this).call(this, id, msg, data);
    }
  }]);

  return LinkForm;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__.default);



var EditLinkController = /*#__PURE__*/function (_FormController) {
  _inherits(EditLinkController, _FormController);

  var _super2 = _createSuper(EditLinkController);

  function EditLinkController() {
    _classCallCheck(this, EditLinkController);

    return _super2.apply(this, arguments);
  }

  _createClass(EditLinkController, [{
    key: "doSubmission",
    value: function () {
      var _doSubmission = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        var data, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                data = this.comp.getFormData();
                _context.next = 3;
                return this.src.update(data);

              case 3:
                resp = _context.sent;
                _context.t0 = resp.status;
                _context.next = _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.SUCCESS ? 7 : _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.FAILURE ? 11 : _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.EXCEPTION ? 11 : 13;
                break;

              case 7:
                // update Link src
                this.src.name = data.name;
                this.src.url = data.url;
                this.comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Message.EDIT_LINK);
                return _context.abrupt("break", 13);

              case 11:
                this.comp(showFeedback(resp.data));
                return _context.abrupt("break", 13);

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function doSubmission() {
        return _doSubmission.apply(this, arguments);
      }

      return doSubmission;
    }()
  }, {
    key: "doDeletion",
    value: function () {
      var _doDeletion = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.src["delete"]();

              case 2:
                resp = _context2.sent;
                _context2.t0 = resp.status;
                _context2.next = _context2.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.SUCCESS ? 6 : _context2.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.FAILURE ? 8 : _context2.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.EXCEPTION ? 8 : 10;
                break;

              case 6:
                // update Link src
                this.comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Message.DELETE_LINK);
                return _context2.abrupt("break", 10);

              case 8:
                this.comp(showFeedback(resp.data));
                return _context2.abrupt("break", 10);

              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function doDeletion() {
        return _doDeletion.apply(this, arguments);
      }

      return doDeletion;
    }()
  }]);

  return EditLinkController;
}(_FormController_js__WEBPACK_IMPORTED_MODULE_6__.default);

var AddLinkController = /*#__PURE__*/function (_FormController2) {
  _inherits(AddLinkController, _FormController2);

  var _super3 = _createSuper(AddLinkController);

  function AddLinkController() {
    _classCallCheck(this, AddLinkController);

    return _super3.apply(this, arguments);
  }

  _createClass(AddLinkController, [{
    key: "doSubmission",
    value: function () {
      var _doSubmission2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3() {
        var data, link, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                data = this.comp.getFormData();
                link = new _data_sources_Link_js__WEBPACK_IMPORTED_MODULE_5__.default(data, this.src);
                _context3.next = 4;
                return link.create();

              case 4:
                resp = _context3.sent;
                _context3.t0 = resp.status;
                _context3.next = _context3.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.SUCCESS ? 8 : _context3.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.FAILURE ? 11 : _context3.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Status.EXCEPTION ? 11 : 13;
                break;

              case 8:
                this.src.addLink(link);
                this.comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_8__.Message.ADD_LINK, link);
                return _context3.abrupt("break", 13);

              case 11:
                this.comp.showFeedback(resp.data);
                return _context3.abrupt("break", 13);

              case 13:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function doSubmission() {
        return _doSubmission2.apply(this, arguments);
      }

      return doSubmission;
    }()
  }]);

  return AddLinkController;
}(_FormController_js__WEBPACK_IMPORTED_MODULE_6__.default);

/***/ }),

/***/ "./frontend/src/classes/components/LinkSectionForGoal.js":
/*!***************************************************************!*\
  !*** ./frontend/src/classes/components/LinkSectionForGoal.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LinkSectionForGoal)
/* harmony export */ });
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _LinkComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LinkComponent.js */ "./frontend/src/classes/components/LinkComponent.js");
/* harmony import */ var _IconButton_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IconButton.js */ "./frontend/src/classes/components/IconButton.js");
/* harmony import */ var _LinkForm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LinkForm.js */ "./frontend/src/classes/components/LinkForm.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







var LinkSectionForGoal = /*#__PURE__*/function (_EditableComponent) {
  _inherits(LinkSectionForGoal, _EditableComponent);

  var _super = _createSuper(LinkSectionForGoal);

  function LinkSectionForGoal(parent, goal) {
    var _this;

    var placeholder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "Add resources to help with this goal";

    _classCallCheck(this, LinkSectionForGoal);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, goal);
    _this.name = "link-section-for-goal";

    _this.wrapper.addClass("empty");

    _this.placeholder = placeholder;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(LinkSectionForGoal, [{
    key: "addLinkComponent",
    value: function addLinkComponent(link) {
      this.wrapper.removeClass("empty");
      var comp = new _LinkComponent_js__WEBPACK_IMPORTED_MODULE_1__.default(this, link);
      var wrapper = comp.getWrapper();
      this.editableComponents[comp.id] = comp;

      if (this.editing) {
        comp.startEditing();
      }

      this.dom.linkBox.append(wrapper);
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(LinkSectionForGoal.prototype), "populate", this).call(this);

      var dom = this.dom;
      this.wrapper.addClass('link-section-for-goal');
      this.components.linkForm = new _LinkForm_js__WEBPACK_IMPORTED_MODULE_3__.default(this, this.src);
      this.editableComponents.addBtn = new _IconButton_js__WEBPACK_IMPORTED_MODULE_2__.default(this, 'add-button');
      dom.sectionWrapper = this.wrapper;
      dom.labelBox = $('<div class="field-label-box" style="padding-top:8px"></div>');
      dom.label = $('<span class="field-label">Links </span>');
      dom.labelBox.append(dom.label);
      dom.sectionWrapper.append(dom.labelBox);
      dom.addButton = this.editableComponents.addBtn.getWrapper();
      dom.linkBox = $('<div class="link-box"></div>');
      dom.sectionWrapper.append(dom.linkBox).append(dom.addButton);

      var _iterator = _createForOfIteratorHelper(this.src.links),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var link = _step.value;
          this.addLinkComponent(link);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      dom.placeholder = $('<div class="link-for-goal-placeholder"></div>');
      dom.placeholder.html(this.placeholder);
      var comp = this;
      dom.placeholder.on('click', function () {
        return comp.handleMessage("placeholder", _utilities_enums_js__WEBPACK_IMPORTED_MODULE_4__.Message.CLICK);
      });
      dom.linkBox.append(dom.placeholder);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(LinkSectionForGoal.prototype), "updateDOM", this).call(this);

      var dom = this.dom;
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      _get(_getPrototypeOf(LinkSectionForGoal.prototype), "startEditing", this).call(this, recurseDown, recurseUp);

      this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_4__.Message.START_EDITING);
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      _get(_getPrototypeOf(LinkSectionForGoal.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);

      this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_4__.Message.STOP_EDITING);
    }
  }, {
    key: "openForm",
    value: function openForm() {
      this.components.linkForm.startEditing();
      this.components.linkForm.show();
    }
  }, {
    key: "closeForm",
    value: function closeForm() {
      this.components.linkForm.stopEditing();
      this.components.linkForm.hide();
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      switch (id) {
        case this.editableComponents.addBtn.id:
        case "placeholder":
          // This is a weird antipattern, should be changed later as we change the placeholder
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_4__.Message.CLICK) {
            this.openForm();
          }

          return;

        case this.components.linkForm.id:
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_4__.Message.ADD_LINK) {
            this.addLinkComponent(data);
            this.closeForm();
          } else if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_4__.Message.CLOSE_MODAL) {
            this.closeForm();
          }

          return;
      }

      _get(_getPrototypeOf(LinkSectionForGoal.prototype), "handleMessage", this).call(this, id, msg, data);
    }
  }]);

  return LinkSectionForGoal;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/MilestoneAddForm.js":
/*!*************************************************************!*\
  !*** ./frontend/src/classes/components/MilestoneAddForm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MilestoneAddForm)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _ModalComponent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModalComponent.js */ "./frontend/src/classes/components/ModalComponent.js");
/* harmony import */ var _FormController_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../FormController.js */ "./frontend/src/classes/FormController.js");
/* harmony import */ var _field_components_CategorySelectComponent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./field-components/CategorySelectComponent.js */ "./frontend/src/classes/components/field-components/CategorySelectComponent.js");
/* harmony import */ var _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./field-components/TextInputComponent.js */ "./frontend/src/classes/components/field-components/TextInputComponent.js");
/* harmony import */ var _field_components_MeasureComponent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./field-components/MeasureComponent.js */ "./frontend/src/classes/components/field-components/MeasureComponent.js");
/* harmony import */ var _field_components_DateInputComponent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./field-components/DateInputComponent.js */ "./frontend/src/classes/components/field-components/DateInputComponent.js");
/* harmony import */ var _field_components_LabelledFieldWrapper_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./field-components/LabelledFieldWrapper.js */ "./frontend/src/classes/components/field-components/LabelledFieldWrapper.js");
/* harmony import */ var _field_components_DropdownComponent_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./field-components/DropdownComponent.js */ "./frontend/src/classes/components/field-components/DropdownComponent.js");
/* harmony import */ var _Slider_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Slider.js */ "./frontend/src/classes/components/Slider.js");
/* harmony import */ var _IconButton_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./IconButton.js */ "./frontend/src/classes/components/IconButton.js");
/* harmony import */ var _data_sources_Milestone_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../data-sources/Milestone.js */ "./frontend/src/classes/data-sources/Milestone.js");
/* harmony import */ var _utilities_object_fields_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utilities/object-fields.js */ "./frontend/src/utilities/object-fields.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _utilities_templateDataLists_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utilities/templateDataLists.js */ "./frontend/src/utilities/templateDataLists.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

















var MilestoneAddForm = /*#__PURE__*/function (_EditableComponent) {
  _inherits(MilestoneAddForm, _EditableComponent);

  var _super = _createSuper(MilestoneAddForm);

  function MilestoneAddForm(parent, src) {
    var _this;

    _classCallCheck(this, MilestoneAddForm);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, src);
    _this.name = "milestone-form";
    _this.title = "Add Milestone";
    _this.saveText = "Save";
    _this.closeText = "Close";
    _this.ctrl = new AddMilestoneController(_assertThisInitialized(_this), _this.src); // Gatekeeper to prevent multiple submission
    // Form becomes active on show, inactive on hide
    // Can't submit unless active

    _this.active = false;
    _this.usingTemplate = undefined;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(MilestoneAddForm, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(MilestoneAddForm.prototype), "populate", this).call(this);

      var dom = this.dom;
      this.editableComponents.categorySelect = new _field_components_CategorySelectComponent_js__WEBPACK_IMPORTED_MODULE_4__.default(this, 'category', undefined, undefined, true);
      this.editableComponents.subcategory = new _field_components_DropdownComponent_js__WEBPACK_IMPORTED_MODULE_9__.default(this, 'subcategory', "Subcategory: ", undefined, [], [], "Choose a subcategory", true);
      this.editableComponents.milestoneName = new _field_components_LabelledFieldWrapper_js__WEBPACK_IMPORTED_MODULE_8__.default(this, "milestone-name", "Milestone: ", true);
      this.editableComponents.template = new _field_components_DropdownComponent_js__WEBPACK_IMPORTED_MODULE_9__.default(this, 'template', undefined, undefined, [], [], "Choose a template", false);
      this.editableComponents.customMilestone = new _field_components_TextInputComponent_js__WEBPACK_IMPORTED_MODULE_5__.default(this, 'custom-milestone', undefined, undefined, "Write your own", false);
      this.editableComponents.endDate = new _field_components_DateInputComponent_js__WEBPACK_IMPORTED_MODULE_7__.default(this, 'end-date', "End Date", undefined, undefined, true);
      this.editableComponents.measures = new _field_components_MeasureComponent_js__WEBPACK_IMPORTED_MODULE_6__.default(this, 'measures', new _utilities_object_fields_js__WEBPACK_IMPORTED_MODULE_13__.MeasureMetadata('{ "type": "freeform" }'), undefined, undefined, true);
      this.components.modal = new _ModalComponent_js__WEBPACK_IMPORTED_MODULE_2__.default(this.wrapper, this, this.title, this.saveText, this.closeText);
      this.components.slider = new _Slider_js__WEBPACK_IMPORTED_MODULE_10__.default(this, 3);
      this.components.next0 = new _IconButton_js__WEBPACK_IMPORTED_MODULE_11__.default(this, 'next-button');
      this.components.next1 = new _IconButton_js__WEBPACK_IMPORTED_MODULE_11__.default(this, 'next-button');
      this.components.prev1 = new _IconButton_js__WEBPACK_IMPORTED_MODULE_11__.default(this, 'prev-button');
      this.components.prev2 = new _IconButton_js__WEBPACK_IMPORTED_MODULE_11__.default(this, 'prev-button');
      this.wrapper.addClass('milestone-add-form');
      dom.modal = this.wrapper;
      dom.formBody = this.components.modal.getBodyDiv();
      dom.slider = this.components.slider.getWrapper(); // Forward/back buttons

      dom.next0 = this.components.next0.getWrapper();
      dom.next1 = this.components.next1.getWrapper();
      dom.next0.css("float", "right");
      dom.next1.css("float", "right");
      dom.prev1 = this.components.prev1.getWrapper();
      dom.prev2 = this.components.prev2.getWrapper();
      dom.prev1.css("float", "left");
      dom.prev2.css("float", "left");
      dom.navHolder0 = $('<div style="width: 100%;"></div>');
      dom.navHolder1 = $('<div style="width: 100%"></div>');
      dom.navHolder2 = $('<div style="width: 100%"></div>');
      dom.formBody.append(dom.slider); // first slide: Choose a category

      var slide0 = this.components.slider.getSlideDiv(0);
      slide0.css({
        'display': 'flex',
        'flex-direction': 'column'
      });
      dom.slide0Content = $('<div></div>').css({
        "display": "flex",
        "justify-content": "space-around",
        "flex-direction": "column",
        "flex-grow": "1"
      });
      dom.categorySelect = this.editableComponents.categorySelect.getWrapper();
      dom.slide0Content.append(dom.categorySelect);
      slide0.append(dom.slide0Content);
      slide0.append(dom.navHolder0);
      dom.navHolder0.append(dom.next0); // second slide: Choose subcategory and milestone name

      var slide1 = this.components.slider.getSlideDiv(1);
      slide1.css({
        'display': 'flex',
        'flex-direction': 'column'
      });
      dom.slide1Content = $('<div></div>').css({
        "display": "flex",
        "justify-content": "space-around",
        "flex-direction": "column",
        "flex-grow": "1"
      });
      dom.subcategory = this.editableComponents.subcategory.getWrapper();
      dom.milestoneName = this.editableComponents.milestoneName.getWrapper();
      dom.milestoneNameBody = this.editableComponents.milestoneName.getMainDiv();
      dom.milestoneNameBody.css({
        "flex-direction": "column",
        "max-width": "100%"
      });
      dom.template = this.editableComponents.template.getWrapper();
      dom.orSpan = $('<span>&bull; or &bull;</span>');
      dom.customMilestone = this.editableComponents.customMilestone.getWrapper();
      dom.milestoneNameBody.append(dom.template).append(dom.orSpan).append(dom.customMilestone);
      dom.slide1Content.append(dom.subcategory).append(dom.milestoneName);
      slide1.append(dom.slide1Content);
      slide1.append(dom.navHolder1);
      dom.navHolder1.append(dom.prev1).append(dom.next1); // third slide: Choose measures and end date

      var slide2 = this.components.slider.getSlideDiv(2);
      slide2.css({
        'display': 'flex',
        'flex-direction': 'column'
      });
      dom.slide2Content = $('<div></div>').css({
        "display": "flex",
        "justify-content": "space-around",
        "flex-direction": "column",
        "flex-grow": "1"
      });
      dom.measures = this.editableComponents.measures.getWrapper();
      dom.endDate = this.editableComponents.endDate.getWrapper();
      dom.slide2Content.append(dom.measures).append(dom.endDate);
      slide2.append(dom.slide2Content);
      slide2.append(dom.navHolder2);
      dom.navHolder2.append(dom.prev2); //const slider = this.components.slider;
      //setInterval(() => slider.goToSlide((slider.currentSlide + 1) % 3), 2000);
    }
  }, {
    key: "validateForm",
    value: function validateForm() {
      return this.validateCategory() && this.validateSubcategory() && this.validateMilestoneName();
    }
  }, {
    key: "validateCategory",
    value: function validateCategory() {
      if (this.editableComponents.categorySelect.value) {
        return true;
      } else {
        this.editableComponents.categorySelect.showErrorMessage("Please choose a category.");
        return false;
      }
    }
  }, {
    key: "validateSubcategory",
    value: function validateSubcategory() {
      if (this.editableComponents.subcategory.value !== undefined) {
        return true;
      } else {
        this.editableComponents.subcategory.showErrorMessage("Please choose a subcategory.");
        return false;
      }
    }
  }, {
    key: "validateMilestoneName",
    value: function validateMilestoneName() {
      if (this.usingTemplate && this.editableComponents.template.value !== undefined) {
        return true;
      } else if (!this.usingTemplate && this.editableComponents.customMilestone.value !== "") {
        return true;
      } else {
        this.editableComponents.milestoneName.showErrorMessage("Choose a name for your milestone.");
        return false;
      }
    }
  }, {
    key: "show",
    value: function show() {
      this.active = true;
      this.enableSubmit();
      this.startEditing();
      this.editableComponents.categorySelect.value = undefined;
      this.components.modal.show();
      this.components.slider.snapToSlide(0);
      this.components.modal.hideSubmitButton();
      this.updateDOM();
    }
  }, {
    key: "hide",
    value: function hide() {
      this.active = false;
      this.components.modal.hide();
    }
  }, {
    key: "disableSubmit",
    value: function disableSubmit() {
      this.components.modal.disableSubmitButton();
    }
  }, {
    key: "enableSubmit",
    value: function enableSubmit() {
      this.components.modal.enableSubmitButton();
    }
  }, {
    key: "updateMeasuresField",
    value: function updateMeasuresField() {
      if (this.usingTemplate) {
        var cat = this.editableComponents.categorySelect.value;
        var subcat = this.editableComponents.subcategory.value;
        var templateId = this.editableComponents.template.value;

        if (cat && subcat && templateId) {
          var chosenTemplate;
          chosenTemplate = _utilities_templateDataLists_js__WEBPACK_IMPORTED_MODULE_15__.TemplateMilestone[cat][subcat][templateId];

          if (chosenTemplate.measures) {
            var m = chosenTemplate.measures;
            this.editableComponents.measures.metadata = new _utilities_object_fields_js__WEBPACK_IMPORTED_MODULE_13__.MeasureMetadata(m.type, m.startLabel, m.endLabel, m.startOptions, m.endOptions, m.defaultStart, m.defaultEnd, m.placeholderStartValue, m.placeholderEndValue, m.unit);
          } else {
            this.editableComponents.measures.metadata = new _utilities_object_fields_js__WEBPACK_IMPORTED_MODULE_13__.MeasureMetadata(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.MeasureType.NONE);
          }
        } else {
          this.editableComponents.measures.metadata = new _utilities_object_fields_js__WEBPACK_IMPORTED_MODULE_13__.MeasureMetadata(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.MeasureType.NONE);
        }
      } else {
        this.editableComponents.measures.metadata = new _utilities_object_fields_js__WEBPACK_IMPORTED_MODULE_13__.MeasureMetadata(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.MeasureType.FREEFORM);
      }

      this.editableComponents.measures.populate();
      this.editableComponents.measures.value = {
        start_measure: "NULL",
        end_measure: "NULL"
      };
      this.editableComponents.measures.updateDOM();
      this.editableComponents.measures.startEditing();
    }
  }, {
    key: "getFormDataAsMilestone",
    value: function getFormDataAsMilestone() {
      var ecs = this.editableComponents;
      var raw_data = {
        category: ecs.categorySelect.value,
        subcategory: ecs.subcategory.text,
        name: this.usingTemplate ? ecs.template.text : ecs.customMilestone.value
      };

      if (this.usingTemplate) {
        raw_data.template_id = ecs.template.value;
      }

      var milestone = _data_sources_Milestone_js__WEBPACK_IMPORTED_MODULE_12__.default.make(raw_data);
      milestone.measure_data = ecs.measures.metadata;
      milestone.start_measure = ecs.measures.value.start_measure;
      milestone.end_measure = ecs.measures.value.end_measure;
      milestone.deadline = ecs.endDate.value;
      return milestone;
    }
  }, {
    key: "getFormData",
    value: function getFormData() {
      var ecs = this.editableComponents;
      return {
        category: ecs.categorySelect.value,
        subcategory: ecs.subcategory.text,
        name: this.usingTemplate ? ecs.template.text : ecs.customMilestone.value,
        measure_data: ecs.measures.metadata.toJSON(),
        start_measure: ecs.measures.value.start_measure,
        end_measure: ecs.measures.value.end_measure,
        deadline: ecs.endDate.value
      };
    }
  }, {
    key: "slideTo",
    value: function slideTo(slideNum) {
      /*
       * Sends the slider to the right slide and updates the form accordingly.
       */
      var currentSlide = this.components.slider.currentSlide;
      if (slideNum == currentSlide) return;

      switch (slideNum) {
        case 0:
          this.components.slider.goToSlide(0);
          this.components.modal.hideSubmitButton();
          return;

        case 1:
          if (currentSlide == 0) {
            if (this.validateCategory()) {
              this.editableComponents.subcategory.clearMessage();
              this.editableComponents.milestoneName.clearMessage();
              this.editableComponents.template.ungreyOut();
              this.editableComponents.customMilestone.ungreyOut();
            } else {
              break;
            }
          }

          this.components.slider.goToSlide(1);
          this.components.modal.hideSubmitButton();
          break;

        case 2:
          if (this.validateSubcategory() && this.validateMilestoneName()) {
            var modal = this.components.modal;
            this.components.slider.goToSlide(2, function () {
              modal.showSubmitButton();
            });
          }

          break;
      }
    }
  }, {
    key: "showFeedback",
    value: function showFeedback(messages) {
      console.log(messages);
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      var _this2 = this;

      switch (id) {
        case this.components.modal.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CLOSE_MODAL) {
            this.hide();
          } else if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.SUBMIT) {
            if (this.active) {
              this.disableSubmit();
              var comp = this;
              this.ctrl.submit().then(function () {
                return comp.enableSubmit();
              });
            }
          }

          return;

        case this.editableComponents.categorySelect.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CHANGE) {
            // Category has been rechosen/unchosen
            var cat = this.editableComponents.categorySelect.value;
            var options, optionValues;

            if (cat) {
              options = Object.values(_utilities_templateDataLists_js__WEBPACK_IMPORTED_MODULE_15__.Subcategory[cat]).map(function (x) {
                return x.name;
              });
              optionValues = Object.values(_utilities_templateDataLists_js__WEBPACK_IMPORTED_MODULE_15__.Subcategory[cat]).map(function (x) {
                return x.id;
              });
            } else {
              options = [];
              optionValues = [];
            }

            this.editableComponents.subcategory.setOptions(options, optionValues);
            this.editableComponents.subcategory.value = undefined;
            this.editableComponents.template.setOptions([], []);
            this.editableComponents.template.value = undefined; // Automatically advance to the next slide, after a delay

            setTimeout(function () {
              return _this2.slideTo(1);
            }, 500);
          }

          return;

        case this.editableComponents.subcategory.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CHANGE) {
            // Subcategory has been rechosen/unchosen
            var _cat = this.editableComponents.categorySelect.value;
            var subcat = this.editableComponents.subcategory.value;

            var _options, _optionValues;

            if (_cat && subcat) {
              _options = Object.values(_utilities_templateDataLists_js__WEBPACK_IMPORTED_MODULE_15__.TemplateMilestone[_cat][subcat]).map(function (x) {
                return x.name;
              });
              _optionValues = Object.values(_utilities_templateDataLists_js__WEBPACK_IMPORTED_MODULE_15__.TemplateMilestone[_cat][subcat]).map(function (x) {
                return x.id;
              });
            } else {
              _options = [];
              _optionValues = [];
            }

            this.editableComponents.template.setOptions(_options, _optionValues);
            this.editableComponents.template.value = undefined;
            this.editableComponents.template.populate();
            this.editableComponents.template.updateDOM();
            this.usingTemplate = undefined; // rerender the measure data field

            this.updateMeasuresField();
          }

          return;

        case this.editableComponents.template.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.FOCUS) {
            // template has been touched
            this.usingTemplate = true;
            this.editableComponents.template.ungreyOut();
            this.editableComponents.customMilestone.greyOut();
            this.editableComponents.milestoneName.clearMessage();
          } else if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CHANGE) {
            this.updateMeasuresField();
          }

          return;

        case this.editableComponents.customMilestone.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.FOCUS) {
            // custom milestone name has been touched
            this.usingTemplate = false;
            this.editableComponents.template.greyOut();
            this.editableComponents.customMilestone.ungreyOut();
            this.editableComponents.milestoneName.clearMessage();
          }

          return;

        case this.components.next0.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CLICK) {
            // Trying to go from category selection (slide 0) to next slide (slide 1)
            this.slideTo(1);
          }

          return;

        case this.components.next1.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CLICK) {
            // Trying to go from milestone name/subcat slide (slide 1) to final slide (slide 2)
            this.slideTo(2);
          }

          return;

        case this.components.prev1.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CLICK) {
            this.slideTo(0);
          }

          return;

        case this.components.prev2.id:
          if (msg === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CLICK) {
            this.slideTo(1);
          }

          return;
      }

      _get(_getPrototypeOf(MilestoneAddForm.prototype), "handleMessage", this).call(this, id, msg, data);
    }
  }]);

  return MilestoneAddForm;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__.default);



var AddMilestoneController = /*#__PURE__*/function (_FormController) {
  _inherits(AddMilestoneController, _FormController);

  var _super2 = _createSuper(AddMilestoneController);

  function AddMilestoneController() {
    _classCallCheck(this, AddMilestoneController);

    return _super2.apply(this, arguments);
  }

  _createClass(AddMilestoneController, [{
    key: "doSubmission",
    value: function () {
      var _doSubmission = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        var milestone, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.comp.validateForm()) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return");

              case 2:
                milestone = this.comp.getFormDataAsMilestone();
                _context.next = 5;
                return milestone.create();

              case 5:
                resp = _context.sent;
                _context.t0 = resp.status;
                _context.next = _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Status.SUCCESS ? 9 : _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Status.FAILURE ? 12 : _context.t0 === _utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Status.EXCEPTION ? 12 : 14;
                break;

              case 9:
                this.comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_14__.Message.CREATED_MILESTONE, milestone);
                this.comp.hide();
                return _context.abrupt("break", 14);

              case 12:
                this.comp.showFeedback(resp.data);
                return _context.abrupt("break", 14);

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function doSubmission() {
        return _doSubmission.apply(this, arguments);
      }

      return doSubmission;
    }()
  }]);

  return AddMilestoneController;
}(_FormController_js__WEBPACK_IMPORTED_MODULE_3__.default);

/***/ }),

/***/ "./frontend/src/classes/components/MilestoneComponent.js":
/*!***************************************************************!*\
  !*** ./frontend/src/classes/components/MilestoneComponent.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MilestoneComponent)
/* harmony export */ });
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _Accordion_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Accordion.js */ "./frontend/src/classes/components/Accordion.js");
/* harmony import */ var _IconComponent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IconComponent.js */ "./frontend/src/classes/components/IconComponent.js");
/* harmony import */ var _IconButton_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./IconButton.js */ "./frontend/src/classes/components/IconButton.js");
/* harmony import */ var _LinkSectionForGoal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LinkSectionForGoal.js */ "./frontend/src/classes/components/LinkSectionForGoal.js");
/* harmony import */ var _field_components_TextAreaComponent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./field-components/TextAreaComponent.js */ "./frontend/src/classes/components/field-components/TextAreaComponent.js");
/* harmony import */ var _StaticTextField_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./StaticTextField.js */ "./frontend/src/classes/components/StaticTextField.js");
/* harmony import */ var _utilities_time_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utilities/time.js */ "./frontend/src/utilities/time.js");
/* harmony import */ var _utilities_request_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utilities/request.js */ "./frontend/src/utilities/request.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }












var MilestoneComponent = /*#__PURE__*/function (_EditableComponent) {
  _inherits(MilestoneComponent, _EditableComponent);

  var _super = _createSuper(MilestoneComponent);

  function MilestoneComponent(parent, milestone) {
    var _this;

    _classCallCheck(this, MilestoneComponent);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, milestone);
    _this.name = "milestone-component";

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(MilestoneComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(MilestoneComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      var src = this.src;
      /* Editable Components */

      this.editableComponents.links = new _LinkSectionForGoal_js__WEBPACK_IMPORTED_MODULE_4__.default(this, this.src);
      this.editableComponents.description = new _field_components_TextAreaComponent_js__WEBPACK_IMPORTED_MODULE_5__.default(this, 'description', 'Description', '', "", false);
      /* Non-editable components */

      this.components.icon = new _IconComponent_js__WEBPACK_IMPORTED_MODULE_2__.default(this, this.src.category, true);
      this.components.accordionComponent = new _Accordion_js__WEBPACK_IMPORTED_MODULE_1__.default(this);
      this.components.viewButton = new _IconButton_js__WEBPACK_IMPORTED_MODULE_3__.default(this, 'next-button');
      this.components.status = new _StaticTextField_js__WEBPACK_IMPORTED_MODULE_6__.default(this, "Status: ", this.src.completed ? "Complete" : "In Progress");
      this.components.dueDate = new _StaticTextField_js__WEBPACK_IMPORTED_MODULE_6__.default(this, "Due Date: ", (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_7__.describeDatetimeAbsolute)(this.src.deadline));
      dom.description = this.editableComponents.description.getWrapper();
      dom.links = this.editableComponents.links.getWrapper();
      dom.categoryIcon = this.components.icon.getWrapper();
      dom.viewButton = this.components.viewButton.getWrapper();
      dom.accordion = this.components.accordionComponent.getWrapper();
      dom.status = this.components.status.getWrapper();
      dom.dueDate = this.components.dueDate.getWrapper();
      dom.accordionContent = this.components.accordionComponent.getContentDiv();
      this.wrapper.addClass('milestone-wrapper js-hoverable');
      dom.milestoneDiv = this.wrapper;
      dom.headerDiv = $('<div class="milestone-header"></div>');
      dom.contentDiv = $('<div class="milestone-content"></div>');
      dom.infoDiv = $('<div class="milestone-info"></div>');
      dom.nameDiv = $('<div class="milestone-name js-fit-text"></div>');
      dom.nameSpan = $('<span maxfontsize="24" minfontsize="16"></span>');
      dom.accordionMain = $('<div class="accordion-main"></div>');
      dom.accordionForm = $('<div class ="milestone-details"></div>'); //dom.accordionBar = $()

      dom.milestoneDiv.append(dom.headerDiv);
      dom.headerDiv.append(dom.contentDiv);
      dom.contentDiv.append(dom.infoDiv);
      dom.infoDiv.append(dom.categoryIcon).append(dom.nameDiv);
      dom.nameDiv.append(dom.nameSpan);
      dom.contentDiv.append(dom.viewButton);
      dom.milestoneDiv.append(dom.accordion);
      dom.accordionContent.append(dom.accordionMain);
      dom.accordionMain.append(dom.status).append(dom.dueDate).append(dom.accordionForm); //dom.accordionForm.append(dom.description)

      dom.accordionForm.append(dom.links);
      var comp = this;
      this.dom.infoDiv.on("click", function () {
        return comp.toggleAccordion();
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(MilestoneComponent.prototype), "updateDOM", this).call(this);

      var src = this.src;
      this.components.status.value = src.completed ? "Complete" : "In Progress";
      this.components.status.updateDOM();

      if (this.src.deadline.invalid) {
        this.components.dueDate.getWrapper().hide();
      } else {
        this.components.dueDate.getWrapper().show();
        this.components.dueDate.value = (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_7__.describeDatetimeAbsolute)(this.src.deadline);
      }

      this.components.dueDate.updateDOM();
      this.dom.nameSpan.html(src.name);
    }
  }, {
    key: "toggleAccordion",
    value: function toggleAccordion() {
      if (this.components.accordionComponent.isOpen) {
        this.closeAccordion();
      } else {
        this.openAccordion();
      }
    }
  }, {
    key: "openAccordion",
    value: function openAccordion() {
      this.components.accordionComponent.open();
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion() {
      this.stopEditing();
      this.components.accordionComponent.close();
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg) {
      if (id == this.components.viewButton.id && msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_9__.Message.CLICK) {
        (0,_utilities_request_js__WEBPACK_IMPORTED_MODULE_8__.redirect)({
          page: _utilities_enums_js__WEBPACK_IMPORTED_MODULE_9__.Pages.VIEW_MILESTONE,
          ruko_id: this.src.ruko_id
        });
      }
    }
  }]);

  return MilestoneComponent;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/MilestoneSection.js":
/*!*************************************************************!*\
  !*** ./frontend/src/classes/components/MilestoneSection.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MilestoneSection)
/* harmony export */ });
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _MilestoneComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MilestoneComponent.js */ "./frontend/src/classes/components/MilestoneComponent.js");
/* harmony import */ var _MilestoneAddForm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MilestoneAddForm.js */ "./frontend/src/classes/components/MilestoneAddForm.js");
/* harmony import */ var _Accordion_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Accordion.js */ "./frontend/src/classes/components/Accordion.js");
/* harmony import */ var _IconButton_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./IconButton.js */ "./frontend/src/classes/components/IconButton.js");
/* harmony import */ var _data_sources_User_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data-sources/User.js */ "./frontend/src/classes/data-sources/User.js");
/* harmony import */ var _utilities_request_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utilities/request.js */ "./frontend/src/utilities/request.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










var MilestoneSection = /*#__PURE__*/function (_EditableComponent) {
  _inherits(MilestoneSection, _EditableComponent);

  var _super = _createSuper(MilestoneSection);

  function MilestoneSection(parent, user) {
    var _this;

    var title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "Milestones";
    var showButtons = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
    var placeholder = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "No milestones to display";

    _classCallCheck(this, MilestoneSection);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, user);
    _this.name = "milestone-section";
    _this.title = title;
    _this.showButtons = _this.src.id == _data_sources_User_js__WEBPACK_IMPORTED_MODULE_5__.default.currentUserId ? showButtons : false;
    _this.placeholder = placeholder;

    _this.wrapper.addClass("empty");

    _this.numberMilestones = 0;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(MilestoneSection, [{
    key: "addMilestoneComponent",
    value: function addMilestoneComponent(milestone) {
      this.wrapper.removeClass("empty");
      var comp = new _MilestoneComponent_js__WEBPACK_IMPORTED_MODULE_1__.default(this, milestone);
      var wrapper = comp.getWrapper();
      this.components[comp.id] = comp;
      this.dom.milestoneBox.append(wrapper);
      this.numberMilestones += 1;
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(MilestoneSection.prototype), "populate", this).call(this);

      var dom = this.dom;
      this.wrapper.addClass("milestone-section");
      this.editableComponents.addMilestoneForm = new _MilestoneAddForm_js__WEBPACK_IMPORTED_MODULE_2__.default(this, this.src);
      this.editableComponents.addBtn = new _IconButton_js__WEBPACK_IMPORTED_MODULE_4__.default(this, 'add-button');
      this.components.accordionComponent = new _Accordion_js__WEBPACK_IMPORTED_MODULE_3__.default(this, true, 1200, 1200);
      dom.sectionWrapper = this.wrapper;
      dom.titleDiv = $('<div class="ms-section-title"></div>');
      dom.title = $('<h4></h4>').html(this.title);
      dom.accordion = this.components.accordionComponent.getWrapper();
      dom.accordionContent = this.components.accordionComponent.getContentDiv();
      dom.openAccordionButton = $('<div class="accordionOpenArrow"><div></div></div>');
      dom.milestoneBox = $('<div class="milestone-box"></div>');
      dom.addButton = this.editableComponents.addBtn.getWrapper();
      dom.titleDiv.append(dom.title);

      if (this.showButtons) {
        dom.sectionWrapper.append(dom.addButton);
      }

      dom.sectionWrapper.append(dom.titleDiv).append(dom.openAccordionButton).append(dom.accordion);
      dom.accordionContent.append(dom.milestoneBox);
      dom.placeholder = $('<div class="milestone-placeholder"></div>');
      dom.placeholder.html(this.placeholder);
      var comp = this;
      dom.placeholder.on('click', function () {
        return comp.handleMessage("placeholder", _utilities_enums_js__WEBPACK_IMPORTED_MODULE_7__.Message.CLICK);
      });
      dom.milestoneBox.append(dom.placeholder);
      dom.titleDiv.on("click", function () {
        if (comp.numberMilestones >= 2) {
          comp.toggleAccordion();
        }
      });
      dom.openAccordionButton.on("click", function () {
        if (comp.numberMilestones >= 2) {
          comp.toggleAccordion();
        }
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(MilestoneSection.prototype), "updateDOM", this).call(this);

      var dom = this.dom;
    }
  }, {
    key: "open",
    value: function open() {
      this.components.goalForm.show();
      this.components.goalForm.startEditing();
    }
  }, {
    key: "close",
    value: function close() {
      this.components.goalForm.stopEditing();
      this.components.goalForm.hide();
    }
  }, {
    key: "openForm",
    value: function openForm() {
      this.components.goalForm.show();
      this.components.goalForm.startEditing();
    }
  }, {
    key: "closeForm",
    value: function closeForm() {
      this.components.goalForm.stopEditing();
      this.components.goalForm.hide();
    }
  }, {
    key: "toggleAccordion",
    value: function toggleAccordion() {
      if (this.components.accordionComponent.isOpen) {
        this.closeAccordion();
      } else {
        this.openAccordion();
      }
    }
  }, {
    key: "openAccordion",
    value: function openAccordion() {
      this.components.accordionComponent.open();
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion() {
      this.stopEditing();

      if (this.numberMilestones >= 2) {
        this.components.accordionComponent.close();
      }
    }
  }, {
    key: "snapOpenAccordion",
    value: function snapOpenAccordion() {
      this.components.accordionComponent.snapOpen();
    }
  }, {
    key: "snapClosedAccordion",
    value: function snapClosedAccordion() {
      this.stopEditing();

      if (this.numberMilestones >= 2) {
        this.components.accordionComponent.snapClosed();
      }
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      if (this.hasPopulated) {
        switch (id) {
          case this.editableComponents.addBtn.id:
          case "placeholder":
            // This is a weird antipattern, should be changed later as we change the placeholder
            if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_7__.Message.CLICK) {
              this.editableComponents.addMilestoneForm.show();
            }

            return;

          case this.editableComponents.addMilestoneForm.id:
            if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_7__.Message.CREATED_MILESTONE) {
              this.addMilestoneComponent(data);
              (0,_utilities_request_js__WEBPACK_IMPORTED_MODULE_6__.redirect)({
                page: _utilities_enums_js__WEBPACK_IMPORTED_MODULE_7__.Pages.VIEW_MILESTONE,
                ruko_id: data.ruko_id
              });
            }

            return;
        }
      }
    }
  }]);

  return MilestoneSection;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/ModalComponent.js":
/*!***********************************************************!*\
  !*** ./frontend/src/classes/components/ModalComponent.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ModalComponent)
/* harmony export */ });
/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component.js */ "./frontend/src/classes/components/Component.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




var ModalComponent = /*#__PURE__*/function (_Component) {
  _inherits(ModalComponent, _Component);

  var _super = _createSuper(ModalComponent);

  function ModalComponent(wrapper, parent, title) {
    var _this;

    var saveText = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "Save";
    var closeText = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "Close";
    var deleteText = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "Delete";
    var includeDelete = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;

    _classCallCheck(this, ModalComponent);

    _this = _super.call(this, wrapper, parent);
    _this.name = "modal";
    _this.title = title;
    _this.closeText = closeText;
    _this.deleteText = deleteText;
    _this.saveText = saveText;
    _this.includeDelete = includeDelete;

    _this.populate();

    _this.updateDOM();

    $('body').append(wrapper);
    return _this;
  }

  _createClass(ModalComponent, [{
    key: "populate",
    value: function populate() {
      this.wrapper.empty();
      this.wrapper.removeClass().addClass('modal fade modal-overflow ld-modal');
      this.wrapper.attr({
        'data-backdrop': 'static',
        'data-keyboard': 'false',
        'tabindex': '-1',
        'role': 'dialog'
      });
      var dom = this.dom;
      dom.modal = this.wrapper;
      dom.dialog = $('<div class="modal-dialog" role="document" style="margin-bottom: 40px"></div>');
      dom.content = $('<div class="modal-content"></div>');
      dom.header = $('<div class="modal-header"></div>');
      dom.title = $('<h5 class="modal-title"></h5>');
      dom.body = $('<div class="modal-body"></div>');
      dom.footer = $('<div class="modal-footer"></div>');
      var comp = this;
      dom.closeBtn = $('<button type="button" class="btn btn-secondary"></button>').html(this.closeText);
      dom.closeBtn.on('click', function () {
        return comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_1__.Message.CLOSE_MODAL);
      });
      dom.submitBtn = $('<button type="button" class="btn btn-primary"></button>').html(this.saveText);
      dom.submitBtn.on('click', function () {
        return comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_1__.Message.SUBMIT);
      });

      if (this.includeDelete) {
        dom.deleteBtn = $('<button type="button" class="btn btn-warning"></button>').html(this.deleteText);
        dom.deleteBtn.on('click', function () {
          return comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_1__.Message.DELETE);
        });
      }

      dom.modal.append(dom.dialog);
      dom.dialog.append(dom.content);
      dom.content.append(dom.header).append(dom.body).append(dom.footer);
      dom.header.append(dom.title);
      dom.footer.append(dom.closeBtn);

      if (this.includeDelete) {
        dom.footer.append(dom.deleteBtn);
      }

      dom.footer.append(dom.submitBtn);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(ModalComponent.prototype), "updateDOM", this).call(this);

      var dom = this.dom;
      dom.title.html(this.title);
      dom.closeBtn.html(this.closeText);
      dom.submitBtn.html(this.saveText);
    }
  }, {
    key: "hideSubmitButton",
    value: function hideSubmitButton() {
      this.dom.submitBtn.hide();
    }
  }, {
    key: "showSubmitButton",
    value: function showSubmitButton() {
      this.dom.submitBtn.show();
    }
  }, {
    key: "disableSubmitButton",
    value: function disableSubmitButton() {
      this.dom.submitBtn.prop('disabled', true);
    }
  }, {
    key: "enableSubmitButton",
    value: function enableSubmitButton() {
      this.dom.submitBtn.prop('disabled', false);
    }
  }, {
    key: "disableDeleteButton",
    value: function disableDeleteButton() {
      if (this.includeDelete) {
        this.dom.deleteBtn.prop('disabled', true);
      }
    }
  }, {
    key: "enableDeleteButton",
    value: function enableDeleteButton() {
      if (this.includeDelete) {
        this.dom.deleteBtn.prop('disabled', false);
      }
    }
  }, {
    key: "getBodyDiv",
    value: function getBodyDiv() {
      return this.dom.body;
    }
  }, {
    key: "show",
    value: function show() {
      this.dom.modal.modal('show');
    }
  }, {
    key: "hide",
    value: function hide() {
      this.dom.modal.modal('hide');
    }
  }]);

  return ModalComponent;
}(_Component_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/Slider.js":
/*!***************************************************!*\
  !*** ./frontend/src/classes/components/Slider.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Slider)
/* harmony export */ });
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ "./frontend/src/classes/components/Component.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var Slider = /*#__PURE__*/function (_Component) {
  _inherits(Slider, _Component);

  var _super = _createSuper(Slider);

  function Slider(parent) {
    var _this;

    var numSlides = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
    var startingSlide = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 500;

    _classCallCheck(this, Slider);

    var wrapper = $('<div class="slider-wrapper"></div>');
    _this = _super.call(this, wrapper, parent);
    _this.duration = duration;
    _this.numSlides = numSlides;
    _this.currentSlide = startingSlide;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(Slider, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(Slider.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.slider = $('<div class="slider" style="width: ' + 100 * this.numSlides + '%"></div>');
      dom.slides = [];

      for (var i = 0; i < this.numSlides; i++) {
        var slide = $('<div class="slide" style="width: ' + 100 / this.numSlides + '%"></div>');
        dom.slides.push(slide);
        dom.slider.append(slide);
      }

      dom.wrapper.append(dom.slider);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(Slider.prototype), "updateDOM", this).call(this);

      this.snapToSlide(this.currentSlide);
    }
  }, {
    key: "snapToSlide",
    value: function snapToSlide(n, callback) {
      this.dom.slider.css({
        "transition-duration": 0 + "ms",
        "left": "-" + 100 * n + "%"
      });

      if (callback !== undefined) {
        callback();
      }

      this.currentSlide = n;
    }
  }, {
    key: "goToSlide",
    value: function goToSlide(n, callback) {
      if (this.dom.slider.hasClass('sliding')) return;
      var diff = Math.abs(this.currentSlide - n);

      if (diff != 0) {
        var transitionDuration = this.duration * diff;
        var slider = this.dom.slider;
        slider.css({
          "transition-duration": transitionDuration + "ms",
          "left": "-" + 100 * n + "%"
        });
        slider.addClass('sliding');
        setTimeout(function () {
          slider.removeClass('sliding');

          if (callback !== undefined) {
            callback();
          }
        }, transitionDuration);
        this.currentSlide = n;
      }
    }
  }, {
    key: "getSlideDiv",
    value: function getSlideDiv(n) {
      return this.dom.slides[n];
    }
  }]);

  return Slider;
}(_Component__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/StaticTextField.js":
/*!************************************************************!*\
  !*** ./frontend/src/classes/components/StaticTextField.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ StaticTextField)
/* harmony export */ });
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ "./frontend/src/classes/components/Component.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var StaticTextField = /*#__PURE__*/function (_Component) {
  _inherits(StaticTextField, _Component);

  var _super = _createSuper(StaticTextField);

  function StaticTextField(parent, label, value) {
    var _this;

    _classCallCheck(this, StaticTextField);

    var wrapper = $('<div class="text-input-wrapper"></div>');
    _this = _super.call(this, wrapper, parent);
    _this.name = "static-text";
    _this.label = label;
    _this.value = value;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(StaticTextField, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(StaticTextField.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.display = $('<span class="text-input-display"></span>');

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.display);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(StaticTextField.prototype), "updateDOM", this).call(this);

      this.dom.display.html(this.value);
    }
  }]);

  return StaticTextField;
}(_Component__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/TemplateGoalSection.js":
/*!****************************************************************!*\
  !*** ./frontend/src/classes/components/TemplateGoalSection.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TemplateGoalSection)
/* harmony export */ });
/* harmony import */ var _Component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Component */ "./frontend/src/classes/components/Component.js");
/* harmony import */ var _utilities_enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/enums */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




var TemplateGoalSection = /*#__PURE__*/function (_Component) {
  _inherits(TemplateGoalSection, _Component);

  var _super = _createSuper(TemplateGoalSection);

  function TemplateGoalSection(parent, milestone) {
    var _this;

    _classCallCheck(this, TemplateGoalSection);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, milestone);
    _this.name = "template-goal-section";
    _this.numberGoals = 0;
    _this.buttons = [];
    _this.selectedTemplate = undefined;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(TemplateGoalSection, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(TemplateGoalSection.prototype), "populate", this).call(this);

      var dom = this.dom;
      this.wrapper.addClass("template-goals-section");

      if (this.src && this.src.template && this.src.template.goals) {
        var _iterator = _createForOfIteratorHelper(this.src.template.goals),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var tempGoal = _step.value;
            var btn = new TemplateGoalButton(this, tempGoal);
            this.buttons.push(btn);
            this.wrapper.append(btn.getWrapper());
            this.numberGoals += 1;
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }

      if (this.numberGoals == 0) {
        this.wrapper.addClass("empty");
      } else {
        this.wrapper.removeClass("empty");
      }
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      if (msg == _utilities_enums__WEBPACK_IMPORTED_MODULE_1__.Message.SET_TEMPLATE) {
        var _iterator2 = _createForOfIteratorHelper(this.buttons),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var btn = _step2.value;

            if (btn.id !== id) {
              btn.unselect();
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        this.selectedTemplate = data;
        this.messageParent(msg, data);
        return;
      }

      if (msg == _utilities_enums__WEBPACK_IMPORTED_MODULE_1__.Message.UNSET_TEMPLATE) {
        this.selectedTemplate = undefined;
        this.messageParent(msg);
      }
    }
  }]);

  return TemplateGoalSection;
}(_Component__WEBPACK_IMPORTED_MODULE_0__.default);



var TemplateGoalButton = /*#__PURE__*/function (_Component2) {
  _inherits(TemplateGoalButton, _Component2);

  var _super2 = _createSuper(TemplateGoalButton);

  function TemplateGoalButton(parent, templateGoal) {
    var _this2;

    _classCallCheck(this, TemplateGoalButton);

    var wrapper = $('<div class="template-goal"></div>');
    _this2 = _super2.call(this, wrapper, parent);
    _this2.name = "template-goal-section";
    _this2.templateGoal = templateGoal;
    _this2.selected = false;

    _this2.populate();

    _this2.updateDOM();

    return _this2;
  }

  _createClass(TemplateGoalButton, [{
    key: "populate",
    value: function populate() {
      var _this3 = this;

      _get(_getPrototypeOf(TemplateGoalButton.prototype), "populate", this).call(this);

      this.wrapper.html(this.templateGoal.name);
      var comp = this;
      this.wrapper.on('click', function () {
        comp.toggleSelect();

        if (comp.selected) {
          _this3.messageParent(_utilities_enums__WEBPACK_IMPORTED_MODULE_1__.Message.SET_TEMPLATE, comp.templateGoal);
        } else {
          _this3.messageParent(_utilities_enums__WEBPACK_IMPORTED_MODULE_1__.Message.UNSET_TEMPLATE);
        }
      });
    }
  }, {
    key: "toggleSelect",
    value: function toggleSelect() {
      if (this.selected) {
        this.unselect();
      } else {
        this.select();
      }
    }
  }, {
    key: "select",
    value: function select() {
      this.selected = true;
      this.wrapper.addClass('selected');
    }
  }, {
    key: "unselect",
    value: function unselect() {
      this.selected = false;
      this.wrapper.removeClass('selected');
    }
  }]);

  return TemplateGoalButton;
}(_Component__WEBPACK_IMPORTED_MODULE_0__.default);

/***/ }),

/***/ "./frontend/src/classes/components/field-components/CategorySelectComponent.js":
/*!*************************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/CategorySelectComponent.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CategorySelectComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
/* harmony import */ var _IconComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../IconComponent.js */ "./frontend/src/classes/components/IconComponent.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





var CategorySelectComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(CategorySelectComponent, _FieldComponent);

  var _super = _createSuper(CategorySelectComponent);

  function CategorySelectComponent(parent, fieldName, label, value) {
    var _this;

    var allowFeedback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;

    _classCallCheck(this, CategorySelectComponent);

    var wrapper = $('<div class="category-select-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, value, undefined, allowFeedback);
    _this.name = "category-select";

    _this.populate();

    _this.value = value;

    _this.updateDOM();

    return _this;
  }

  _createClass(CategorySelectComponent, [{
    key: "value",
    get: function get() {
      if (this.hasPopulated) {
        for (var cat in _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum) {
          if (this.editableComponents[cat].selected) {
            return this.editableComponents[cat].category;
          }
        }
      }

      return undefined;
    },
    set: function set(cat) {
      if (this.hasPopulated) {
        if (cat in _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum) {
          this.editableComponents[cat].select();
        } else {
          for (var _cat in _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum) {
            this.editableComponents[_cat].unselect();
          }
        }
      }
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(CategorySelectComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      /*  Editable components */

      for (var cat in _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum) {
        this.editableComponents[cat] = new _IconComponent_js__WEBPACK_IMPORTED_MODULE_1__.default(this, _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum[cat]);
      }

      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.iconBox = $('<div class="icon-box"></div>');
      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.content.append(dom.iconBox);
      dom.wrapper.append(dom.content); // Add all the category icons to the content div

      for (var _cat2 in _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum) {
        var catIcon = this.editableComponents[_cat2];
        dom[_cat2] = catIcon.getWrapper();
        dom.iconBox.append(dom[_cat2]);
      }

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      for (var cat in _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum) {
        var catIcon = this.editableComponents[cat];

        if (id == catIcon.id) {
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.Message.CHANGE) {
            if (catIcon.selected) {
              for (var otherCat in _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum) {
                if (otherCat !== cat) {
                  this.editableComponents[otherCat].unselect();
                  this.editableComponents[otherCat].greyOut();
                }
              }
            } else {
              if (this.value == undefined) {
                for (var _otherCat in _utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.CategoryEnum) {
                  this.editableComponents[_otherCat].ungreyOut();
                }
              }
            }
          }

          this.clearMessage();
          this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_2__.Message.CHANGE);
          return;
        }
      }

      _get(_getPrototypeOf(CategorySelectComponent.prototype), "handleMessage", this).call(this, id, msg, data);
    }
  }]);

  return CategorySelectComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/CheckboxComponent.js":
/*!*******************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/CheckboxComponent.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CheckboxComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var CheckboxComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(CheckboxComponent, _FieldComponent);

  var _super = _createSuper(CheckboxComponent);

  function CheckboxComponent(parent, fieldName, label) {
    var _this;

    var value = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    _classCallCheck(this, CheckboxComponent);

    var wrapper = $('<div class="checkbox-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, value, undefined, false);
    _this.name = "checkbox-" + fieldName;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(CheckboxComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(CheckboxComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.input = $('<input type="checkbox" disabled="true"/>');

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.input);
      var comp = this;
      dom.input.on('focus', function () {
        return comp.onFocus();
      });
      dom.input.on('blur', function () {
        return comp.onBlur();
      });
      dom.input.on('change', function () {
        return comp.onChange();
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      var dom = this.dom;
      dom.input.prop('checked', Boolean(this.value));

      _get(_getPrototypeOf(CheckboxComponent.prototype), "updateDOM", this).call(this);
    }
  }, {
    key: "onChange",
    value: function onChange() {
      this.value = this.dom.input.is(":checked");

      _get(_getPrototypeOf(CheckboxComponent.prototype), "onChange", this).call(this);
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.dom.input.attr("disabled", false);

      _get(_getPrototypeOf(CheckboxComponent.prototype), "startEditing", this).call(this, recurseDown, recurseUp);
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(CheckboxComponent.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);

      this.dom.input.attr("disabled", true);
    }
  }]);

  return CheckboxComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/CheckmarkComponent.js":
/*!********************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/CheckmarkComponent.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CheckmarkComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _animations_sprites__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../animations/sprites */ "./frontend/src/animations/sprites.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var CheckmarkComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(CheckmarkComponent, _FieldComponent);

  var _super = _createSuper(CheckmarkComponent);

  function CheckmarkComponent(parent) {
    var _this;

    var fieldName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'checkmark';
    var checked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var size = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 40;

    _classCallCheck(this, CheckmarkComponent);

    var wrapper = $('<div></div>');
    _this = _super.call(this, wrapper, parent, fieldName, undefined, checked, undefined, false);
    _this.name = "checkmark-component";
    _this.size = size;
    _this.useOpenFrames = !checked;
    _this.animating = false;
    _this.messageTimeout = undefined;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(CheckmarkComponent, [{
    key: "checked",
    get: function get() {
      return this.value;
    },
    set: function set(isChecked) {
      this.value = isChecked;

      if (this.messageTimeout) {
        clearTimeout(this.messageTimeout);
      }

      var comp = this;
      this.messageTimeout = setTimeout(function () {
        return comp.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_1__.Message.CHANGE);
      }, 500);
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(CheckmarkComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      var sizepx = this.size + "px";
      dom.checkDiv = this.wrapper;
      dom.checkDiv.addClass('ld-animated-check');
      dom.checkDiv.css('width: ' + sizepx + '; height: ' + sizepx);
      dom.backgroundCircle = $('<div class="check-background" style="width: ' + sizepx + '; height: ' + sizepx + '; background-size: ' + sizepx + ' ' + sizepx + ';"></div>');
      dom.sprite = $('<div class="checkmark-sheet"></div>'); // Basic css to prepare for animation

      dom.sprite.css({
        "width": sizepx,
        "height": sizepx,
        "position": "relative",
        "background-repeat": "no-repeat",
        "background-size": "calc(" + CheckmarkComponent.spritesheetColumns + " * " + sizepx + ") calc(" + CheckmarkComponent.spritesheetRows + " * " + sizepx + ")",
        "pointer-events": "none" // This keeps the animation from preventing mouse events on elements behind the animation

      });
      dom.checkDiv.append(dom.backgroundCircle);
      dom.checkDiv.append(dom.sprite);

      if (this.checked) {
        dom.checkDiv.addClass("is-checked");
        dom.sprite.animateSprite({
          columns: CheckmarkComponent.spritesheetColumns,
          rows: CheckmarkComponent.spritesheetRows,
          animations: {
            frames: [42]
          }
        });
      }

      var comp = this;
      dom.checkDiv.off("click").on("click", function (event) {
        comp.handleClick();
        event.stopPropagation();
      });
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      if (!this.editing) {
        return;
      }

      var dom = this.dom;
      var sprite = dom.sprite;
      var openFrames = CheckmarkComponent.openFrames;
      var closeFrames = CheckmarkComponent.closeFrames;
      var spriteData = CheckmarkComponent.spriteData;
      var spritesheetColumns = CheckmarkComponent.spritesheetColumns;
      var spritesheetRows = CheckmarkComponent.spritesheetRows;
      var comp = this;
      var currentFrame = sprite.animateSprite("frame");
      sprite.animateSprite("stop");

      if (this.animating) {
        var frames; //Reverse animation if it is currently animating

        if (this.useOpenFrames) {
          //If using openFrames...
          if (this.checked) {
            frames = openFrames.slice(0, currentFrame + 1).reverse(); //currently opening, must close

            this.checked = false;
          } else {
            frames = openFrames.slice(currentFrame, openFrames.length); //closing, must open

            this.checked = true;
          }

          sprite.animateSprite({
            fps: spriteData.fps,
            columns: spritesheetColumns,
            rows: spritesheetRows,
            animations: {
              frames: frames
            },
            loop: false,
            complete: function complete() {
              comp.animating = false;
            }
          });
        } else {
          //If using closeFrames...
          if (this.checked) {
            frames = closeFrames.slice(currentFrame, closeFrames.length); //opening, must close

            this.checked = false;
          } else {
            frames = closeFrames.slice(0, currentFrame + 1).reverse(); //currently closing, must open

            this.checked = true;
          }

          sprite.animateSprite({
            fps: spriteData.fps,
            columns: spritesheetColumns,
            rows: spritesheetRows,
            animations: {
              frames: frames
            },
            loop: false,
            complete: function complete() {
              comp.animating = false;
            }
          });
        }
      } else {
        if (this.checked) {
          this.checked = false;
          this.useOpenFrames = false;
          this.animating = true;
          sprite.animateSprite({
            fps: spriteData.fps,
            columns: spritesheetColumns,
            rows: spritesheetRows,
            animations: {
              frames: closeFrames
            },
            loop: false,
            complete: function complete() {
              comp.animating = false;
            }
          });
        } else {
          this.checked = true;
          this.useOpenFrames = true;
          this.animating = true;
          sprite.animateSprite({
            fps: spriteData.fps,
            columns: spritesheetColumns,
            rows: spritesheetRows,
            animations: {
              frames: openFrames
            },
            loop: false,
            complete: function complete() {
              comp.animating = false;
            }
          });
        }
      }

      if (this.checked) {
        dom.checkDiv.addClass('is-checked');
      } else {
        dom.checkDiv.removeClass('is-checked');
      }
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      return;
    }
  }]);

  return CheckmarkComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);

_defineProperty(CheckmarkComponent, "spritesheetColumns", 5);

_defineProperty(CheckmarkComponent, "spritesheetRows", 13);

_defineProperty(CheckmarkComponent, "openFrames", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]);

_defineProperty(CheckmarkComponent, "closeFrames", [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]);

_defineProperty(CheckmarkComponent, "spriteData", {
  width: 160,
  height: 160,
  numFrames: 65,
  fps: 24
});



/***/ }),

/***/ "./frontend/src/classes/components/field-components/DateInputComponent.js":
/*!********************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/DateInputComponent.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DateInputComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
/* harmony import */ var vanillajs_datepicker_Datepicker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vanillajs-datepicker/Datepicker */ "./frontend/node_modules/vanillajs-datepicker/js/Datepicker.js");
/* harmony import */ var luxon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! luxon */ "./frontend/node_modules/luxon/build/cjs-browser/luxon.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



 // Api: https://mymth.github.io/vanillajs-datepicker/

var DateInputComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(DateInputComponent, _FieldComponent);

  var _super = _createSuper(DateInputComponent);

  function DateInputComponent(parent, fieldName, label, value) {
    var _this;

    var placeholder = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "MM-DD-YYYY";
    var allowFeedback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;
    var luxonFormat = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : "DD, MM d, yyyy";

    _classCallCheck(this, DateInputComponent);

    var wrapper = $('<div class="date-input-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, value, placeholder, allowFeedback);
    _this.name = "date-input-" + fieldName;
    _this.datepicker = undefined;
    _this.dateValue = value;
    _this.dateFormat = luxonFormat;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(DateInputComponent, [{
    key: "value",
    get: function get() {
      return this.dateValue;
    },
    set: function set(x) {
      // x is Luxon DateTime, or undefined
      this.dateValue = x;

      if (this.hasPopulated) {
        this.updateDOM();
      }
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(DateInputComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.display = $('<span class="date-input-display"></span>');
      dom.input = $('<input type="text"/>');
      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.input).append(dom.display);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }

      dom.input.prop('placeholder', this.placeholder);
      this.datepicker = new vanillajs_datepicker_Datepicker__WEBPACK_IMPORTED_MODULE_1__.default(dom.input[0], {
        // ...options
        autohide: true,

        /*orientation: 'bottom',*/
        dateDelimiter: '|',
        format: 'DD, MM d, yyyy'
      });
      var comp = this;
      dom.input.on("changeDate", function () {
        return comp.onChange();
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      var dom = this.dom;

      if (this.dateValue) {
        this.datepicker.setDate(this.dateValue.toJSDate());
        var dateString = vanillajs_datepicker_Datepicker__WEBPACK_IMPORTED_MODULE_1__.default.formatDate(this.dateValue.toJSDate(), this.dateFormat);
        dom.input.val(dateString);
        dom.display.removeClass("no-value");
        dom.display.html(dateString);
      } else {
        dom.input.val("");
        dom.display.addClass("no-value");
        dom.display.html(this.placeholder);
      }

      _get(_getPrototypeOf(DateInputComponent.prototype), "updateDOM", this).call(this);
    }
  }, {
    key: "onChange",
    value: function onChange() {
      this.dateValue = luxon__WEBPACK_IMPORTED_MODULE_2__.DateTime.fromJSDate(this.datepicker.getDate());
    }
  }]);

  return DateInputComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/DateTimeComponent.js":
/*!*******************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/DateTimeComponent.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DateTimeComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
/* harmony import */ var _DateInputComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DateInputComponent.js */ "./frontend/src/classes/components/field-components/DateInputComponent.js");
/* harmony import */ var _TimeInputComponent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TimeInputComponent.js */ "./frontend/src/classes/components/field-components/TimeInputComponent.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







var DateTimeComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(DateTimeComponent, _FieldComponent);

  var _super = _createSuper(DateTimeComponent);

  /* value should be a js Date object */
  function DateTimeComponent(parent, fieldName, label, value) {
    var _this;

    var placeholder = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
      date: "MM-DD-YYYY",
      time: "00:00"
    };
    var connectorText = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "at";
    var allowFeedback = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;

    _classCallCheck(this, DateTimeComponent);

    var wrapper = $('<div class="date-time-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, value, placeholder, allowFeedback);
    _this.name = "date-time-" + fieldName;
    _this.connectorText = connectorText;

    _this.populate();

    _this.value = value;

    _this.updateDOM();

    return _this;
  }

  _createClass(DateTimeComponent, [{
    key: "value",
    get: function get() {
      var dt = this.editableComponents.date.value.startOf('day');
      return dt.plus({
        seconds: this.editableComponents.time.value
      });
    },
    set: function set(dt) {
      if (dt && this.hasPopulated) {
        this.editableComponents.time.value = dt.hour * 3600 + dt.minute * 60 + dt.second;
        this.editableComponents.date.value = dt.startOf('day');
      }
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(DateTimeComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.datebytime = $('<div class="date-time-content"></div>');
      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>');
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      this.editableComponents.date = new _DateInputComponent_js__WEBPACK_IMPORTED_MODULE_1__.default(this, "date", undefined, undefined, this.placeholder.date, false);
      dom.date = this.editableComponents.date.getWrapper();
      dom.datebytime.append(dom.date);
      dom.datebytime.append('<span>&nbsp;' + this.connectorText + '</span>');
      this.editableComponents.time = new _TimeInputComponent_js__WEBPACK_IMPORTED_MODULE_2__.default(this, "time", undefined, undefined, this.placeholder.time, false);
      dom.time = this.editableComponents.time.getWrapper();
      dom.datebytime.append(dom.time);
      dom.wrapper.append(dom.content);
      dom.content.append(dom.datebytime);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(DateTimeComponent.prototype), "updateDOM", this).call(this);

      this.editableComponents.date.updateDOM();
      this.editableComponents.time.updateDOM();
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      switch (id) {
        case this.editableComponents.date.id:
        case this.editableComponents.time.id:
          if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.Message.CHANGE) {
            this.onChange();
          }

      }
    }
  }]);

  return DateTimeComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/DropdownComponent.js":
/*!*******************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/DropdownComponent.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DropdownComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var DropdownComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(DropdownComponent, _FieldComponent);

  var _super = _createSuper(DropdownComponent);

  function DropdownComponent(parent, fieldName, label, value, options, optionValues) {
    var _this;

    var placeholder = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : "Select one";
    var allowFeedback = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;

    _classCallCheck(this, DropdownComponent);

    var wrapper = $('<div class="dropdown-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, value, placeholder, allowFeedback);
    _this.name = "dropdown-" + fieldName;

    _this.setOptions(options, optionValues);

    _this.selectedIndex = -1;

    _this.populate();

    _this.value = value;

    _this.updateDOM();

    return _this;
  }

  _createClass(DropdownComponent, [{
    key: "value",
    get: function get() {
      if (this.hasPopulated) {
        if (this.selectedIndex >= 0) {
          return this.optionValues[this.selectedIndex];
        }

        return undefined;
      }
    },
    set: function set(x) {
      if (x != null && x != undefined && this.optionValues) {
        this.selectedIndex = this.optionValues.indexOf(x.toString());
      } else {
        this.selectedIndex = -1;
      }

      this.updateDOM();
    }
  }, {
    key: "text",
    get: function get() {
      if (this.hasPopulated) {
        if (this.selectedIndex >= 0) {
          return this.options[this.selectedIndex];
        }

        return undefined;
      }
    },
    set: function set(text) {
      if (this.options) {
        console.log(text, this.options);
        this.selectedIndex = this.options.indexOf(text);
        this.updateDOM();
      }
    }
  }, {
    key: "setOptions",
    value: function setOptions(options, optionValues) {
      options = options.map(function (x) {
        return x.toString();
      });
      this.options = options;

      if (optionValues && optionValues.length == options.length) {
        this.optionValues = optionValues.map(function (x) {
          return x.toString();
        });
      } else {
        this.optionValues = _toConsumableArray(Array(options.length).keys()).map(function (x) {
          return x.toString();
        });
      }

      if (this.options.length == 0) {
        this.disabled = true;
      } else {
        this.disabled = false;
      }
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(DropdownComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.display = $('<span class="dropdown-display"></span>');
      dom.select = $('<select></select>');
      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.select).append(dom.display);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }

      var comp = this;
      dom.select.on('focus', function () {
        return comp.onFocus();
      });
      dom.select.on('blur', function () {
        return comp.onBlur();
      });
      dom.select.on('change', function () {
        return comp.onChange();
      });
    }
  }, {
    key: "onChange",
    value: function onChange() {
      this.selectedIndex = this.optionValues.indexOf(this.dom.select.find(":selected").val());

      _get(_getPrototypeOf(DropdownComponent.prototype), "onChange", this).call(this);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(DropdownComponent.prototype), "updateDOM", this).call(this);

      var dom = this.dom;

      if (this.value) {
        dom.display.removeClass("no-value");
        dom.display.html(this.text);
      } else {
        dom.display.addClass("no-value");
        dom.display.html(this.placeholder);
      }

      dom.select.empty();

      if (this.placeholder && !this.value) {
        var elem = $('<option value="NULL" selected="true" disabled="disabled"></option>');
        elem.html(this.placeholder);
        dom.select.append(elem);
      }

      for (var i = 0; i < this.options.length; i++) {
        var _elem = $('<option value="' + this.optionValues[i] + '"></option>');

        _elem.html(this.options[i]);

        dom.select.append(_elem);
      }

      if (this.selectedIndex >= 0) {
        dom.select.val(this.optionValues[this.selectedIndex]);
      }

      this.dom.select.prop('disabled', this.disabled);
    }
  }, {
    key: "disable",
    value: function disable() {
      this.disabled = true;
      this.ungreyOut();

      if (this.hasPopulated) {
        this.dom.select.prop('disabled', this.disabled);
      }
    }
  }, {
    key: "enable",
    value: function enable() {
      this.disabled = false;

      if (this.hasPopulated) {
        this.dom.select.prop('disabled', this.disabled);
      }
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(DropdownComponent.prototype), "startEditing", this).call(this, recurseDown, recurseUp);

      this.updateDOM();
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(DropdownComponent.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);

      this.updateDOM();
    }
  }]);

  return DropdownComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/FieldComponent.js":
/*!****************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/FieldComponent.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FieldComponent)
/* harmony export */ });
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../EditableComponent.js */ "./frontend/src/classes/components/EditableComponent.js");
/* harmony import */ var _FeedbackComponent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../FeedbackComponent.js */ "./frontend/src/classes/components/FeedbackComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





var FieldComponent = /*#__PURE__*/function (_EditableComponent) {
  _inherits(FieldComponent, _EditableComponent);

  var _super = _createSuper(FieldComponent);

  function FieldComponent(wrapper, parent, fieldName, label, value, placeholder) {
    var _this;

    var allowFeedback = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;

    _classCallCheck(this, FieldComponent);

    _this = _super.call(this, wrapper, parent);
    _this.name = "field-component";
    _this.label = label;
    _this.protected_value = value;
    _this.fieldName = fieldName;
    _this.placeholder = placeholder;
    _this.focused = false;
    _this.disabled = false;
    _this.allowFeedback = allowFeedback;
    _this.userMessage = new _FeedbackComponent_js__WEBPACK_IMPORTED_MODULE_2__.default();
    return _this;
  }

  _createClass(FieldComponent, [{
    key: "value",
    get: function get() {
      return this.protected_value;
    },
    set: function set(x) {
      this.protected_value = x;
    }
  }, {
    key: "onFocus",
    value: function onFocus() {
      this.focused = true;
      this.clearMessage();

      if (this.parent) {
        this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_0__.Message.FOCUS);
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur() {
      this.focused = false;
      this.clearMessage();

      if (this.parent) {
        this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_0__.Message.BLUR);
      }
    }
  }, {
    key: "onChange",
    value: function onChange() {
      this.clearMessage();

      if (this.parent) {
        this.messageParent(_utilities_enums_js__WEBPACK_IMPORTED_MODULE_0__.Message.CHANGE);
      }
    }
  }, {
    key: "showMessage",
    value: function showMessage(msg) {
      this.userMessage.showMessage(msg);
    }
  }, {
    key: "showSuccessMessage",
    value: function showSuccessMessage(msg) {
      this.userMessage.showSuccessMessage(msg);
    }
  }, {
    key: "showErrorMessage",
    value: function showErrorMessage(msg) {
      this.userMessage.showErrorMessage(msg);
    }
  }, {
    key: "clearMessage",
    value: function clearMessage() {
      this.userMessage.clearMessage();
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(FieldComponent.prototype), "populate", this).call(this);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(FieldComponent.prototype), "updateDOM", this).call(this);

      if (this.dom.label) {
        this.dom.label.html(this.label);
      }
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(FieldComponent.prototype), "startEditing", this).call(this, recurseDown, recurseUp);
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(FieldComponent.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);
    }
  }, {
    key: "greyOut",
    value: function greyOut() {
      if (!this.disabled) {
        this.wrapper.addClass('greyed-out');
      }
    }
  }, {
    key: "ungreyOut",
    value: function ungreyOut() {
      this.wrapper.removeClass('greyed-out');
    }
  }]);

  return FieldComponent;
}(_EditableComponent_js__WEBPACK_IMPORTED_MODULE_1__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/LabelledFieldWrapper.js":
/*!**********************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/LabelledFieldWrapper.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ LabelledFieldWrapper)
/* harmony export */ });
/* harmony import */ var _FieldComponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent */ "./frontend/src/classes/components/field-components/FieldComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var LabelledFieldWrapper = /*#__PURE__*/function (_FieldComponent) {
  _inherits(LabelledFieldWrapper, _FieldComponent);

  var _super = _createSuper(LabelledFieldWrapper);

  function LabelledFieldWrapper(parent, fieldName, label) {
    var _this;

    var allowFeedback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

    _classCallCheck(this, LabelledFieldWrapper);

    var wrapper = $('<div class="labelled-field-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, undefined, undefined, allowFeedback);
    _this.name = "field-wrapper-" + fieldName;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(LabelledFieldWrapper, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(LabelledFieldWrapper.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.main = $('<div style="display:flex; align-items:center;"></div>');
      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.main);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }
    }
  }, {
    key: "getMainDiv",
    value: function getMainDiv() {
      return this.dom.main;
    }
  }]);

  return LabelledFieldWrapper;
}(_FieldComponent__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/MeasureComponent.js":
/*!******************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/MeasureComponent.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MeasureComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
/* harmony import */ var _DropdownComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DropdownComponent.js */ "./frontend/src/classes/components/field-components/DropdownComponent.js");
/* harmony import */ var _TextInputComponent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TextInputComponent.js */ "./frontend/src/classes/components/field-components/TextInputComponent.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






var MeasureComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(MeasureComponent, _FieldComponent);

  var _super = _createSuper(MeasureComponent);

  function MeasureComponent(parent, fieldName, measureData, startMeasure, endMeasure) {
    var _this;

    var allowFeedback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;

    _classCallCheck(this, MeasureComponent);

    var wrapper = $('<div class="measure-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, undefined, undefined, undefined, false);
    _this.name = "measure-" + fieldName;
    _this.metadata = measureData;
    _this.allowFeedback = allowFeedback;

    _this.populate();

    _this.updateDOM();

    _this.value = {
      start_measure: startMeasure,
      end_measure: endMeasure
    };
    return _this;
  }

  _createClass(MeasureComponent, [{
    key: "value",
    get: function get() {
      if (this.editableComponents.startInput && this.editableComponents.endInput) {
        return {
          start_measure: this.editableComponents.startInput.value,
          end_measure: this.editableComponents.endInput.value
        };
      } else {
        return {};
      }
    },
    set: function set(values) {
      if (values && this.hasPopulated) {
        if (values.start_measure && this.editableComponents.startInput) {
          this.editableComponents.startInput.value = values.start_measure;
        }

        if (values.end_measure && this.editableComponents.endInput) {
          this.editableComponents.endInput.value = values.end_measure;
        }
      }
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(MeasureComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      if (this.metadata.type == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.MeasureType.NONE) return;
      dom.wrapper = this.wrapper;
      dom.measures = $('<div class="measure-content"></div>');

      if (this.metadata.type == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.MeasureType.FREEFORM) {
        this.editableComponents.startInput = new _TextInputComponent_js__WEBPACK_IMPORTED_MODULE_2__.default(this, "start measure freeform", this.metadata.startLabel, undefined, this.metadata.placeholderStartValue, this.allowFeedback);
        this.editableComponents.endInput = new _TextInputComponent_js__WEBPACK_IMPORTED_MODULE_2__.default(this, "end measure freeform", this.metadata.endLabel, undefined, this.metadata.placeholderEndValue, this.allowFeedback);
      } else if (this.metadata.type == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.MeasureType.DROPDOWN) {
        /*const startOptionValues = [];
        for (let i = 0; i < this.metadata.startOptions.length; i++){
          startOptionValues.push(i);
        }*/

        /*const endOptionValues = [];
        for (let i = 0; i < this.metadata.endOptions.length; i++) {
          endOptionValues.push(i);
        }*/
        console.log(this.metadata);
        this.editableComponents.startInput = new _DropdownComponent_js__WEBPACK_IMPORTED_MODULE_1__.default(this, "start measure dropdown", this.metadata.startLabel, this.metadata.defaultStart, this.metadata.startOptions, this.metadata.startOptions, this.metadata.placeholderStartValue, this.allowFeedback);
        this.editableComponents.endInput = new _DropdownComponent_js__WEBPACK_IMPORTED_MODULE_1__.default(this, "end measure dropdown", this.metadata.endLabel, this.metadata.defaultEnd, this.metadata.endOptions, this.metadata.endOptions, this.metadata.placeholderEndValue, this.allowFeedback);
      }

      dom.startInput = this.editableComponents.startInput.getWrapper();
      dom.endInput = this.editableComponents.endInput.getWrapper();
      dom.wrapper.append(dom.measures);
      dom.measures.append(dom.startInput).append(dom.endInput);
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(MeasureComponent.prototype), "updateDOM", this).call(this);

      if (this.editableComponents.startInput) this.editableComponents.startInput.updateDOM();
      if (this.editableComponents.endInput) this.editableComponents.endInput.updateDOM();
    }
  }, {
    key: "showMessage",
    value: function showMessage(msg) {
      if (msg.start && this.editableComponents.startInput) this.editableComponents.startInput.showMessage(msg);
      if (msg.end && this.editableComponents.endInput) this.editableComponents.endInput.showMessage(msg);
    }
  }, {
    key: "showSuccessMessage",
    value: function showSuccessMessage(msg) {
      if (msg.start && this.editableComponents.startInput) this.editableComponents.startInput.showSuccessMessage(msg);
      if (msg.end && this.editableComponents.endInput) this.editableComponents.endInput.showSuccessMessage(msg);
    }
  }, {
    key: "showErrorMessage",
    value: function showErrorMessage(msg) {
      if (msg.start && this.editableComponents.startInput) this.editableComponents.startInput.showErrorMessage(msg);
      if (msg.end && this.editableComponents.endInput) this.editableComponents.endInput.showErrorMessage(msg);
    }
  }, {
    key: "clearMessage",
    value: function clearMessage() {
      if (this.editableComponents.startInput && this.editableComponents.endInput) {
        this.editableComponents.startInput.clearMessage();
        this.editableComponents.endInput.clearMessage();
      }
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(id, msg, data) {
      if (this.editableComponents.startInput && this.editableComponents.endInput) {
        switch (id) {
          case this.editableComponents.startInput.id:
          case this.editableComponents.endInput.id:
            if (msg == _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__.Message.CHANGE) {
              this.onChange();
            }

        }
      }
    }
  }]);

  return MeasureComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/MonthSelectorComponent.js":
/*!************************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/MonthSelectorComponent.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MonthSelectorComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var DAYS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];

var MonthSelectorComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(MonthSelectorComponent, _FieldComponent);

  var _super = _createSuper(MonthSelectorComponent);

  function MonthSelectorComponent(parent, fieldName, label, value) {
    var _this;

    var allowFeedback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;

    _classCallCheck(this, MonthSelectorComponent);

    var offValue = {};
    DAYS.forEach(function (d) {
      return offValue[d] = false;
    });
    var wrapper = $('<div class="month-selector-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, offValue, undefined, allowFeedback);
    _this.name = "month-selector-" + fieldName;

    _this.populate();

    if (value) {
      for (var _i = 0, _Object$keys = Object.keys(value); _i < _Object$keys.length; _i++) {
        var day = _Object$keys[_i];

        if (day in DAYS && value[day]) {
          _this.addDay(day);
        }
      }
    }

    _this.updateDOM();

    return _this;
  }

  _createClass(MonthSelectorComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(MonthSelectorComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.selector = $('<div class="month-selector"></div>');
      var comp = this;
      dom.dayDivs = {};

      var _iterator = _createForOfIteratorHelper(DAYS),
          _step;

      try {
        var _loop = function _loop() {
          var day = _step.value;
          dom.dayDivs[day] = $('<div class="day-of-the-month no-select js-hoverable">' + day + '</div>');
          dom.dayDivs[day].on('click', function () {
            comp.toggleDay(day);
          });
          dom.selector.append(dom.dayDivs[day]);
        };

        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.selector);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      var dom = this.dom;

      _get(_getPrototypeOf(MonthSelectorComponent.prototype), "updateDOM", this).call(this);
    }
  }, {
    key: "toggleDay",
    value: function toggleDay(day) {
      this.value[day] = !this.value[day];

      if (this.value[day]) {
        this.dom.dayDivs[day].addClass('selected');
      } else {
        this.dom.dayDivs[day].removeClass('selected');
      }
    }
  }, {
    key: "addDay",
    value: function addDay(day) {
      this.value[day] = true;

      if (this.value[day]) {
        this.dom.dayDivs[day].addClass('selected');
      } else {
        this.dom.dayDivs[day].removeClass('selected');
      }
    }
  }, {
    key: "removeDay",
    value: function removeDay(day) {
      this.value[day] = false;

      if (this.value[day]) {
        this.dom.dayDivs[day].addClass('selected');
      } else {
        this.dom.dayDivs[day].removeClass('selected');
      }
    }
  }, {
    key: "clearDays",
    value: function clearDays() {
      var _iterator2 = _createForOfIteratorHelper(DAYS),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var day = _step2.value;
          this.removeDay(day);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }, {
    key: "valueAsList",
    value: function valueAsList() {
      var list = [];

      for (var _i2 = 0, _Object$keys2 = Object.keys(this.value); _i2 < _Object$keys2.length; _i2++) {
        var day = _Object$keys2[_i2];

        if (this.value[day]) {
          list.push(day);
        }
      }

      return list;
    }
  }, {
    key: "valueFromList",
    value: function valueFromList(listOfDays) {
      this.clearDays();
      var list = [];

      var _iterator3 = _createForOfIteratorHelper(listOfDays),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var day = _step3.value;
          this.addDay(day);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
  }]);

  return MonthSelectorComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/TextAreaComponent.js":
/*!*******************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/TextAreaComponent.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TextAreaComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var TextAreaComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(TextAreaComponent, _FieldComponent);

  var _super = _createSuper(TextAreaComponent);

  function TextAreaComponent(parent, fieldName, label, value, placeholder) {
    var _this;

    var allowFeedback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;

    _classCallCheck(this, TextAreaComponent);

    var wrapper = $('<div class="text-area-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, undefined, placeholder, allowFeedback);
    _this.name = "text-area-" + fieldName;

    _this.populate();

    _this.value = value;
    var dom = _this.dom;

    if (!_this.value) {
      dom.input.addClass("no-value");
      dom.input.html(_this.placeholder);
    }

    _this.updateDOM();

    return _this;
  }

  _createClass(TextAreaComponent, [{
    key: "value",
    get: function get() {
      if (this.hasPopulated) {
        var _this$dom$input$html;

        if (this.dom.input.hasClass('no-value')) {
          return "";
        }

        return (_this$dom$input$html = this.dom.input.html()) !== null && _this$dom$input$html !== void 0 ? _this$dom$input$html : "";
      }

      return "";
    },
    set: function set(x) {
      if (this.hasPopulated) {
        if (x || this.focused) {
          this.dom.input.removeClass("no-value");
          this.dom.input.html(x);
        } else {
          this.dom.input.addClass("no-value");
          this.dom.input.html(this.placeholder);
        }
      }
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(TextAreaComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.input = $('<div class="text-area"/>');
      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.wrapper.append(dom.label);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.input);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }

      var comp = this;
      dom.input.on('focus', function () {
        return comp.onFocus();
      });
      dom.input.on('blur', function () {
        return comp.onBlur();
      });
      dom.input.on('input', function () {
        return comp.onChange();
      });
      dom.input.on('dblclick', function () {
        if (comp.parent) {
          comp.parent.startEditing(true, true);
        }

        setTimeout(function () {
          return comp.dom.input.focus();
        }, 0);
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(TextAreaComponent.prototype), "updateDOM", this).call(this);
    }
  }, {
    key: "onFocus",
    value: function onFocus() {
      _get(_getPrototypeOf(TextAreaComponent.prototype), "onFocus", this).call(this);

      var dom = this.dom;

      if (dom.input.hasClass("no-value")) {
        dom.input.removeClass("no-value");
        dom.input.html("");
      }

      this.updateDOM();
    }
  }, {
    key: "onBlur",
    value: function onBlur() {
      _get(_getPrototypeOf(TextAreaComponent.prototype), "onBlur", this).call(this);

      var dom = this.dom;

      if (!this.value) {
        dom.input.addClass("no-value");
        dom.input.html(this.placeholder);
      }

      this.updateDOM();
    }
  }, {
    key: "onChange",
    value: function onChange() {
      _get(_getPrototypeOf(TextAreaComponent.prototype), "onChange", this).call(this);

      this.updateDOM();
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(TextAreaComponent.prototype), "startEditing", this).call(this, recurseDown, recurseUp);

      this.dom.input.attr("contenteditable", true);
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(TextAreaComponent.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);

      this.dom.input.attr("contenteditable", false);
    }
  }]);

  return TextAreaComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/TextInputComponent.js":
/*!********************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/TextInputComponent.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TextInputComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var TextInputComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(TextInputComponent, _FieldComponent);

  var _super = _createSuper(TextInputComponent);

  function TextInputComponent(parent, fieldName, label) {
    var _this;

    var value = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";
    var placeholder = arguments.length > 4 ? arguments[4] : undefined;
    var allowFeedback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;
    var maxLength = arguments.length > 6 ? arguments[6] : undefined;
    var pattern = arguments.length > 7 ? arguments[7] : undefined;

    _classCallCheck(this, TextInputComponent);

    var wrapper = $('<div class="text-input-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, value, placeholder, allowFeedback);
    _this.name = "text-input-" + fieldName;
    _this.maxLength = maxLength;
    _this.pattern = pattern;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(TextInputComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(TextInputComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.display = $('<span class="text-input-display"></span>');
      dom.input = $('<input type="text"/>');
      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.input).append(dom.display);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }

      if (this.maxLength) {
        dom.input.prop('maxlength', this.maxLength);
        dom.input.prop('size', this.maxLength);
      }

      if (this.pattern) {
        dom.input.prop('pattern', this.pattern);
      }

      var comp = this;
      dom.input.on('focus', function () {
        return comp.onFocus();
      });
      dom.input.on('blur', function () {
        return comp.onBlur();
      });
      dom.input.on('change input', function () {
        return comp.onChange();
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      var dom = this.dom;
      dom.input.prop('placeholder', this.placeholder);
      dom.input.val(this.value);

      if (this.value) {
        this.dom.display.removeClass("no-value").html(this.value);
      } else {
        this.dom.display.addClass("no-value").html(this.placeholder);
      }

      _get(_getPrototypeOf(TextInputComponent.prototype), "updateDOM", this).call(this);
    }
  }, {
    key: "onChange",
    value: function onChange() {
      this.value = this.dom.input.val();

      _get(_getPrototypeOf(TextInputComponent.prototype), "onChange", this).call(this);
    }
  }]);

  return TextInputComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/TimeInputComponent.js":
/*!********************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/TimeInputComponent.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TimeInputComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
/* harmony import */ var _utilities_time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utilities/time.js */ "./frontend/src/utilities/time.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




var TimeInputComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(TimeInputComponent, _FieldComponent);

  var _super = _createSuper(TimeInputComponent);

  function TimeInputComponent(parent, fieldName, label, value, placeholder) {
    var _this;

    var allowFeedback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;

    _classCallCheck(this, TimeInputComponent);

    /* value is a time of day, represented by the number of seconds since midnight */
    var wrapper = $('<div class="time-input-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, value, placeholder, allowFeedback);
    _this.name = "time-input-" + fieldName;

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(TimeInputComponent, [{
    key: "setTimeInSeconds",
    value: function setTimeInSeconds(secondsSinceMidnight) {
      this.value = secondsSinceMidnight;
      this.updateDOM();
    }
  }, {
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(TimeInputComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.input = $('<input type="time" readonly="true"/>');
      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.input);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }

      var comp = this;
      dom.input.on('focus', function () {
        return comp.onFocus();
      });
      dom.input.on('blur', function () {
        return comp.onBlur();
      });
      dom.input.on('change input', function () {
        return comp.onChange();
      });
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      _get(_getPrototypeOf(TimeInputComponent.prototype), "updateDOM", this).call(this);

      var dom = this.dom;

      if (this.value !== undefined) {
        dom.input.val((0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_1__.timeOfDayFromSeconds)(this.value));
      } else {
        dom.input.val("");
      }
    }
  }, {
    key: "onChange",
    value: function onChange() {
      try {
        this.value = (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_1__.timeOfDayToSeconds)(this.dom.input.val());
      } catch (e) {
        console.log(e);
        this.value = undefined;
      }

      _get(_getPrototypeOf(TimeInputComponent.prototype), "onChange", this).call(this);
    }
  }, {
    key: "startEditing",
    value: function startEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(TimeInputComponent.prototype), "startEditing", this).call(this, recurseDown, recurseUp);

      this.dom.input.prop('readonly', '');
    }
  }, {
    key: "stopEditing",
    value: function stopEditing() {
      var recurseDown = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var recurseUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _get(_getPrototypeOf(TimeInputComponent.prototype), "stopEditing", this).call(this, recurseDown, recurseUp);

      this.dom.input.prop('readonly', 'true');
    }
  }]);

  return TimeInputComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/field-components/WeekSelectorComponent.js":
/*!***********************************************************************************!*\
  !*** ./frontend/src/classes/components/field-components/WeekSelectorComponent.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ WeekSelectorComponent)
/* harmony export */ });
/* harmony import */ var _FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FieldComponent.js */ "./frontend/src/classes/components/field-components/FieldComponent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var DAYS = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];

var WeekSelectorComponent = /*#__PURE__*/function (_FieldComponent) {
  _inherits(WeekSelectorComponent, _FieldComponent);

  var _super = _createSuper(WeekSelectorComponent);

  function WeekSelectorComponent(parent, fieldName, label, value) {
    var _this;

    var allowFeedback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;

    _classCallCheck(this, WeekSelectorComponent);

    var offValue = {
      SUN: false,
      MON: false,
      TUE: false,
      WED: false,
      THU: false,
      FRI: false,
      SAT: false
    };
    var wrapper = $('<div class="week-selector-wrapper"></div>');
    _this = _super.call(this, wrapper, parent, fieldName, label, offValue, undefined, allowFeedback);
    _this.name = "week-selector-" + fieldName;

    _this.populate();

    if (value) {
      var _iterator = _createForOfIteratorHelper(DAYS),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var day = _step.value;

          if (day in value && value[day]) {
            _this.addDay(day);
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }

    _this.updateDOM();

    return _this;
  }

  _createClass(WeekSelectorComponent, [{
    key: "populate",
    value: function populate() {
      _get(_getPrototypeOf(WeekSelectorComponent.prototype), "populate", this).call(this);

      var dom = this.dom;
      dom.wrapper = this.wrapper;
      dom.content = $('<div class="field-content"></div>');
      dom.selector = $('<div class="week-selector"></div>');
      dom.sundayDiv = $('<div class="day-of-the-week no-select js-hoverable">Sun</div>');
      dom.mondayDiv = $('<div class="day-of-the-week no-select js-hoverable">Mon</div>');
      dom.tuesdayDiv = $('<div class="day-of-the-week no-select js-hoverable">Tue</div>');
      dom.wednesdayDiv = $('<div class="day-of-the-week no-select js-hoverable">Wed</div>');
      dom.thursdayDiv = $('<div class="day-of-the-week no-select js-hoverable">Thu</div>');
      dom.fridayDiv = $('<div class="day-of-the-week no-select js-hoverable">Fri</div>');
      dom.saturdayDiv = $('<div class="day-of-the-week no-select js-hoverable">Sat</div>');
      dom.dayDivs = {
        SUN: dom.sundayDiv,
        MON: dom.mondayDiv,
        TUE: dom.tuesdayDiv,
        WED: dom.wednesdayDiv,
        THU: dom.thursdayDiv,
        FRI: dom.fridayDiv,
        SAT: dom.saturdayDiv
      };
      var comp = this;

      var _loop = function _loop() {
        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
            day = _Object$entries$_i[0],
            div = _Object$entries$_i[1];

        dom.selector.append(div);
        div.on('click', function (e) {
          comp.toggleDay(day);
        });
      };

      for (var _i = 0, _Object$entries = Object.entries(dom.dayDivs); _i < _Object$entries.length; _i++) {
        _loop();
      }

      dom.feedback = this.userMessage.getWrapper();

      if (this.label) {
        dom.labelBox = $('<div class="field-label-box"></div>');
        dom.label = $('<span class="field-label"></span>').html(this.label);
        dom.labelBox.append(dom.label);
        dom.wrapper.append(dom.labelBox);
      }

      dom.wrapper.append(dom.content);
      dom.content.append(dom.selector);

      if (this.allowFeedback) {
        dom.content.append(dom.feedback);
      }
    }
  }, {
    key: "updateDOM",
    value: function updateDOM() {
      var dom = this.dom;

      _get(_getPrototypeOf(WeekSelectorComponent.prototype), "updateDOM", this).call(this);
    }
  }, {
    key: "toggleDay",
    value: function toggleDay(day) {
      this.value[day] = !this.value[day];

      if (this.value[day]) {
        this.dom.dayDivs[day].addClass('selected');
      } else {
        this.dom.dayDivs[day].removeClass('selected');
      }
    }
  }, {
    key: "addDay",
    value: function addDay(day) {
      this.value[day] = true;

      if (this.value[day]) {
        this.dom.dayDivs[day].addClass('selected');
      } else {
        this.dom.dayDivs[day].removeClass('selected');
      }
    }
  }, {
    key: "removeDay",
    value: function removeDay(day) {
      this.value[day] = false;

      if (this.value[day]) {
        this.dom.dayDivs[day].addClass('selected');
      } else {
        this.dom.dayDivs[day].removeClass('selected');
      }
    }
  }, {
    key: "clearDays",
    value: function clearDays() {
      var _iterator2 = _createForOfIteratorHelper(DAYS),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var day = _step2.value;
          this.removeDay(day);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }, {
    key: "valueAsList",
    value: function valueAsList() {
      var list = [];

      for (var _i2 = 0, _Object$keys = Object.keys(this.value); _i2 < _Object$keys.length; _i2++) {
        var day = _Object$keys[_i2];

        if (this.value[day]) {
          list.push(day);
        }
      }

      return list;
    }
  }, {
    key: "valueFromList",
    value: function valueFromList(listOfDays) {
      this.clearDays();
      var list = [];

      var _iterator3 = _createForOfIteratorHelper(listOfDays),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var day = _step3.value;
          this.addDay(day);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
  }]);

  return WeekSelectorComponent;
}(_FieldComponent_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/components/page-components/DashboardPage.js":
/*!**************************************************************************!*\
  !*** ./frontend/src/classes/components/page-components/DashboardPage.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DashboardPage)
/* harmony export */ });
/* harmony import */ var _Component_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Component.js */ "./frontend/src/classes/components/Component.js");
/* harmony import */ var _MilestoneSection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../MilestoneSection.js */ "./frontend/src/classes/components/MilestoneSection.js");
/* harmony import */ var _GoalSection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../GoalSection.js */ "./frontend/src/classes/components/GoalSection.js");
/* harmony import */ var _utilities_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utilities/enums.js */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _data_sources_User_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../data-sources/User.js */ "./frontend/src/classes/data-sources/User.js");
/* harmony import */ var luxon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! luxon */ "./frontend/node_modules/luxon/build/cjs-browser/luxon.js");
/* harmony import */ var _utilities_time_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utilities/time.js */ "./frontend/src/utilities/time.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









var DashboardPage = /*#__PURE__*/function (_Component) {
  _inherits(DashboardPage, _Component);

  var _super = _createSuper(DashboardPage);

  function DashboardPage(wrapper, user, milestones) {
    var _ref;

    var _this;

    var title = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "Dashboard";

    _classCallCheck(this, DashboardPage);

    _this = _super.call(this, wrapper, undefined);
    _this.name = "dashboard-page";
    _this.title = title;
    _this.user = user;
    _this.milestones = milestones;
    var goalList = [];

    var _iterator = _createForOfIteratorHelper(_this.milestones),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var milestone = _step.value;
        goalList.push(milestone.goals);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    _this.goals = (_ref = []).concat.apply(_ref, goalList);

    _this.populate();

    _this.updateDOM();

    return _this;
  }

  _createClass(DashboardPage, [{
    key: "populate",
    value: function populate() {
      var dom = this.dom;
      dom.bodyDiv = this.wrapper.css({
        "display": "flex",
        "flex-direction": "column",
        "justify-content": "center",
        "max-width": "700px",
        "width": "100%",
        "margin": "auto"
      });
      this.components.goalSection = new _GoalSection_js__WEBPACK_IMPORTED_MODULE_2__.default(this, this.user, false, "No goals to display", "Goals for Next 7 Days");

      var _iterator2 = _createForOfIteratorHelper(this.goals),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var goal = _step2.value;

          /* Include goal only if:
           *   - The goal is incomplete and the deadline is within the next week OR
           *   - The goal is complete, but the deadline (for a one-time goal) passed less than 3 hours ago AND the goal was completed less than 3 hours ago
           *     (if that last_completed info has been saved)
           */
          if (!goal.completed && goal.nextDeadline < luxon__WEBPACK_IMPORTED_MODULE_6__.DateTime.local().plus({
            days: 7
          }) || goal.completed && goal.nextDeadline > luxon__WEBPACK_IMPORTED_MODULE_6__.DateTime.local().minus({
            hours: 3
          }) && (!('last_completed' in goal.history) || (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_5__.DateTimeFromDatabaseFormat)(goal.history['last_completed']) > luxon__WEBPACK_IMPORTED_MODULE_6__.DateTime.local().minus({
            hours: 3
          }))) {
            this.components.goalSection.addGoalComponent(goal);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      this.components.milestoneSection = new _MilestoneSection_js__WEBPACK_IMPORTED_MODULE_1__.default(this, this.user, "Milestones In Progress");

      var _iterator3 = _createForOfIteratorHelper(this.milestones),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var milestone = _step3.value;

          if (!milestone.completed) {
            this.components.milestoneSection.addMilestoneComponent(milestone);
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      this.components.completedMilestoneSection = new _MilestoneSection_js__WEBPACK_IMPORTED_MODULE_1__.default(this, this.user, "Completed Milestones", false);

      var _iterator4 = _createForOfIteratorHelper(this.milestones),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var _milestone = _step4.value;

          if (_milestone.completed) {
            this.components.completedMilestoneSection.addMilestoneComponent(_milestone);
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      this.components.completedMilestoneSection.snapClosedAccordion(); // start with completed section closed

      if (this.title) {
        dom.title = $('<h2 style="margin:auto"></h2>').html(this.title);
        dom.bodyDiv.append(dom.title);
      }

      dom.bodyDiv.append(this.components.goalSection.getWrapper()).append(this.components.milestoneSection.getWrapper()).append(this.components.completedMilestoneSection.getWrapper());
    }
  }]);

  return DashboardPage;
}(_Component_js__WEBPACK_IMPORTED_MODULE_0__.default);



/***/ }),

/***/ "./frontend/src/classes/data-sources/Comment.js":
/*!******************************************************!*\
  !*** ./frontend/src/classes/data-sources/Comment.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Comment)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utilities_enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/enums */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _utilities_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities/request */ "./frontend/src/utilities/request.js");
/* harmony import */ var _utilities_time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utilities/time */ "./frontend/src/utilities/time.js");
/* harmony import */ var _User__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./User */ "./frontend/src/classes/data-sources/User.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var Comment = /*#__PURE__*/function () {
  function Comment(rawData) {
    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    _classCallCheck(this, Comment);

    this.parent = parent;
    this.rawData = rawData;

    if (!('id' in rawData)) {
      // Not already in db. Created on this page, so user is current user
      this.user_id = _User__WEBPACK_IMPORTED_MODULE_4__.default.currentUserId;
      this.user = _User__WEBPACK_IMPORTED_MODULE_4__.default.currentUser; // Belongs to milestone of this page, passed in as parent

      this.milestone_id = this.parent.id;
    } else {
      this.user = _User__WEBPACK_IMPORTED_MODULE_4__.default.make(this.rawData['user']);
    }
  }

  _createClass(Comment, [{
    key: "retrieve",
    value: function () {
      var _retrieve = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Comment.retrieveRecord(this.id);

              case 2:
                return _context.abrupt("return", _context.sent);

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function retrieve() {
        return _retrieve.apply(this, arguments);
      }

      return retrieve;
    }()
  }, {
    key: "update",
    value: function () {
      var _update = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2(data) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return Comment.updateRecord(this.id, data);

              case 2:
                return _context2.abrupt("return", _context2.sent);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function update(_x) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "create",
    value: function () {
      var _create = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return Comment.createRecord(this.rawData);

              case 2:
                resp = _context3.sent;

                if (resp.status == _utilities_enums__WEBPACK_IMPORTED_MODULE_1__.Status.SUCCESS) {
                  this.rawData = resp.data;
                }

                return _context3.abrupt("return", resp);

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function create() {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "delete",
    value: function () {
      var _delete2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee4() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return Comment.deleteRecord(this.id);

              case 2:
                resp = _context4.sent;
                return _context4.abrupt("return", resp);

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function _delete() {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }() // ------------ GETTERS AND SETTERS ------------- //

  }, {
    key: "id",
    get: function get() {
      return this.rawData['id'];
    },
    set: function set(x) {
      if ('id' in this.rawData) {
        // Should not be setting id if already set
        throw "Id already set!";
      }

      this.rawData['id'] = parseInt(x);
      Comment.registry[this.rawData['id']] = this;
    }
  }, {
    key: "user_id",
    get: function get() {
      return this.rawData['user_id'];
    },
    set: function set(x) {
      this.rawData['user_id'] = x;
    }
  }, {
    key: "milestone_id",
    get: function get() {
      return this.rawData['milestone_id'];
    },
    set: function set(x) {
      this.rawData['milestone_id'] = x;
    }
  }, {
    key: "comment_text",
    get: function get() {
      return this.rawData['comment_text'];
    },
    set: function set(x) {
      this.rawData['comment_text'] = x;
    }
  }, {
    key: "image",
    get: function get() {
      return this.user.image;
    }
  }, {
    key: "last_edited",
    get: function get() {
      return (0,_utilities_time__WEBPACK_IMPORTED_MODULE_3__.DateTimeFromDatabaseFormat)(this.rawData['last_edited']);
    }
  }, {
    key: "created_at",
    get: function get() {
      return (0,_utilities_time__WEBPACK_IMPORTED_MODULE_3__.DateTimeFromISO)(this.rawData['created_at']);
    }
  }], [{
    key: "make",
    value: function make(rawData) {
      var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if ('id' in rawData) {
        var id = parseInt(rawData['id']);

        if (!(id in Comment.registry)) {
          Comment.registry[id] = new Comment(rawData, parent);
        }

        return Comment.registry[id];
      }

      return new Comment(rawData, parent);
    }
  }, {
    key: "retrieveRecord",
    value: function () {
      var _retrieveRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee5(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                destination = "api/comment/retrieve/" + id;
                _context5.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_2__.makeRequest)({
                  url: destination,
                  type: "GET"
                });

              case 3:
                resp = _context5.sent;
                console.log(resp);
                return _context5.abrupt("return", resp);

              case 6:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function retrieveRecord(_x2) {
        return _retrieveRecord.apply(this, arguments);
      }

      return retrieveRecord;
    }()
  }, {
    key: "updateRecord",
    value: function () {
      var _updateRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee6(id, data) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                console.log(data);
                destination = "api/comment/" + id;
                _context6.next = 4;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_2__.makeRequest)({
                  url: destination,
                  type: "PUT",
                  data: data
                });

              case 4:
                resp = _context6.sent;
                console.log(resp);
                return _context6.abrupt("return", resp);

              case 7:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function updateRecord(_x3, _x4) {
        return _updateRecord.apply(this, arguments);
      }

      return updateRecord;
    }()
  }, {
    key: "createRecord",
    value: function () {
      var _createRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee7(data) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                destination = "api/comment";
                _context7.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_2__.makeRequest)({
                  url: destination,
                  type: "POST",
                  data: data
                });

              case 3:
                resp = _context7.sent;
                console.log(resp);
                return _context7.abrupt("return", resp);

              case 6:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function createRecord(_x5) {
        return _createRecord.apply(this, arguments);
      }

      return createRecord;
    }()
  }, {
    key: "deleteRecord",
    value: function () {
      var _deleteRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee8(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                destination = "api/comment/" + id;
                _context8.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_2__.makeRequest)({
                  url: destination,
                  type: "DELETE"
                });

              case 3:
                resp = _context8.sent;
                console.log(resp);
                return _context8.abrupt("return", resp);

              case 6:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function deleteRecord(_x6) {
        return _deleteRecord.apply(this, arguments);
      }

      return deleteRecord;
    }()
  }]);

  return Comment;
}();

_defineProperty(Comment, "registry", {});



/***/ }),

/***/ "./frontend/src/classes/data-sources/Goal.js":
/*!***************************************************!*\
  !*** ./frontend/src/classes/data-sources/Goal.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Goal)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Link */ "./frontend/src/classes/data-sources/Link.js");
/* harmony import */ var _Milestone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Milestone */ "./frontend/src/classes/data-sources/Milestone.js");
/* harmony import */ var _User__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./User */ "./frontend/src/classes/data-sources/User.js");
/* harmony import */ var _utilities_time__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/time */ "./frontend/src/utilities/time.js");
/* harmony import */ var _utilities_request__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/request */ "./frontend/src/utilities/request.js");
/* harmony import */ var _utilities_object_fields__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utilities/object-fields */ "./frontend/src/utilities/object-fields.js");
/* harmony import */ var _utilities_enums__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utilities/enums */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _utilities_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utilities/utils */ "./frontend/src/utilities/utils.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }










var Goal = /*#__PURE__*/function () {
  function Goal(rawData) {
    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    _classCallCheck(this, Goal);

    this.parent = parent;
    this.rawData = rawData;

    if (!('id' in rawData)) {
      // Link not already in db. Created on this page, so user is current user
      this.user_id = _User__WEBPACK_IMPORTED_MODULE_3__.default.currentUserId;
      this.user = _User__WEBPACK_IMPORTED_MODULE_3__.default.currentUser;
    }

    this.links = [];

    if (rawData.links) {
      var _iterator = _createForOfIteratorHelper(rawData.links),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var link = _step.value;
          this.addLink(_Link__WEBPACK_IMPORTED_MODULE_1__.default.make(link, this));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    } // Add template links


    var template = this.template;

    if (template) {
      if (template.links) {
        var _iterator2 = _createForOfIteratorHelper(template.links),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _link = _step2.value;
            _link.origin = _Link__WEBPACK_IMPORTED_MODULE_1__.default.Types.template;
            this.addLink(_Link__WEBPACK_IMPORTED_MODULE_1__.default.make(_link, this));
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    }

    if (this.parent) {
      // autofill all fields inherited from the parent (a milestone)
      this.milestone_id = this.parent.id;
      this.category = this.parent.category;
    }
  }

  _createClass(Goal, [{
    key: "addLink",
    value: function addLink(linkObject) {
      linkObject.parent = this;
      this.links.push(linkObject);
    }
  }, {
    key: "retrieve",
    value: function () {
      var _retrieve = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Goal.retrieveRecord(this.id);

              case 2:
                return _context.abrupt("return", _context.sent);

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function retrieve() {
        return _retrieve.apply(this, arguments);
      }

      return retrieve;
    }()
  }, {
    key: "update",
    value: function () {
      var _update = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2(data) {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return Goal.updateRecord(this.id, data);

              case 2:
                resp = _context2.sent;

                if (resp.status == _utilities_enums__WEBPACK_IMPORTED_MODULE_7__.Status.SUCCESS) {
                  this.rawData = resp.data;
                  console.log(resp.data);
                }

                return _context2.abrupt("return", resp);

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function update(_x) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "create",
    value: function () {
      var _create = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return Goal.createRecord(this.rawData);

              case 2:
                resp = _context3.sent;

                if (resp.status == _utilities_enums__WEBPACK_IMPORTED_MODULE_7__.Status.SUCCESS) {
                  this.rawData = resp.data;
                }

                return _context3.abrupt("return", resp);

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function create() {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "delete",
    value: function () {
      var _delete2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee4() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return Goal.deleteRecord(this.id);

              case 2:
                resp = _context4.sent;
                return _context4.abrupt("return", resp);

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function _delete() {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }() // ------------ GETTERS AND SETTERS ------------- //

  }, {
    key: "id",
    get: function get() {
      return this.rawData['id'];
    },
    set: function set(x) {
      if ('id' in this.rawData) {
        // Should not be setting id if already set
        throw "Id already set!";
      }

      this.rawData['id'] = parseInt(x);
      Goal.registry[this.rawData['id']] = this;
    }
  }, {
    key: "milestone_id",
    get: function get() {
      return this.rawData['milestone_id'];
    },
    set: function set(x) {
      this.rawData['milestone_id'] = x;
    }
  }, {
    key: "user_id",
    get: function get() {
      return this.rawData['user_id'];
    },
    set: function set(x) {
      this.rawData['user_id'] = x;
    }
  }, {
    key: "category",
    get: function get() {
      return this.rawData['category'];
    },
    set: function set(x) {
      this.rawData['category'] = x;
    }
  }, {
    key: "name",
    get: function get() {
      return this.rawData['name'];
    },
    set: function set(x) {
      this.rawData['name'] = x;
    }
  }, {
    key: "description",
    get: function get() {
      return this.rawData['description'];
    },
    set: function set(x) {
      this.rawData['description'] = x;
    }
  }, {
    key: "template_id",
    get: function get() {
      return this.rawData['template_id'];
    },
    set: function set(x) {
      this.rawData['template_id'] = x;
    }
  }, {
    key: "template",
    get: function get() {
      if (this.template_id && this.parent instanceof _Milestone__WEBPACK_IMPORTED_MODULE_2__.default && this.parent.template && this.parent.template.goals) {
        var _iterator3 = _createForOfIteratorHelper(this.parent.template.goals),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var g = _step3.value;

            if (g.name == this.template_id) {
              return g;
            }
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }

      return undefined;
    }
  }, {
    key: "notes",
    get: function get() {
      return this.rawData['notes'];
    },
    set: function set(x) {
      this.rawData['notes'] = x;
    }
  }, {
    key: "completed",
    get: function get() {
      return (0,_utilities_utils__WEBPACK_IMPORTED_MODULE_8__.toBoolean)(this.rawData['completed']);
    },
    set: function set(x) {
      this.rawData['completed'] = (0,_utilities_utils__WEBPACK_IMPORTED_MODULE_8__.toBoolean)(x);
    }
  }, {
    key: "private",
    get: function get() {
      return (0,_utilities_utils__WEBPACK_IMPORTED_MODULE_8__.toBoolean)(this.rawData['private']);
    },
    set: function set(x) {
      this.rawData['private'] = (0,_utilities_utils__WEBPACK_IMPORTED_MODULE_8__.toBoolean)(x);
    }
  }, {
    key: "history",
    get: function get() {
      return JSON.parse(this.rawData['history']);
    }
  }, {
    key: "nextDeadline",
    get: function get() {
      return (0,_utilities_time__WEBPACK_IMPORTED_MODULE_4__.DateTimeFromDatabaseFormat)(this.rawData['next_deadline']);
    }
  }, {
    key: "createdOn",
    get: function get() {
      return (0,_utilities_time__WEBPACK_IMPORTED_MODULE_4__.DateTimeFromISO)(this.rawData['created_at']);
    }
  }, {
    key: "repeat",
    get: function get() {
      return _utilities_object_fields__WEBPACK_IMPORTED_MODULE_6__.RepeatRule.fromJSON(this.rawData['repeat_rule']);
    },
    set: function set(x) {
      this.rawData['repeat_rule'] = x.toJSON();
    }
  }, {
    key: "sortOrder",
    get: function get() {
      var now = Date.now() / 1000; //Divide by 1000 to convert from ms to s

      var minutesDifference = Math.floor((this.nextDeadline.toSeconds() - now) / 60);
      return this.completed ? 52560000 + minutesDifference : minutesDifference;
    }
  }], [{
    key: "make",
    value: function make(rawData) {
      var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if ('id' in rawData) {
        var id = parseInt(rawData['id']);

        if (!(id in Goal.registry)) {
          Goal.registry[id] = new Goal(rawData, parent);
        }

        return Goal.registry[id];
      }

      return new Goal(rawData, parent);
    }
  }, {
    key: "retrieveRecord",
    value: function () {
      var _retrieveRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee5(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                destination = "api/goal/retrieve/" + id;
                _context5.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_5__.makeRequest)({
                  url: destination,
                  type: "GET"
                });

              case 3:
                resp = _context5.sent;
                console.log(resp);
                return _context5.abrupt("return", resp);

              case 6:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function retrieveRecord(_x2) {
        return _retrieveRecord.apply(this, arguments);
      }

      return retrieveRecord;
    }()
  }, {
    key: "updateRecord",
    value: function () {
      var _updateRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee6(id, data) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                destination = "api/goal/" + id;
                _context6.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_5__.makeRequest)({
                  url: destination,
                  type: "PUT",
                  data: data
                });

              case 3:
                resp = _context6.sent;
                console.log(resp);
                return _context6.abrupt("return", resp);

              case 6:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function updateRecord(_x3, _x4) {
        return _updateRecord.apply(this, arguments);
      }

      return updateRecord;
    }()
  }, {
    key: "createRecord",
    value: function () {
      var _createRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee7(data) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                destination = "api/goal";
                _context7.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_5__.makeRequest)({
                  url: destination,
                  type: "POST",
                  data: data
                });

              case 3:
                resp = _context7.sent;
                console.log(resp);
                return _context7.abrupt("return", resp);

              case 6:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function createRecord(_x5) {
        return _createRecord.apply(this, arguments);
      }

      return createRecord;
    }()
  }, {
    key: "deleteRecord",
    value: function () {
      var _deleteRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee8(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                destination = "api/goal/" + id;
                _context8.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_5__.makeRequest)({
                  url: destination,
                  type: "DELETE"
                });

              case 3:
                resp = _context8.sent;
                console.log(resp);
                return _context8.abrupt("return", resp);

              case 6:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function deleteRecord(_x6) {
        return _deleteRecord.apply(this, arguments);
      }

      return deleteRecord;
    }()
  }]);

  return Goal;
}();

_defineProperty(Goal, "registry", {});



/***/ }),

/***/ "./frontend/src/classes/data-sources/Link.js":
/*!***************************************************!*\
  !*** ./frontend/src/classes/data-sources/Link.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Link)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utilities_enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/enums */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _utilities_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities/request */ "./frontend/src/utilities/request.js");
/* harmony import */ var _utilities_time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utilities/time */ "./frontend/src/utilities/time.js");
/* harmony import */ var _Goal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Goal */ "./frontend/src/classes/data-sources/Goal.js");
/* harmony import */ var _User__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./User */ "./frontend/src/classes/data-sources/User.js");
/* harmony import */ var _Milestone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Milestone */ "./frontend/src/classes/data-sources/Milestone.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








var Link = /*#__PURE__*/function () {
  function Link(rawData) {
    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    _classCallCheck(this, Link);

    this.parent = parent;
    this.rawData = rawData;

    if (!('id' in rawData)) {
      // Link not already in db. Created on this page, so user is current user
      this.user_id = _User__WEBPACK_IMPORTED_MODULE_5__.default.currentUserId;
      this.user = _User__WEBPACK_IMPORTED_MODULE_5__.default.currentUser; // autofill all fields inherited from the parent (a milestone or goal)

      this.rawData.link_owner_id = this.parent.id;

      if (this.parent instanceof _Milestone__WEBPACK_IMPORTED_MODULE_6__.default) {
        this.rawData.link_owner_type = _utilities_enums__WEBPACK_IMPORTED_MODULE_1__.EntityEnum.MILESTONE;
      } else if (this.parent instanceof _Goal__WEBPACK_IMPORTED_MODULE_4__.default) {
        this.rawData.link_owner_type = _utilities_enums__WEBPACK_IMPORTED_MODULE_1__.EntityEnum.GOAL;
      }
    }
  }

  _createClass(Link, [{
    key: "retrieve",
    value: function () {
      var _retrieve = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Link.retrieveRecord(this.id);

              case 2:
                return _context.abrupt("return", _context.sent);

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function retrieve() {
        return _retrieve.apply(this, arguments);
      }

      return retrieve;
    }()
  }, {
    key: "update",
    value: function () {
      var _update = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2(data) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return Link.updateRecord(this.id, data);

              case 2:
                return _context2.abrupt("return", _context2.sent);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function update(_x) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "create",
    value: function () {
      var _create = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return Link.createRecord(this.rawData);

              case 2:
                resp = _context3.sent;

                if (resp.status == _utilities_enums__WEBPACK_IMPORTED_MODULE_1__.Status.SUCCESS) {
                  this.id = parseInt(resp.data.id);
                }

                return _context3.abrupt("return", resp);

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function create() {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "delete",
    value: function () {
      var _delete2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee4() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return Link.deleteRecord(this.id);

              case 2:
                resp = _context4.sent;
                return _context4.abrupt("return", resp);

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function _delete() {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }() // ------------ GETTERS AND SETTERS ------------- //

  }, {
    key: "id",
    get: function get() {
      return this.rawData['id'];
    },
    set: function set(x) {
      if ('id' in this.rawData) {
        // Should not be setting id if already set
        throw "Id already set!";
      }

      this.rawData['id'] = parseInt(x);
      Link.registry[this.rawData['id']] = this;
    }
  }, {
    key: "user_id",
    get: function get() {
      return this.rawData['user_id'];
    },
    set: function set(x) {
      this.rawData['user_id'] = x;
    }
  }, {
    key: "description",
    get: function get() {
      return this.rawData.name;
    },
    set: function set(x) {
      this.rawData.name = x;
    }
  }, {
    key: "origin",
    get: function get() {
      return this.rawData.origin;
    }
  }, {
    key: "name",
    get: function get() {
      return this.rawData.name;
    },
    set: function set(x) {
      this.rawData.name = x;
    }
  }, {
    key: "url",
    get: function get() {
      return this.rawData.url;
    },
    set: function set(x) {
      this.rawData.url = x;
    }
  }, {
    key: "createdOn",
    get: function get() {
      return (0,_utilities_time__WEBPACK_IMPORTED_MODULE_3__.DateTimeFromDatabaseFormat)(this.rawData['date_created']);
    },
    set: function set(x) {
      this.rawData['date_created'] = (0,_utilities_time__WEBPACK_IMPORTED_MODULE_3__.DateTimeToDatabaseFormat)(x);
    }
  }], [{
    key: "make",
    value: function make(rawData) {
      var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if ('id' in rawData) {
        var id = parseInt(rawData['id']);

        if (!(id in Link.registry)) {
          Link.registry[id] = new Link(rawData, parent);
        }

        return Link.registry[id];
      }

      return new Link(rawData, parent);
    }
  }, {
    key: "retrieveRecord",
    value: function () {
      var _retrieveRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee5(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                destination = "api/link/retrieve/" + id;
                _context5.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_2__.makeRequest)({
                  url: destination,
                  type: "GET"
                });

              case 3:
                resp = _context5.sent;
                console.log(resp);
                return _context5.abrupt("return", resp);

              case 6:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function retrieveRecord(_x2) {
        return _retrieveRecord.apply(this, arguments);
      }

      return retrieveRecord;
    }()
  }, {
    key: "updateRecord",
    value: function () {
      var _updateRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee6(id, data) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                console.log(data);
                destination = "api/link/" + id;
                _context6.next = 4;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_2__.makeRequest)({
                  url: destination,
                  type: "PUT",
                  data: data
                });

              case 4:
                resp = _context6.sent;
                console.log(resp);
                return _context6.abrupt("return", resp);

              case 7:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function updateRecord(_x3, _x4) {
        return _updateRecord.apply(this, arguments);
      }

      return updateRecord;
    }()
  }, {
    key: "createRecord",
    value: function () {
      var _createRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee7(data) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                console.log(data);
                destination = "api/link";
                _context7.next = 4;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_2__.makeRequest)({
                  url: destination,
                  type: "POST",
                  data: data
                });

              case 4:
                resp = _context7.sent;
                console.log(resp);
                return _context7.abrupt("return", resp);

              case 7:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function createRecord(_x5) {
        return _createRecord.apply(this, arguments);
      }

      return createRecord;
    }()
  }, {
    key: "deleteRecord",
    value: function () {
      var _deleteRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee8(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                destination = "api/link/" + id;
                _context8.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_2__.makeRequest)({
                  url: destination,
                  type: "DELETE"
                });

              case 3:
                resp = _context8.sent;
                console.log(resp);
                return _context8.abrupt("return", resp);

              case 6:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function deleteRecord(_x6) {
        return _deleteRecord.apply(this, arguments);
      }

      return deleteRecord;
    }()
  }]);

  return Link;
}();

_defineProperty(Link, "addLinkButton", undefined);

_defineProperty(Link, "Types", {
  user: "user",
  staff: "staff",
  template: "template"
});

_defineProperty(Link, "registry", {});



/***/ }),

/***/ "./frontend/src/classes/data-sources/Milestone.js":
/*!********************************************************!*\
  !*** ./frontend/src/classes/data-sources/Milestone.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Milestone)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _User_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./User.js */ "./frontend/src/classes/data-sources/User.js");
/* harmony import */ var _Goal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Goal.js */ "./frontend/src/classes/data-sources/Goal.js");
/* harmony import */ var _Link_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Link.js */ "./frontend/src/classes/data-sources/Link.js");
/* harmony import */ var _Comment_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Comment.js */ "./frontend/src/classes/data-sources/Comment.js");
/* harmony import */ var _utilities_templateDataLists_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/templateDataLists.js */ "./frontend/src/utilities/templateDataLists.js");
/* harmony import */ var _utilities_request_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utilities/request.js */ "./frontend/src/utilities/request.js");
/* harmony import */ var _utilities_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utilities/utils.js */ "./frontend/src/utilities/utils.js");
/* harmony import */ var _utilities_object_fields_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utilities/object-fields.js */ "./frontend/src/utilities/object-fields.js");
/* harmony import */ var _utilities_time_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utilities/time.js */ "./frontend/src/utilities/time.js");
/* harmony import */ var _utilities_enums__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utilities/enums */ "./frontend/src/utilities/enums.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }












var Milestone = /*#__PURE__*/function () {
  function Milestone(rawData, parent) {
    _classCallCheck(this, Milestone);

    this.parent = parent;
    this.rawData = rawData;

    if (!('id' in rawData)) {
      // Link not already in db. Created on this page, so user is current user
      this.user_id = _User_js__WEBPACK_IMPORTED_MODULE_1__.default.currentUserId;
      this.user = _User_js__WEBPACK_IMPORTED_MODULE_1__.default.currentUser;
    }

    this.goals = [];

    if (rawData.goals) {
      var _iterator = _createForOfIteratorHelper(rawData.goals),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var goal = _step.value;
          this.addGoal(_Goal_js__WEBPACK_IMPORTED_MODULE_2__.default.make(goal, this));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }

    this.links = [];

    if (rawData.links) {
      var _iterator2 = _createForOfIteratorHelper(rawData.links),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var link = _step2.value;
          this.addLink(_Link_js__WEBPACK_IMPORTED_MODULE_3__.default.make(link, this));
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    } // Add template links


    var template = this.template;

    if (template && template.links) {
      var _iterator3 = _createForOfIteratorHelper(template.links),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _link = _step3.value;
          _link.origin = _Link_js__WEBPACK_IMPORTED_MODULE_3__.default.Types.template;
          this.addLink(_Link_js__WEBPACK_IMPORTED_MODULE_3__.default.make(_link, this));
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }

    this.comments = [];

    if (rawData.comments) {
      var _iterator4 = _createForOfIteratorHelper(rawData.comments),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var comment = _step4.value;
          this.addComment(_Comment_js__WEBPACK_IMPORTED_MODULE_4__.default.make(comment, this));
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
  }

  _createClass(Milestone, [{
    key: "addLink",
    value: function addLink(linkObject) {
      linkObject.parent = this;
      this.links.push(linkObject);
    }
  }, {
    key: "addGoal",
    value: function addGoal(goalObject) {
      goalObject.parent = this;
      this.goals.push(goalObject);
    }
  }, {
    key: "addComment",
    value: function addComment(commentObject) {
      commentObject.parent = this;
      this.comments.push(commentObject);
    }
  }, {
    key: "retrieve",
    value: function () {
      var _retrieve = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Milestone.retrieveRecord(this.id);

              case 2:
                return _context.abrupt("return", _context.sent);

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function retrieve() {
        return _retrieve.apply(this, arguments);
      }

      return retrieve;
    }()
  }, {
    key: "update",
    value: function () {
      var _update = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2(data) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return Milestone.updateRecord(this.id, data);

              case 2:
                return _context2.abrupt("return", _context2.sent);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function update(_x) {
        return _update.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: "create",
    value: function () {
      var _create = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return Milestone.createRecord(this.rawData);

              case 2:
                resp = _context3.sent;

                if (resp.status == _utilities_enums__WEBPACK_IMPORTED_MODULE_10__.Status.SUCCESS) {
                  this.id = parseInt(resp.data['id']);
                  this.ruko_id = parseInt(resp.data['ruko_id_external']);
                }

                return _context3.abrupt("return", resp);

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function create() {
        return _create.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: "delete",
    value: function () {
      var _delete2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee4() {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return Milestone.deleteRecord(this.id);

              case 2:
                resp = _context4.sent;
                return _context4.abrupt("return", resp);

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function _delete() {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }() // ------------ GETTERS AND SETTERS ------------- //

  }, {
    key: "id",
    get: function get() {
      return this.rawData['id'];
    },
    set: function set(x) {
      if ('id' in this.rawData) {
        // Should not be setting id if already set
        throw "Id already set!";
      }

      this.rawData['id'] = parseInt(x);
      Milestone.registry[this.rawData['id']] = this;
    }
  }, {
    key: "user_id",
    get: function get() {
      return this.rawData['user_id'];
    },
    set: function set(x) {
      this.rawData['user_id'] = x;
    }
  }, {
    key: "ruko_id",
    get: function get() {
      return this.rawData['ruko_id_external'];
    },
    set: function set(x) {
      this.rawData['ruko_id_external'] = x;
    }
  }, {
    key: "measure_data",
    get: function get() {
      return _utilities_object_fields_js__WEBPACK_IMPORTED_MODULE_8__.MeasureMetadata.fromJSON(this.rawData.measure_data);
    },
    set: function set(x) {
      this.rawData.measure_data = x.toJSON();
    }
  }, {
    key: "start_measure",
    get: function get() {
      return this.rawData.start_measure;
    },
    set: function set(x) {
      this.rawData.start_measure = x;
    }
  }, {
    key: "end_measure",
    get: function get() {
      return this.rawData.end_measure;
    },
    set: function set(x) {
      this.rawData.end_measure = x;
    }
  }, {
    key: "template_id",
    get: function get() {
      return this.rawData['template_id'];
    },
    set: function set(x) {
      this.rawData['template_id'] = x;
    }
  }, {
    key: "template",
    get: function get() {
      if (this.template_id) {
        return _utilities_templateDataLists_js__WEBPACK_IMPORTED_MODULE_5__.TemplateMilestoneById[this.template_id];
      }
    }
  }, {
    key: "completed",
    get: function get() {
      return (0,_utilities_utils_js__WEBPACK_IMPORTED_MODULE_7__.toBoolean)(this.rawData.completed);
    },
    set: function set(x) {
      this.rawData.completed = (0,_utilities_utils_js__WEBPACK_IMPORTED_MODULE_7__.toBoolean)(x);
    }
  }, {
    key: "name",
    get: function get() {
      return this.rawData.name;
    },
    set: function set(x) {
      this.rawData.name = x;
    }
  }, {
    key: "category",
    get: function get() {
      return this.rawData.category;
    },
    set: function set(x) {
      this.rawData.category = x;
    }
  }, {
    key: "subcategory",
    get: function get() {
      return this.rawData.subcategory;
    },
    set: function set(x) {
      this.rawData.subcategory = x;
    }
  }, {
    key: "deadline",
    get: function get() {
      return (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_9__.DateTimeFromDatabaseFormat)(this.rawData.deadline);
    },
    set: function set(x) {
      if (x) {
        this.rawData.deadline = (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_9__.DateTimeToDatabaseFormat)(x);
      } else {
        this.rawData.deadline = undefined;
      }
    }
  }, {
    key: "createdOn",
    get: function get() {
      return (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_9__.DateTimeFromDatabaseFormat)(this.rawData['date_created']);
    },
    set: function set(x) {
      this.rawData['date_created'] = (0,_utilities_time_js__WEBPACK_IMPORTED_MODULE_9__.DateTimeToDatabaseFormat)(x);
    }
  }, {
    key: "vision",
    get: function get() {
      return this.rawData.vision;
    },
    set: function set(x) {
      this.rawData.vision = x;
    }
  }, {
    key: "purpose",
    get: function get() {
      return this.rawData.purpose;
    },
    set: function set(x) {
      this.rawData.purpose = x;
    }
  }, {
    key: "obstacles",
    get: function get() {
      return this.rawData.obstacles;
    },
    set: function set(x) {
      this.rawData.obstacles = x;
    }
  }], [{
    key: "make",
    value: function make(rawData) {
      var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if ('id' in rawData) {
        var id = parseInt(rawData['id']);

        if (!(id in Milestone.registry)) {
          Milestone.registry[id] = new Milestone(rawData, parent);
        }

        return Milestone.registry[id];
      }

      return new Milestone(rawData, parent);
    }
  }, {
    key: "fromId",
    value: function () {
      var _fromId = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee5(id, parent) {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return Milestone.retrieveRecord(id, true, true, true);

              case 2:
                resp = _context5.sent;
                return _context5.abrupt("return", Milestone.make(resp.data, parent));

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function fromId(_x2, _x3) {
        return _fromId.apply(this, arguments);
      }

      return fromId;
    }()
  }, {
    key: "retrieveRecords",
    value: function () {
      var _retrieveRecords = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee6() {
        var getMilestoneFields,
            getGoals,
            getLinks,
            getComments,
            destination,
            resp,
            _args6 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                getMilestoneFields = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : true;
                getGoals = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : true;
                getLinks = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : true;
                getComments = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : true;
                destination = "api/milestone/retrieve";
                _context6.next = 7;
                return (0,_utilities_request_js__WEBPACK_IMPORTED_MODULE_6__.makeRequest)({
                  url: destination,
                  type: "GET",
                  data: {
                    milestone: Boolean(getMilestoneFields),
                    goals: Boolean(getGoals),
                    links: Boolean(getLinks),
                    comments: Boolean(getComments)
                  }
                });

              case 7:
                resp = _context6.sent;
                console.log(resp);
                return _context6.abrupt("return", resp);

              case 10:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function retrieveRecords() {
        return _retrieveRecords.apply(this, arguments);
      }

      return retrieveRecords;
    }()
  }, {
    key: "retrieveAll",
    value: function () {
      var _retrieveAll = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee7() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return Milestone.retrieveRecords();

              case 2:
                return _context7.abrupt("return", _context7.sent);

              case 3:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));

      function retrieveAll() {
        return _retrieveAll.apply(this, arguments);
      }

      return retrieveAll;
    }()
  }, {
    key: "retrieveRecord",
    value: function () {
      var _retrieveRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee8(id) {
        var getMilestoneFields,
            getGoals,
            getLinks,
            getComments,
            destination,
            resp,
            _args8 = arguments;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                getMilestoneFields = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : true;
                getGoals = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : true;
                getLinks = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : true;
                getComments = _args8.length > 4 && _args8[4] !== undefined ? _args8[4] : true;
                destination = "api/milestone/retrieve/" + id;
                _context8.next = 7;
                return (0,_utilities_request_js__WEBPACK_IMPORTED_MODULE_6__.makeRequest)({
                  url: destination,
                  type: "GET",
                  data: {
                    milestone: Boolean(getMilestoneFields),
                    goals: Boolean(getGoals),
                    links: Boolean(getLinks),
                    comments: Boolean(getComments)
                  }
                });

              case 7:
                resp = _context8.sent;
                console.log(resp);
                return _context8.abrupt("return", resp);

              case 10:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));

      function retrieveRecord(_x4) {
        return _retrieveRecord.apply(this, arguments);
      }

      return retrieveRecord;
    }()
  }, {
    key: "updateRecord",
    value: function () {
      var _updateRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee9(id, data) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                destination = "api/milestone/" + id;
                _context9.next = 3;
                return (0,_utilities_request_js__WEBPACK_IMPORTED_MODULE_6__.makeRequest)({
                  url: destination,
                  type: "PUT",
                  data: data
                });

              case 3:
                resp = _context9.sent;
                console.log(resp);
                return _context9.abrupt("return", resp);

              case 6:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));

      function updateRecord(_x5, _x6) {
        return _updateRecord.apply(this, arguments);
      }

      return updateRecord;
    }()
  }, {
    key: "createRecord",
    value: function () {
      var _createRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee10(data) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                console.log(data);
                destination = "api/milestone";
                _context10.next = 4;
                return (0,_utilities_request_js__WEBPACK_IMPORTED_MODULE_6__.makeRequest)({
                  url: destination,
                  type: "POST",
                  data: data
                });

              case 4:
                resp = _context10.sent;
                console.log(resp);
                return _context10.abrupt("return", resp);

              case 7:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }));

      function createRecord(_x7) {
        return _createRecord.apply(this, arguments);
      }

      return createRecord;
    }()
  }, {
    key: "deleteRecord",
    value: function () {
      var _deleteRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee11(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                destination = "api/milestone/" + id;
                _context11.next = 3;
                return (0,_utilities_request_js__WEBPACK_IMPORTED_MODULE_6__.makeRequest)({
                  url: destination,
                  type: "DELETE"
                });

              case 3:
                resp = _context11.sent;
                console.log(resp);
                return _context11.abrupt("return", resp);

              case 6:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }));

      function deleteRecord(_x8) {
        return _deleteRecord.apply(this, arguments);
      }

      return deleteRecord;
    }()
  }]);

  return Milestone;
}();

_defineProperty(Milestone, "registry", {});



/***/ }),

/***/ "./frontend/src/classes/data-sources/User.js":
/*!***************************************************!*\
  !*** ./frontend/src/classes/data-sources/User.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ User)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Milestone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Milestone */ "./frontend/src/classes/data-sources/Milestone.js");
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../env */ "./frontend/src/env.js");
/* harmony import */ var _utilities_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utilities/request */ "./frontend/src/utilities/request.js");
/* harmony import */ var _utilities_enums__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/enums */ "./frontend/src/utilities/enums.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var User = /*#__PURE__*/function () {
  function User(rawData) {
    _classCallCheck(this, User);

    this.rawData = rawData;
    this.milestones = [];

    if ('milestones' in this.rawData) {
      var _iterator = _createForOfIteratorHelper(this.rawData.milestones),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var msData = _step.value;
          this.milestones.push(_Milestone__WEBPACK_IMPORTED_MODULE_1__.default.make(msData, this));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }

  _createClass(User, [{
    key: "retrieve",
    value: function () {
      var _retrieve = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return User.retrieveRecord(this.id);

              case 2:
                return _context.abrupt("return", _context.sent);

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function retrieve() {
        return _retrieve.apply(this, arguments);
      }

      return retrieve;
    }()
  }, {
    key: "id",
    get: // ------------ GETTERS AND SETTERS ------------- //
    function get() {
      return this.rawData['id'];
    },
    set: function set(x) {
      if ('id' in this.rawData) {
        // Should not be setting id if already set
        throw "Id already set!";
      }

      this.rawData['id'] = parseInt(x);
      User.registry[this.rawData['id']] = this;
    }
  }, {
    key: "name",
    get: function get() {
      return this.rawData['field_7'] + " " + this.rawData['field_8'];
    }
  }, {
    key: "image",
    get: function get() {
      if ('image' in this.rawData && this.rawData['field_10']) {
        return _env__WEBPACK_IMPORTED_MODULE_2__.userIconsPath + this.rawData['image'];
      } else {
        return _env__WEBPACK_IMPORTED_MODULE_2__.noImagePath;
      }
    }
  }, {
    key: "role",
    get: function get() {
      switch (parseInt(this.rawData['field_6'])) {
        case 0:
          return _utilities_enums__WEBPACK_IMPORTED_MODULE_4__.UserRole.ADMIN;

        case 5:
          return _utilities_enums__WEBPACK_IMPORTED_MODULE_4__.UserRole.MENTOR;

        case 6:
          return _utilities_enums__WEBPACK_IMPORTED_MODULE_4__.UserRole.PARENT;

        case 15:
          return _utilities_enums__WEBPACK_IMPORTED_MODULE_4__.UserRole.COORDINATOR;
      }

      return "Unknown";
    }
  }], [{
    key: "preloadCurrentUser",
    value: function () {
      var _preloadCurrentUser = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2() {
        var t;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                t = Date.now();
                _context2.next = 3;
                return User.fromId(User.currentUserId, undefined);

              case 3:
                User.currentUser = _context2.sent;
                console.log("User data gathered in " + (Date.now() - t) / 1000 + " seconds");

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function preloadCurrentUser() {
        return _preloadCurrentUser.apply(this, arguments);
      }

      return preloadCurrentUser;
    }()
  }, {
    key: "make",
    value: function make(rawData) {
      var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      console.log(rawData);

      if ('id' in rawData) {
        var id = parseInt(rawData['id']);

        if (!(id in User.registry)) {
          User.registry[id] = new User(rawData, parent);
        }

        return User.registry[id];
      }

      return new User(rawData, parent);
    }
  }, {
    key: "fromId",
    value: function () {
      var _fromId = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3(id, parent) {
        var resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return User.retrieveRecord(id);

              case 2:
                resp = _context3.sent;
                return _context3.abrupt("return", User.make(resp.data, parent));

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function fromId(_x, _x2) {
        return _fromId.apply(this, arguments);
      }

      return fromId;
    }()
  }, {
    key: "retrieveRecord",
    value: function () {
      var _retrieveRecord = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee4(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                destination = "api/user/retrieve/" + id;
                _context4.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_3__.makeRequest)({
                  url: destination,
                  type: "GET",
                  data: {}
                });

              case 3:
                resp = _context4.sent;
                console.log(resp);
                return _context4.abrupt("return", resp);

              case 6:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function retrieveRecord(_x3) {
        return _retrieveRecord.apply(this, arguments);
      }

      return retrieveRecord;
    }()
  }, {
    key: "retrieveAllAssigned",
    value: function () {
      var _retrieveAllAssigned = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee5(id) {
        var destination, resp;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                destination = "api/user/retrieveAllAssigned";
                _context5.next = 3;
                return (0,_utilities_request__WEBPACK_IMPORTED_MODULE_3__.makeRequest)({
                  url: destination,
                  type: "GET",
                  data: {}
                });

              case 3:
                resp = _context5.sent;
                console.log(resp);
                return _context5.abrupt("return", resp);

              case 6:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function retrieveAllAssigned(_x4) {
        return _retrieveAllAssigned.apply(this, arguments);
      }

      return retrieveAllAssigned;
    }()
  }]);

  return User;
}();

_defineProperty(User, "registry", {});

_defineProperty(User, "currentUserId", parseInt($('body').attr('data-user')));

_defineProperty(User, "currentUser", "user not loaded");



/***/ }),

/***/ "./frontend/src/env.js":
/*!*****************************!*\
  !*** ./frontend/src/env.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secure": () => (/* binding */ secure),
/* harmony export */   "subdomain": () => (/* binding */ subdomain),
/* harmony export */   "runningLocal": () => (/* binding */ runningLocal),
/* harmony export */   "userIconsPath": () => (/* binding */ userIconsPath),
/* harmony export */   "noImagePath": () => (/* binding */ noImagePath),
/* harmony export */   "endpoint": () => (/* binding */ endpoint),
/* harmony export */   "ruko_endpoint": () => (/* binding */ ruko_endpoint)
/* harmony export */ });
/* Environment variables for js */
//(subdomain === 'development' || subdomain === 'demo' || subdomain === 'younglives');
var subdomain = 'development';
var runningLocal = Boolean(parseInt($('body').attr('data-local'))); //console.log("Subdomain: ", subdomain);

var userIconsPath = 'https://' + subdomain + '.ourreachld.com/ourreach/uploads/users/';
var noImagePath = 'https://' + subdomain + '.ourreachld.com/ourreach/images/no_photo.png';
var endpoint = runningLocal ? 'http://localhost/' : 'https://' + subdomain + '.ourreachld.com/';
/* This is on the way out. Ignore for now. (Aug 22) */

var secure = false;
var ruko_endpoint = 'https://' + subdomain + '.ourreachld.com/ourreach/index.php?module=ldbackend/';


/***/ }),

/***/ "./frontend/src/milestone-template-data.js":
/*!*************************************************!*\
  !*** ./frontend/src/milestone-template-data.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "templateData": () => (/* binding */ templateData),
/* harmony export */   "educationSubcategories": () => (/* binding */ educationSubcategories),
/* harmony export */   "healthSubcategories": () => (/* binding */ healthSubcategories),
/* harmony export */   "housingSubcategories": () => (/* binding */ housingSubcategories),
/* harmony export */   "jobsSubcategories": () => (/* binding */ jobsSubcategories),
/* harmony export */   "moneySubcategories": () => (/* binding */ moneySubcategories),
/* harmony export */   "childrenSubcategories": () => (/* binding */ childrenSubcategories),
/* harmony export */   "otherSubcategories": () => (/* binding */ otherSubcategories)
/* harmony export */ });
/* An array containing all the template milestones and the associated goals and links.
 * This data will be stored in static tables in the database, but the structure of those tables
 * is still being developed. We may also change databases entirely.
 * Having the data in javascript will let us populate those tables more easily, for now, while we work out
 * the details.
 * 
 * The format of a milestone is as follows.
 *  {
 *    id: // Any unique string identifier for the milestone,
 *    category: // One of "Health", "Housing", "Children", "Jobs", "Money", "Education", and "Other". Any other value will default to "Other".
 *              // These values can be referenced using the "categories" master list.
 *    subcategory: // An object indicating the subcategory, as defined in subcategory lists below.
 *    name: // A string defining the name of the template milestone. The name must not be "Custom", as custom milestones are handled differently.
 *    sortOrder: // A number indicating the order that the template appears in the dropdown.
 * 
 *    links: // An array of objects of the form { url: "www.example.com", name: "An example link!" }. They define the suggested links that come with a milestone.
 * 
 *    measures: { // An object defining the measure type and options associated with the milestone. 
 *                type: // Either "dropdown", "freeform", or "none". Anything else defaults to "none".
 *        // If type is not "none", also include the following two:
 *                startLabel: // The prompt on the form offered for the starting measure field, e.g. "Where are you now on this milestone?"
 *                endLabel: // The prompt on the form offered for the ending measure field, e.g. "Where do you want to be when this milestone is done?"
 *                          // Try to keep these pretty short.
 *         // If type = "freeform", include these three:
 *                unit: // Optional: A string for the unit of the measure, e.g. "lb", "%", "mmHg"
 *                placeholderStartValue: // The greyed-out placeholder text in the input textbox for the starting measure,
 *                                       // before anything is written by the user, e.g. "Current status",
 *                placeholderEndValue: // The same for the ending measure, e.g. "End Status"
 *         // If type = "dropdown", include these four instead:
 *                startOptions: // Array of strings defining the options for the starting measure dropdown
 *                endOptions: // Array of strings defining the options for the ending measure dropdown.
 *                            // NOTE! If these are the same as the start options, they can be omitted.
 *                defaultStart: // A string for the default value in the starting measure dropdown. If it is present in startOptions, then that one will be autoselected.
 *                              // Otherwise, it will act like a placeholder, e.g. "Choose an option", and won't be selectable
 *                defaultEnd: // The analogous field for the ending options
 *              },
 * 
 *    goals: [// An array of goal objects, which are as follows:
 *             {
 *               name: // A string defining the goal name
 *               type: // "one-time", "daily", "weekly", "monthly", or "yearly". See goalBasis.
 *           // Then there are different options depending on type.
 *           // MOST OF THESE DO NOT NEED TO BE FILLED IN JUST NOW. Stick with name and type, unless you really want to fill out more.
 *           // If type = "one-time":
 *               deadline: // Presumably, no need to set a default deadline, so skip this field.
 *           // If type = "daily":
 *               frequency: // Positive integer number of days between repetitions. E.g. 1 would repeat every day, 2 every other day, etc.
 *               times: // A non-empty array of times of day, expressed in seconds since midnight, e.g. 12:00 noon would be 12*60*60.
 *           // If type = "weekly":
 *               days: { // An object mapping days to arrays of times, just as above. The days of the week are listed in the days variable. It's fine to omit days entirely.
 *                 mon : [13*60*60, 18*60*60], // An example
 *                 tue : [], // No times listed on Tuesday, same as not including Tuesday at all
 *                 fri : [16*60*60],
 *               }
 *           // If type = "monthly":
 *                monthly : // An array of numbers between 1 and 31, identifying days of the month (we'll expand this later). E.g. [1, 5, 10] for the first, fifth, and tenth of each month.
  *             }
 *           ],
 *  }
 *
 */

/* A list of categories, for consistent referencing. This does not need to change for the foreseeable future. */
var categories = {
  health: "Health",
  housing: "Housing",
  children: "Children",
  jobs: "Jobs",
  money: "Money",
  education: "Education",
  other: "Other"
};
/* A list of subcategories within Health. Add subcategories as needed.
 * We want the Subcategory field in the db to be consistent, so we always
 * refer to these master lists of subcategories in the templates. 
 * 
 * There must not be a "Custom" subcategory, as the custom ones are handled differently.
 * 
 * The key (e.g. main) is just used for easy referencing within this file.
 * The id field should be a unique numerical identifier among all health subcategories.
 * The name field is the string that will appear to the user.
 * The sortOrder field determines the order of these subcategories in the dropdown.
 */

var healthSubcategories = {
  main: {
    id: 0,
    name: "Main",
    sortOrder: 1
  },
  mental: {
    id: 1,
    name: "Mental Health",
    sortOrder: 2
  },
  custom: {
    id: 99,
    name: "Custom",
    sortOrder: 99
  }
};
/* Similar lists for all other categories. */

var housingSubcategories = {
  emergency: {
    id: 0,
    name: "Emergency Shelter",
    sortOrder: 1
  },
  transitional: {
    id: 1,
    name: "Transitional Housing",
    sortOrder: 2
  },
  current: {
    id: 2,
    name: "Stay in current home",
    sortOrder: 3
  },
  permanent: {
    id: 3,
    name: "Permanent Housing",
    sortOrder: 4
  },
  custom: {
    id: 99,
    name: "Custom",
    sortOrder: 99
  }
};
var childrenSubcategories = {
  prenatal: {
    id: 0,
    name: "Prenatal Specific",
    sortOrder: 1
  },
  birth: {
    id: 1,
    name: "From Birth Onward",
    sortOrder: 2
  },
  pediatrician: {
    id: 2,
    name: "Pediatrician well visits and vaccinations",
    sortOrder: 3
  },
  dentist: {
    id: 3,
    name: "Dentist visits",
    sortOrder: 4
  },
  custom: {
    id: 99,
    name: "Custom",
    sortOrder: 99
  }
};
var jobsSubcategories = {
  location: {
    id: 0,
    name: "Location",
    sortOrder: 1
  },
  income: {
    id: 1,
    name: "Income & Benefits",
    sortOrder: 2
  },
  schedule: {
    id: 2,
    name: "Schedule",
    sortOrder: 3
  },
  enjoyment: {
    id: 3,
    name: "Enjoyment",
    sortOrder: 4
  },
  custom: {
    id: 99,
    name: "Custom",
    sortOrder: 99
  }
};
var moneySubcategories = {
  budgeting: {
    id: 0,
    name: "Budgeting",
    sortOrder: 1
  },
  personal: {
    id: 1,
    name: "Personal Finance",
    sortOrder: 2
  },
  programs: {
    id: 2,
    name: "Income Programs",
    sortOrder: 3
  },
  custom: {
    id: 99,
    name: "Custom",
    sortOrder: 99
  }
};
var educationSubcategories = {
  level: {
    id: 0,
    name: "Education Level",
    sortOrder: 1
  },
  location: {
    id: 1,
    name: "Location",
    sortOrder: 2
  },
  schedule: {
    id: 2,
    name: "Schedule",
    sortOrder: 3
  },
  satisfaction: {
    id: 3,
    name: "Satisfaction",
    sortOrder: 4
  },
  custom: {
    id: 99,
    name: "Custom",
    sortOrder: 99
  }
};
var otherSubcategories = {
  program: {
    id: 0,
    name: "Provider Specific",
    sortOrder: 1
  },
  custom: {
    id: 99,
    name: "Custom",
    sortOrder: 99
  }
};
/* Repetition basis options for goals */

var goalBasis = {
  once: "one-time",
  daily: "daily",
  weekly: "weekly",
  monthly: "monthly",
  yearly: "yearly"
};
/* Measure types */

var measureData = {
  freeform: "freeform",
  dropdown: "dropdown",
  none: "none"
};
var optionLists = {
  shelterOptions: ["Living on street", "Traditional shelter", "Volunteer group shelter", "Faith congregation"],
  rapidRehousingOptions: ["Living on street", "Traditional shelter", "Volunteer group shelter", "Faith congregation", "Rapid Rehousing program"],
  transitionalHousingOptions: ["Living on street", "Traditional shelter", "Volunteer group shelter", "Faith congregation", "Transitional housing"],
  educationLevelsHighSchool: ["Some high school completed", "High school diploma"],
  educationLevelsGED: ["Some high school completed", "GED"],
  educationLevelsAssociates: ["Some high school completed", "GED", "High school diploma", "Trade/technical/vocational training", "Military with related training", "Associate's degree"],
  educationLevelsBachelors: ["Some high school completed", "GED", "High school diploma", "Trade/technical/vocational training", "Associate's degree", "Military with related training", "Bachelor's degree"],
  educationLevelsMilitary: ["Some high school completed", "GED", "High school diploma", "Trade/technical/vocational training", "Associate's degree", "Bachelor's degree", "Military with related training"],
  educationLevelsTraining: ["Some high school completed", "GED", "High school diploma", "Associate's degree", "Bachelor's degree", "Military with related training", "Trade/technical/vocational training"],
  educationLevelsPostgraduate: ["Some high school completed", "GED", "High school diploma", "Trade/technical/vocational training", "Associate's degree", "Bachelor's degree", "Military with related training", "Postgraduate title"],
  educationEnjoymentSomewhat: ["Workload not manageable", "Workload somewhat manageable"],
  educationEnjoymentFully: ["Workload not manageable", "Workload somewhat manageable", "Workload fully manageable"],
  peaceLevelOptions: ["1 (low)", "2", "3", "4", "5", "6", "7", "8", "9", "10 (high)"]
};
var templateData = [
/* Start of Health Milestones*/
{
  id: "preventive care",
  category: categories.health,
  subcategory: healthSubcategories.main,
  name: "Preventive care for this calendar year",
  sortOrder: 1,
  links: [{
    url: "",
    name: ""
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Schedule annual physical",
    description: "Call several months in advance to schedule my annual checkup, to make sure I have no underlying health issues or to address those quickly.",
    type: goalBasis.yearly
  }, {
    name: "Visit doctor for Annual Physical",
    description: "To make sure I have no underlying health issues or to address those quickly, an annual checkup is necessary.",
    type: goalBasis.once
  }, {
    name: "Schedule dentist visit for cleaning & check-up",
    description: "Call several months in advance to schedule my regular dentist cleaning and checkup. Good dental care helps with teeth, my smile, and other health issues.",
    type: goalBasis.daily,
    frequency: 180
  }, {
    name: "Visit dentist for cleaning & check-up",
    description: "Good dental care helps with teeth, my smile, and other health issues.",
    type: goalBasis.daily,
    frequency: 180
  }, {
    name: "Enroll in a stop smoking program",
    type: goalBasis.once
  }, {
    name: "Schedule mammogram",
    type: goalBasis.once
  }, {
    name: "Have mammogram",
    type: goalBasis.once
  }, {
    name: "Discuss contraceptive options with OB",
    type: goalBasis.once
  }, {
    name: "Take contraceptive",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Choose not to smoke today",
    type: goalBasis.daily
  }]
}, {
  id: "HbA1c",
  category: categories.health,
  subcategory: healthSubcategories.main,
  name: "Reach target HbA1c level",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=93",
    name: "Diabetes"
  }],
  measures: {
    type: measureData.freeform,
    startLabel: "What is your current HbA1c level?",
    endLabel: "What is your HbA1c goal?",
    unit: "%",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Ask family and friend(s) to support healthy food choices",
    description: "Adapting to a healthier lifestyle is easier with supportive friends and family.",
    type: goalBasis.once
  }, {
    name: "Sign up for nutrition plan",
    description: "A nutrition plan provide control over my diet and promotes a healthier lifestyle.",
    type: goalBasis.once
  }, {
    name: "Sign up for exercise plan",
    description: "An exercise plan will give me a consistent workout routine that will improve my health.",
    type: goalBasis.once
  }, {
    name: "Research places to buy discounted fruits and vegetables",
    description: "Places to buy discounted fruits and vegetables will help me improve my diet and health in a way that is affordable.",
    type: goalBasis.once
  }, {
    name: "Talk with family or friend(s) about diabetes",
    description: "Supportive family or friends can help me manage my diabetes.",
    type: goalBasis.once
  }, {
    name: "Attend diabetes support group",
    description: "A diabetes support group improves members' quality of life and can provide self-management tips.",
    type: goalBasis.once
  }, {
    name: "Schedule an eye exam",
    description: "Eye exams can check the health of my eyes and aid vision correction.",
    type: goalBasis.once
  }, {
    name: "Walk/Exercise for 30 minutes today",
    description: "Exercising is essential for the human body. Walking for 30 minutes a day can prevent serious health issues.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Drink less alcohol",
    description: "Drinking alcohol can lead to regretful decisions and liver problems. If I am pregnant, alcohol can damage my unborn baby. Alcoholic drinks also contain \"empty calories.\" Finding substitutes provides a healthier alternative to alcohol.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Sleep at least 6 hours total tonight",
    description: "Sleeping a satisfactory amount can lead to a sharper brain, a mood boost, and a healthier heart.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Take prescribed medication in AM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [12 * 60 * 60] // before noon

  }, {
    name: "Take prescribed medication in PM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [24 * 60 * 60] // before midnight

  }, {
    name: "Drink 6 glasses of water",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Eat 6 servings of fruits/vegetables today",
    description: "Fruits and vegetables are a good source for vitamins and minerals and contribute to a healthy balanced diet. They also help reduce my risk of heart disease and some cancers.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Write in my gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Meditate/Do deep breathing",
    description: "Meditating and deep breathing lowers stress levels, heart rate, and blood pressure.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Check blood sugar levels according to doctor",
    description: "To prevent emergencies & other long-term difficulties, I must take measures to keep blood sugar levels normal.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Check feet daily",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Plan 5 healthy recipies to cook this week",
    description: "A healthier lifestyle improves mental health and overall health. Cooking instead of buying meals can also save money.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-62&redirect_to=subentity&gotopage[1137]=1",
      name: "Cooking"
    }],
    type: goalBasis.weekly,
    days: {
      sun: [12 * 60 * 60]
    }
  }, {
    name: "Make weekly shopping list for healthy meals",
    type: goalBasis.weekly,
    days: {
      sun: [12 * 60 * 60]
    }
  }, {
    name: "Go grocery shopping",
    type: goalBasis.weekly,
    days: {
      sun: [12 * 60 * 60]
    }
  }, {
    name: "Monthly weight check",
    description: "Weighing myself regularly can help reach goals of weight loss, gain, or maintenance. It can also help detect other health issues.",
    type: goalBasis.monthly,
    days: [28]
  }]
}, {
  id: "blood sugar",
  category: categories.health,
  subcategory: healthSubcategories.main,
  name: "Reach target blood sugar level",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=93",
    name: "Diabetes"
  }],
  measures: {
    // Freeform example
    type: measureData.freeform,
    startLabel: "What is your current blood sugar level?",
    endLabel: "What is your blood sugar goal?",
    unit: "mg/dL",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Ask family and friend(s) to support healthy food choices",
    description: "Adapting to a healthier lifestyle is easier with supportive friends and family.",
    type: goalBasis.once
  }, {
    name: "Sign up for nutition plan",
    type: goalBasis.once
  }, {
    name: "Sign up for exercise plan",
    description: "An exercise plan will give me a consistent workout routine that will improve my health.",
    type: goalBasis.once
  }, {
    name: "Talk with family or friend(s) about diabetes",
    description: "Supportive family or friends can help me manage my diabetes.",
    type: goalBasis.once
  }, {
    name: "Schedule an eye exam",
    description: "Eye exams can check the health of my eyes and aid vision correction.",
    type: goalBasis.once
  }, {
    name: "Go to eye exam",
    description: "Eye exams can check the health of my eyes and aid vision correction.",
    type: goalBasis.once
  }, {
    name: "Walk/Exercise for 30 minutes today",
    description: "Exercising is essential for the human body. Walking for 30 minutes a day can prevent serious health issues.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Take prescribed medication in AM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [12 * 60 * 60] // before noon

  }, {
    name: "Take prescribed medication in PM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [24 * 60 * 60] // before midnight

  }, {
    name: "Drink less alcohol",
    description: "Drinking alcohol can lead to regretful decisions and liver problems. If I am pregnant, alcohol can damage my unborn baby. Alcoholic drinks also contain \"empty calories.\" Finding substitutes provides a healthier alternative to alcohol.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Sleep at least 6 hours total tonight",
    description: "Sleeping a satisfactory amount can lead to a sharper brain, a mood boost, and a healthier heart.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Eat 6 servings of fruits/vegetables today",
    description: "Fruits and vegetables are a good source for vitamins and minerals and contribute to a healthy balanced diet. They also help reduce my risk of heart disease and some cancers.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Write in my gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Meditate/Do deep breathing",
    description: "Meditating and deep breathing lowers stress levels, heart rate, and blood pressure.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Check blood sugar levels according to doctor",
    description: "To prevent emergencies & other long-term difficulties, I must take measures to keep blood sugar levels normal.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Check feet daily",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Plan 5 healthy recipies to cook this week",
    description: "A healthier lifestyle improves mental health and overall health. Cooking instead of buying meals can also save money.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-62&redirect_to=subentity&gotopage[1137]=1",
      name: "Cooking"
    }],
    type: goalBasis.weekly,
    days: {
      sun: [12 * 60 * 60]
    }
  }, {
    name: "Monthly weight check",
    description: "Weighing myself regularly can help reach goals of weight loss, gain, or maintenance. It can also help detect other health issues.",
    type: goalBasis.monthly,
    days: [28]
  }, {
    name: "Attend diabetes support group",
    description: "A diabetes support group improves members' quality of life and can provide self-management tips.",
    type: goalBasis.monthly,
    days: [28]
  }]
}, {
  id: "blood pressure",
  category: categories.health,
  subcategory: healthSubcategories.main,
  name: "Reach target blood pressure level",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=93",
    name: "Diabetes"
  }],
  measures: {
    // Freeform example
    type: measureData.freeform,
    startLabel: "What is your current blood pressure level?",
    endLabel: "What is your blood pressure goal?",
    unit: "mmHg",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Ask family and friend(s) to support healthy food choices",
    description: "Adapting to a healthier lifestyle is easier with supportive friends and family.",
    type: goalBasis.once
  }, {
    name: "Sign up for nutition plan",
    type: goalBasis.once
  }, {
    name: "Sign up for exercise plan",
    description: "An exercise plan will give me a consistent workout routine that will improve my health.",
    type: goalBasis.once
  }, {
    name: "Talk with family or friend(s) about hypertension",
    description: "Supportive family or friends can help me manage my hypertension by aiding my lifestyle and diet changes.",
    type: goalBasis.once
  }, {
    name: "Schedule an eye exam",
    description: "Eye exams can check the health of my eyes and aid vision correction.",
    type: goalBasis.once
  }, {
    name: "Go to eye exam",
    description: "Eye exams can check the health of my eyes and aid vision correction.",
    type: goalBasis.once
  }, {
    name: "Walk/Exercise for 30 minutes today",
    description: "Exercising is essential for the human body. Walking for 30 minutes a day can prevent serious health issues.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Take prescribed medication in AM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [12 * 60 * 60] // before noon

  }, {
    name: "Take prescribed medication in PM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [24 * 60 * 60] // before midnight

  }, {
    name: "Drink less alcohol",
    description: "Drinking alcohol can lead to regretful decisions and liver problems. If I am pregnant, alcohol can damage my unborn baby. Alcoholic drinks also contain \"empty calories.\" Finding substitutes provides a healthier alternative to alcohol.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Sleep at least 6 hours total tonight",
    description: "Sleeping a satisfactory amount can lead to a sharper brain, a mood boost, and a healthier heart.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Take aspirin as reccomended by doctor",
    type: goalBasis.daily
  }, {
    name: "Eat 6 servings of fruits/vegetables today",
    description: "Fruits and vegetables are a good source for vitamins and minerals and contribute to a healthy balanced diet. They also help reduce my risk of heart disease and some cancers.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Write in my gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Meditate/Do deep breathing",
    description: "Meditating and deep breathing lowers stress levels, heart rate, and blood pressure.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Check blood pressure levels according to doctor",
    description: "To prevent emergencies & other long-term difficulties, I must take measures to keep blood sugar levels normal.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Check feet daily",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Plan 5 healthy recipies to cook this week",
    description: "A healthier lifestyle improves mental health and overall health. Cooking instead of buying meals can also save money.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-62&redirect_to=subentity&gotopage[1137]=1",
      name: "Cooking"
    }],
    type: goalBasis.weekly,
    days: {
      sun: [12 * 60 * 60]
    }
  }, {
    name: "Monthly weight check",
    description: "Weighing myself regularly can help reach goals of weight loss, gain, or maintenance. It can also help detect other health issues.",
    type: goalBasis.monthly,
    days: [28]
  }, {
    name: "Attend hypertension support group",
    type: goalBasis.monthly,
    days: [28]
  }]
}, {
  id: "weight",
  category: categories.health,
  subcategory: healthSubcategories.main,
  name: "Reach target weight level",
  sortOrder: 5,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=62",
    name: "Nutrition"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=76",
    name: "Exercise & Sleep"
  }],
  measures: {
    type: measureData.freeform,
    startLabel: "What is your current weight?",
    endLabel: "What is your weight goal?",
    unit: "lbs",
    placeholderStartValue: "___",
    placeholderEndValue: "___"
  },
  goals: [{
    name: "Ask family and friend(s) to support healthy food choices",
    description: "Adapting to a healthier lifestyle is easier with supportive friends and family.",
    type: goalBasis.once
  }, {
    name: "Sign up for nutition plan",
    type: goalBasis.once
  }, {
    name: "Sign up for exercise plan",
    description: "An exercise plan will give me a consistent workout routine that will improve my health.",
    type: goalBasis.once
  }, {
    name: "Walk/Exercise for 30 minutes today",
    description: "Exercising is essential for the human body. Walking for 30 minutes a day can prevent serious health issues.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Take prescribed medication in AM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [12 * 60 * 60] // before noon

  }, {
    name: "Take prescribed medication in PM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [24 * 60 * 60] // before midnight

  }, {
    name: "Drink less alcohol",
    description: "Drinking alcohol can lead to regretful decisions and liver problems. If I am pregnant, alcohol can damage my unborn baby. Alcoholic drinks also contain \"empty calories.\" Finding substitutes provides a healthier alternative to alcohol.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Look up a new healthy recipe",
    description: "A healthier lifestyle improves mental health and overall health. Cooking instead of buying meals can also save money.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Sleep at least 6 hours total tonight",
    description: "Sleeping a satisfactory amount can lead to a sharper brain, a mood boost, and a healthier heart.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Eat 6 servings of fruits/vegetables today",
    description: "Fruits and vegetables are a good source for vitamins and minerals and contribute to a healthy balanced diet. They also help reduce my risk of heart disease and some cancers.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Write in my gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Meditate/Do deep breathing",
    description: "Meditating and deep breathing lowers stress levels, heart rate, and blood pressure.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Take a break from social media",
    description: "Designating a specific amount of time away from social media allows me to destress and become more productive.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Drink water instead of soda or juice",
    description: "Drinking water helps maximize physical performance, improve my energy levels and brain function, and can help prevent headaches. Also, water does not have calories, so drinking water instead of soda or juice can help control weight.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Eat 3 meals a day",
    description: "Eating 3 meals a day helps to maintain a healthy weight and to enjoy quality meals to get essential vitamins and minerals.",
    type: goalBasis.daily,
    frequency: 1,
    times: [8 * 60 * 60, 12 * 60 * 60, 18 * 60 * 60]
  }, {
    name: "Plan 5 healthy recipies to cook this week",
    description: "A healthier lifestyle improves mental health and overall health. Cooking instead of buying meals can also save money.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-62&redirect_to=subentity&gotopage[1137]=1",
      name: "Cooking"
    }],
    type: goalBasis.weekly,
    days: {
      sun: [12 * 60 * 60]
    }
  }, {
    name: "Monthly weight check",
    description: "Weighing myself regularly can help reach goals of weight loss, gain, or maintenance. It can also help detect other health issues.",
    type: goalBasis.monthly,
    days: [28]
  }]
}, {
  id: "BMI",
  category: categories.health,
  subcategory: healthSubcategories.main,
  name: "Reach target BMI",
  sortOrder: 6,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=62",
    name: "Nutrition"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=76",
    name: "Exercise & Sleep"
  }],
  measures: {
    type: measureData.freeform,
    startLabel: "What is your current BMI?",
    endLabel: "What is your BMI goal?",
    unit: "",
    placeholderStartValue: "___",
    placeholderEndValue: "___"
  },
  goals: [{
    name: "Ask family and friend(s) to support healthy food choices",
    description: "Adapting to a healthier lifestyle is easier with supportive friends and family.",
    type: goalBasis.once
  }, {
    name: "Sign up for nutition plan",
    type: goalBasis.once
  }, {
    name: "Sign up for exercise plan",
    description: "An exercise plan will give me a consistent workout routine that will improve my health.",
    type: goalBasis.once
  }, {
    name: "Walk/Exercise for 30 minutes today",
    description: "Exercising is essential for the human body. Walking for 30 minutes a day can prevent serious health issues.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Take prescribed medication in AM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [12 * 60 * 60] // before noon

  }, {
    name: "Take prescribed medication in PM",
    description: "Taking prescribed medication on time is important for treating temporary conditions, controlling chronic conditions, and overall long-term health.",
    type: goalBasis.daily,
    frequency: 1,
    // Every day (this is the alterntive condensed version)
    times: [24 * 60 * 60] // before midnight

  }, {
    name: "Drink less alcohol",
    description: "Drinking alcohol can lead to regretful decisions and liver problems. If I am pregnant, alcohol can damage my unborn baby. Alcoholic drinks also contain \"empty calories.\" Finding substitutes provides a healthier alternative to alcohol.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Look up a new healthy recipe",
    description: "A healthier lifestyle improves mental health and overall health. Cooking instead of buying meals can also save money.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-62&redirect_to=subentity&gotopage[1137]=1",
      name: "Cooking"
    }],
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Sleep at least 6 hours total tonight",
    description: "Sleeping a satisfactory amount can lead to a sharper brain, a mood boost, and a healthier heart.",
    type: goalBasis.daily
  }, {
    name: "Eat 6 servings of fruits/vegetables today",
    description: "Fruits and vegetables are a good source for vitamins and minerals and contribute to a healthy balanced diet. They also help reduce my risk of heart disease and some cancers.",
    type: goalBasis.daily
  }, {
    name: "Write in my gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily
  }, {
    name: "Meditate/Do deep breathing",
    description: "Meditating and deep breathing lowers stress levels, heart rate, and blood pressure.",
    type: goalBasis.daily
  }, {
    name: "Take a break from social media",
    description: "Designating a specific amount of time away from social media allows me to destress and become more productive.",
    type: goalBasis.daily
  }, {
    name: "Drink water instead of soda or juice",
    description: "Drinking water helps maximize physical performance, improve my energy levels and brain function, and can help prevent headaches. Also, water does not have calories, so drinking water instead of soda or juice can help control weight.",
    type: goalBasis.daily
  }, {
    name: "Eat 3 meals a day",
    description: "Eating 3 meals a day helps to maintain a healthy weight and to enjoy quality meals to get essential vitamins and minerals.",
    type: goalBasis.daily,
    frequency: 1,
    times: [8 * 60 * 60, 12 * 60 * 60, 18 * 60 * 60]
  }, {
    name: "Plan 5 healthy recipies to cook this week",
    description: "A healthier lifestyle improves mental health and overall health. Cooking instead of buying meals can also save money.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-62&redirect_to=subentity&gotopage[1137]=1",
      name: "Cooking"
    }],
    type: goalBasis.weekly,
    days: {
      sun: [12 * 60 * 60]
    }
  }, {
    name: "Monthly weight check",
    description: "Weighing myself regularly can help reach goals of weight loss, gain, or maintenance. It can also help detect other health issues.",
    type: goalBasis.monthly,
    days: [28]
  }]
}, {
  id: "peace",
  category: categories.health,
  subcategory: healthSubcategories.mental,
  name: "Reach desired level of day-to-day peacefulness",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=22",
    name: "Mental Health"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your current peace level?",
    endLabel: "What is your target peace level?",
    startOptions: optionLists.peaceLevelOptions,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Select Peace Level (1 is low, 10 is high)",
    defaultEnd: "Select Peace Level (1 is low, 10 is high)"
  },
  goals: [{
    name: "Find therapist or psychiatrist covered by health insurance",
    description: "A therapist or psychiatrist covered by my health insurance can help me with stress, anxiety, and how to make healthy changes to my life.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-54&action=download_attachment&preview=1&file=MTYyNzM4OTY5Ml9VbmhlYWx0aHlfSGVhbHRoeV9TaWduc18oMSkucGRm",
      name: "Unhealthy Relationship Signs"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-60&redirect_to=subentity&gotopage[1137]=1",
      name: "Relationships"
    }],
    type: goalBasis.once
  }, {
    name: "Ask family or friends to support mental health choices",
    description: "It is important to have encouragement and support from family members when making lifestyle changes for my mental health.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-54&action=download_attachment&preview=1&file=MTYyNzM4OTY5Ml9VbmhlYWx0aHlfSGVhbHRoeV9TaWduc18oMSkucGRm",
      name: "Unhealthy Relationship Signs"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-60&redirect_to=subentity&gotopage[1137]=1",
      name: "Relationships"
    }],
    type: goalBasis.once
  }, {
    name: "Set screen time limit for social media",
    description: "Limiting screen time improves mood and encourages physical and social development.",
    type: goalBasis.once
  }, {
    name: "Write in gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily
  }, {
    name: "Meditate/Do deep breathing for at least 60 seconds",
    description: "Meditating and deep breathing lowers stress levels, heart rate, and blood pressure. It can also foster calm and control.",
    type: goalBasis.daily
  }, {
    name: "Pray",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-58&redirect_to=subentity&gotopage[1137]=1",
      name: "Virtual Camp Leader Devotionals: Day 1"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-59&redirect_to=subentity&gotopage[1137]=1",
      name: "Virtual Camp Leader Devotionals: Day 2"
    }],
    type: goalBasis.daily
  }, {
    name: "Take a break from social media",
    description: "Taking a break from social media can improve my overall mood,  allow me to reconnect with the real world, and gain a lot of free time.",
    type: goalBasis.daily
  }, {
    name: "Take prescribed mental health medication",
    description: "Mental health medication can reduce the chemical imbalances in a person's brain and reduce symptoms.",
    type: goalBasis.daily
  }, {
    name: "Go for a walk",
    description: "Walking strengthens muscles, improves circulation, and can help my mood.",
    type: goalBasis.daily
  }, {
    name: "Talk with a friend or family member about challenges and/or joys",
    description: "Finding time to sit with family members allows for better relationships.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-54&action=download_attachment&preview=1&file=MTYyNzM4OTY5Ml9VbmhlYWx0aHlfSGVhbHRoeV9TaWduc18oMSkucGRm",
      name: "Unhealthy Relationship Signs"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-60&redirect_to=subentity&gotopage[1137]=1",
      name: "Relationships"
    }],
    type: goalBasis.weekly
  }, {
    name: "Practice handling a stressful situation",
    description: "Practicing handling a stressful situation like an upcoming difficult conversation will give me more confidence and reduce stress when handling it.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-54&action=download_attachment&preview=1&file=MTYyNzM4OTY5Ml9VbmhlYWx0aHlfSGVhbHRoeV9TaWduc18oMSkucGRm",
      name: "Unhealthy Relationship Signs"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-60&redirect_to=subentity&gotopage[1137]=1",
      name: "Relationships"
    }],
    type: goalBasis.weekly
  }, {
    name: "Go to one-on-one therapy session",
    description: "One-on-one therapy adds to my support network, helps manage symptoms, and facilitate lifestyle changes.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-54&action=download_attachment&preview=1&file=MTYyNzM4OTY5Ml9VbmhlYWx0aHlfSGVhbHRoeV9TaWduc18oMSkucGRm",
      name: "Unhealthy Relationship Signs"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-60&redirect_to=subentity&gotopage[1137]=1",
      name: "Relationships"
    }],
    type: goalBasis.weekly
  }, {
    name: "Go to family/couples therapy sessions",
    description: "Family/couple therapy improves family dynamics and relationships.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-54&action=download_attachment&preview=1&file=MTYyNzM4OTY5Ml9VbmhlYWx0aHlfSGVhbHRoeV9TaWduc18oMSkucGRm",
      name: "Unhealthy Relationship Signs"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-60&redirect_to=subentity&gotopage[1137]=1",
      name: "Relationships"
    }],
    type: goalBasis.weekly
  }, {
    name: "Read the Bible",
    description: "Reading the Bible gives wisdom, hope, and strengthens faith.",
    type: goalBasis.weekly
  }, {
    name: "Read a chapter of a book by my favourite author",
    description: "Reading a chapter of a favorite book can reduce stress, improve brain-power, and enable me to sleep better.",
    type: goalBasis.weekly
  }, {
    name: "Participate in faith congregation services",
    description: "Participating in faith congregation services helps build faith and community and is an opportunity to give back.",
    type: goalBasis.weekly
  }, {
    name: "Listen to inspiring music",
    description: "Listening to inspiring music can reduce stress, anxiety, and improves mood.",
    type: goalBasis.weekly
  }, {
    name: "Listen to worship music",
    description: "Worship music promotes faith, soothes the body, and improves mental health.",
    type: goalBasis.weekly
  }, {
    name: "Attend group support meetings",
    description: "Support groups can give encouragement and self-care tips.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-54&action=download_attachment&preview=1&file=MTYyNzM4OTY5Ml9VbmhlYWx0aHlfSGVhbHRoeV9TaWduc18oMSkucGRm",
      name: "Unhealthy Relationship Signs"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-60&redirect_to=subentity&gotopage[1137]=1",
      name: "Relationships"
    }],
    type: goalBasis.monthly
  }]
},
/* Start of Housing Milestones*/
{
  id: "faith shelter",
  category: categories.housing,
  subcategory: housingSubcategories.emergency,
  name: "Move to shelter through faith congregation",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=24",
    name: "Emergency Shelter-Transitional Housing"
  }],
  measures: {
    // Dropdown example
    type: measureData.dropdown,
    startLabel: "What is your living situation now?",
    endLabel: "What living situation are you aiming for?",
    startOptions: optionLists.shelterOptions,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Living on street",
    defaultEnd: "Faith Congregation"
  },
  goals: [{
    name: "Gather my belongings to take to the shelter",
    description: "It is important to have and keep track of my necessary belongings when changing locations.",
    type: goalBasis.once
  }, {
    name: "Calculate housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Check Provider's Corner for emergency housing options",
    description: "The Provider's Corner can lead me to resources that can be used when in need of emergency housing.",
    type: goalBasis.once
  }, {
    name: "Research and locate appropriate shelter",
    description: "Appropriate shelters depend on my needs, my location, and the organization's availability.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=24#First_Sub_Point_2",
      name: "Examples of Emergency Shelters"
    }],
    type: goalBasis.once
  }, {
    name: "Join Facebook housing groups",
    description: "Facebook housing groups can help me find a new home within my budget and needs.",
    type: goalBasis.once
  }, {
    name: "Ask church leaders for support and guidance",
    description: "Church leaders can give encouragement during hard times and support me in my next steps. ",
    type: goalBasis.once
  }, {
    name: "Call my local help hotline",
    description: "The ability to know when and where to seek for help is crucial. A help hotline may provide the support that family and friends cannot.",
    type: goalBasis.once
  }, {
    name: "Tell friends and family where I am",
    description: "It is important to let my friends and family know of my location and safety.",
    type: goalBasis.daily
  }, {
    name: "Make a daily account of all my belongings",
    description: "Making a daily account of all belongings can reduce stress, save time, and improve productivity. It will also help keep track of these when in the shelter.",
    type: goalBasis.daily
  }, {
    name: "Visit my local food bank",
    description: "Food banks provide me with food that my family and I need.",
    type: goalBasis.weekly
  }, {
    name: "Call friends and family",
    description: "Calling friends and family is a means of self-care to help me and my loved ones feel less isolated.",
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "volunteer shelter",
  category: categories.housing,
  subcategory: housingSubcategories.emergency,
  name: "Move to shelter through other volunteer group",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=24",
    name: "Emergency Shelter-Transitional Housing"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your living situation now?",
    endLabel: "What living situation are you aiming for?",
    startOptions: optionLists.shelterOptions,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Living on street",
    defaultEnd: "Volunteer group shelter"
  },
  goals: [{
    name: "Gather my belongings to take to the shelter",
    description: "It is important to have and keep track of my necessary belongings when changing locations.",
    type: goalBasis.once
  }, {
    name: "Calculate housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Research and locate appropriate shelter",
    description: "Appropriate shelters depend on my needs, my location, and the organization's availability.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=24#First_Sub_Point_2",
      name: "Examples of Emergency Shelters"
    }],
    type: goalBasis.once
  }, {
    name: "Join Facebook housing groups",
    description: "Facebook housing groups can help me find a new home within my budget and needs.",
    type: goalBasis.once
  }, {
    name: "Call my local help hotline",
    description: "The ability to know when and where to seek for help is crucial. A help hotline may provide the support that family and friends cannot.",
    type: goalBasis.once
  }, {
    name: "Tell friends and family where I am",
    description: "It is important to let my friends and family know of my location and safety.",
    type: goalBasis.daily
  }, {
    name: "Make a daily account of all my belongings",
    description: "Making a daily account of all belongings can reduce stress, save time, and improve productivity. It will also help keep track of these when in the shelter.",
    type: goalBasis.daily
  }, {
    name: "Visit my local food bank",
    description: "Food banks provide me with food that my family and I need.",
    type: goalBasis.weekly
  }, {
    name: "Call friends and family",
    description: "Calling friends and family is a means of self-care to help me and my loved ones feel less isolated.",
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "traditional shelter",
  category: categories.housing,
  subcategory: housingSubcategories.emergency,
  name: "Move to traditional shelter",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=24",
    name: "Emergency Shelter-Transitional Housing"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your living situation now?",
    endLabel: "What living situation are you aiming for?",
    startOptions: optionLists.shelterOptions,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Living on street",
    defaultEnd: "Traditional shelter"
  },
  goals: [{
    name: "Gather my belongings to take to the shelter",
    description: "It is important to have and keep track of my necessary belongings when changing locations.",
    type: goalBasis.once
  }, {
    name: "Calculate housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Research and locate appropriate shelter",
    description: "Appropriate shelters depend on my needs, my location, and the organization's availability.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=24#First_Sub_Point_2",
      name: "Examples of Emergency Shelters"
    }],
    type: goalBasis.once
  }, {
    name: "Join Facebook housing groups",
    description: "Facebook housing groups can help me find a new home within my budget and needs.",
    type: goalBasis.once
  }, {
    name: "Visit traditional shelter",
    description: "A traditional shelter can provide emergency shelter, along with services such as rehab and soup kitchens.",
    type: goalBasis.once
  }, {
    name: "Call my local help hotline",
    description: "The ability to know when and where to seek for help is crucial. A help hotline may provide the support that family and friends cannot.",
    type: goalBasis.once
  }, {
    name: "Make a daily account of all my belongings",
    description: "Making a daily account of all belongings can reduce stress, save time, and improve productivity. It will also help keep track of these when in the shelter.",
    type: goalBasis.daily
  }, {
    name: "Visit my local food bank",
    description: "Food banks provide me with food that my family and I need.",
    type: goalBasis.weekly
  }, {
    name: "Call friends and family",
    description: "Calling friends and family is a means of self-care to help me and my loved ones feel less isolated.",
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "rapid rehousing",
  category: categories.housing,
  subcategory: housingSubcategories.emergency,
  name: "Move to home through 'rapid rehousing' program",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=24",
    name: "Emergency Shelter-Transitional Housing"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your living situation now?",
    endLabel: "What living situation are you aiming for?",
    startOptions: optionLists.rapidRehousingOptions,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Living on street",
    defaultEnd: "Rapid Rehousing program"
  },
  goals: [{
    name: "Research local 'Rapid Rehousing' programs",
    description: "'Rapid rehousing' programs are transitional housing programs that can provide up to 24 months rental assistance.",
    type: goalBasis.once
  }, {
    name: "Calculate housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Visit a 'Rapid Rehousing' program office",
    description: "Visiting a 'rapid rehousing' program office can help me receive rental help and support from a 'rapid rehousing' program.",
    type: goalBasis.once
  }, {
    name: "Determine fees/costs of different programs",
    description: "It is important to determine fees/costs of different programs to select a program within my budget and future plans.",
    type: goalBasis.once
  }, {
    name: "Ask 'Rapid Rehousing' program staff for support and guidance",
    description: "'Rapid rehousing' program staff can give guidance and support services for families.",
    type: goalBasis.once
  }, {
    name: "Apply for 'Rapid Rehousing'",
    description: "'Rapid rehousing' programs are transitional housing programs that can provide up to 24 months rental assistance.",
    type: goalBasis.once
  }]
}, {
  id: "transitional housing",
  category: categories.housing,
  subcategory: housingSubcategories.transitional,
  name: "Move to transitional housing",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=24",
    name: "Emergency Shelter-Transitional Housing"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your living situation now?",
    endLabel: "What living situation are you aiming for?",
    startOptions: optionLists.transitionalHousingOptions,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Living on street",
    defaultEnd: "Transitional housing"
  },
  goals: [{
    name: "Research local 'Transitional housing' programs",
    description: "'Transitional Housing' programs can help provide housing for those transitioning out of homelessness.",
    type: goalBasis.once
  }, {
    name: "Calculate housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Visit a 'transitional housing' program office",
    description: "'Transitional Housing' programs can help provide housing for those transitioning out of homelessness.",
    type: goalBasis.once
  }, {
    name: "Determine fees/costs of different programs",
    description: "It is important to determine fees/costs of different programs to select a program within my budget and future plans.",
    type: goalBasis.once
  }, {
    name: "Ask 'transitional housing' program staff for support and guidance",
    description: "'Transitional housing' program staff can give guidance and support services for families.",
    type: goalBasis.once
  }, {
    name: "Apply for 'Transitional housing'",
    description: "'Transitional Housing' programs can help provide housing for those transitioning out of homelessness.",
    type: goalBasis.once
  }]
}, {
  id: "rental assistance",
  category: categories.housing,
  subcategory: housingSubcategories.current,
  name: "Recieve rental assistance",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=26",
    name: "Rental Assistance/Mediation"
  }],
  measures: {
    type: measureData.freeform,
    startLabel: "How much rental assistance do you currently recieve?",
    endLabel: "How much rental assistance do you need?",
    unit: "$",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Calculate housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Look up local, state, and federal resources",
    description: "Local, state, and federal resources can help with rental assistance.",
    type: goalBasis.once
  }, {
    name: "Apply for voucher programs",
    description: "A voucher program is a federal program assisting those in need of rental assistance.",
    type: goalBasis.once
  }, {
    name: "Contact public housing agency",
    description: "The public housing agency can provide low rent or free and safe rental housing.",
    type: goalBasis.once
  }, {
    name: "Contact a housing counseling center",
    description: "A housing counselor can help me determine the best rental assistance program for me.",
    type: goalBasis.once
  }, {
    name: "Get income verification",
    description: "Income verification can include pay stubs or other pay verification, such as last year's tax returns, a letter from employer, invoices, etc.",
    type: goalBasis.once
  }, {
    name: "Get proof of hardship",
    description: "Some rental assistance programs require showing proof of hardship, like copies of medical bills.",
    type: goalBasis.once
  }, {
    name: "Gather materials needed to apply for rental assistance",
    description: "When applying for rental assistance it is important to review my budget and check my eligibility for different programs.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=26",
      name: "Applying for Rental Assistance"
    }],
    type: goalBasis.weekly
  }, {
    name: "Research local congregations and other organizations",
    description: "Local congregations and other organizations may offer help with rental assistance for those in need.",
    type: goalBasis.once
  }, {
    name: "Attend community meeting on housing issues",
    description: "Community meetings can give me advice and resources when dealing with housing issues.",
    type: goalBasis.once
  }]
}, {
  id: "mediate rent",
  category: categories.housing,
  subcategory: housingSubcategories.current,
  name: "Mediate rent with landlord",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=26",
    name: "Rental Assistance/Mediation"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "$",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Calculate housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Contact a tenant's rights group",
    description: "A tenant's right group can help me work through a dispute with my landlord regarding rent, payments, or other housing concerns.",
    type: goalBasis.once
  }, {
    name: "Arrange for lead paint test",
    description: "Lead paint can be dangerous. A lead paint test may be important to share with tenant's rights group when working through a dispute with my landlord.",
    type: goalBasis.once
  }, {
    name: "Find a local mediation service",
    description: "A local mediation service can help me reach a resolution when having trouble with a landlord and avoid a court battle.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=26#Fourth_Point_Header",
      name: "Landlord Mediation Service Steps"
    }],
    type: goalBasis.once
  }, {
    name: "Get income verification",
    description: "Income verification can include pay stubs or other pay verification, such as last year's tax returns, a letter from employer, invoices, etc.",
    type: goalBasis.once
  }, {
    name: "Get proof of hardship",
    description: "When mediating with my landlord, I may need to show proof of hardship, like copies of medical bills.",
    type: goalBasis.once
  }, {
    name: "Attend community meeting on housing issues",
    description: "Community meetings can give me advice and resources when dealing with housing issues.",
    type: goalBasis.once
  }, {
    name: "Gather materials needed to engage in landlord mediation",
    description: "When engaging in landlord mediation it is important to make sure I have all materials and supporting documents.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=26",
      name: "Landlord Mediation Steps"
    }],
    type: goalBasis.monthly
  }]
}, {
  id: "mortgage assistance",
  category: categories.housing,
  subcategory: housingSubcategories.current,
  name: "Recieve mortgage assistance",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=32#First_Point_Header",
    name: "Mortgage Assistance/Restructuring"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "$",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Make appointment with bank",
    description: "Making an appointment with the bank will help me review my savings, my financial history, and potential for a mortgage loan.",
    type: goalBasis.once
  }, {
    name: "Contact a housing counselor approved by the US Department of Housing",
    description: "A housing counselor can help me determine the best mortgage assistance program or loan for me.",
    type: goalBasis.once
  }, {
    name: "Contact lender to discuss difficulty making payments",
    description: "Talking with my lender about my current financial situation could lead to the lender giving suggestions.",
    type: goalBasis.once
  }, {
    name: "Review budget",
    description: "Reviewing my budget can help me determine which programs to apply for and the kind of assistance that would be most helpful.",
    type: goalBasis.once
  }, {
    name: "Apply for federal mortgage assistance programs",
    description: "Federal mortgage assistance programs can help me financially with my mortgage in times of need; some have certain requirements.",
    type: goalBasis.once
  }, {
    name: "Apply for foreclosure mediation programs",
    description: "Foreclosure mediation programs can allow me when facing a foreclosure to receive help from housing counselors to resolve a loan delinquency.",
    type: goalBasis.once
  }, {
    name: "Research local congregations and other organizations",
    description: "Local congregations and other organizations may offer help with mortgage assistance for those in need.",
    type: goalBasis.once
  }, {
    name: "Get income verification",
    description: "Income verification can include pay stubs or other pay verification, such as last year's tax returns, a letter from employer, invoices, etc.",
    type: goalBasis.once
  }, {
    name: "Get proof of hardship",
    description: "When searching for mortgage assistance, I may need to show proof of hardship, like copies of medical bills.",
    type: goalBasis.once
  }, {
    name: "Attend community meeting on housing issues",
    description: "Community meetings can give me advice and resources when dealing with housing issues.",
    type: goalBasis.once
  }, {
    name: "Study mortgage rights",
    description: "It is important to know mortgage rights to determine if there are any violations of the Fair Housing Act  based on sex, religion, race, etc.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=42",
      name: "Fair Housing Laws"
    }],
    type: goalBasis.weekly
  }, {
    name: "Open and regularly respond to mail from lender",
    description: "Responding in timely way to a lender indicates the importance of communication and how it is to do business with me. Also, this will help me not to miss deadlines.",
    type: goalBasis.weekly
  }]
}, {
  id: "restructure mortgage",
  category: categories.housing,
  subcategory: housingSubcategories.current,
  name: "Restructure mortgage",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=32#First_Point_Header",
    name: "Mortgage Assistance/Restructuring"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "$",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Review qualifications for mortgage resctructuring programs",
    description: "Some federally-run mortgage restructuring programs have certain requirements I should know.",
    type: goalBasis.once
  }, {
    name: "Apply for federal restructuring programs",
    description: "Federal restructuring programs assist me with my mortgage by making the monthly payments more affordable.",
    type: goalBasis.once
  }, {
    name: "Contact lender to discuss options",
    description: "Lenders can help me make a well-informed decision when searching for mortgage restructuring programs.",
    type: goalBasis.once
  }, {
    name: "Get income verification",
    description: "Income verification can include pay stubs or other pay verification, such as last year's tax returns, a letter from employer, invoices, etc.",
    type: goalBasis.once
  }, {
    name: "Get proof of hardship",
    description: "When searching for mortgage restructuring, I may need to show proof of hardship, like copies of medical bills.",
    type: goalBasis.once
  }, {
    name: "Attend community meeting on housing issues",
    description: "Community meetings can give me advice and resources when dealing with housing issues.",
    type: goalBasis.once
  }, {
    name: "Study mortgage rights",
    description: "It is important to know mortgage rights to determine if there are any violations of the Fair Housing Act  based on sex, religion, race, etc.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=42",
      name: "Fair Housing Laws"
    }],
    type: goalBasis.weekly
  }, {
    name: "Open and regularly respond to mail from lender",
    description: "Responding in timely way to a lender indicates the importance of communication and how it is to do business with me. Also, this will help me not to miss deadlines.",
    type: goalBasis.weekly
  }]
}, {
  id: "rent home",
  category: categories.housing,
  subcategory: housingSubcategories.permanent,
  name: "Rent a home",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=28",
    name: "Renting a Home"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Calculate my housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Join Facebook housing groups",
    description: "Facebook housing groups can help me find a new home within my budget and needs.",
    type: goalBasis.once
  }, {
    name: "Ask landlord about reduced rent",
    description: "Asking my landlord about reduced rent can be a solution without any outside mediation.",
    type: goalBasis.once
  }, {
    name: "Make appointment with rental affordable housing program",
    description: "Rental affordable housing programs offer me lower rental payments.",
    type: goalBasis.once
  }, {
    name: "Visit an Open House",
    description: "An Open House can give me an idea if a house meets my needs and fits within my budget.",
    type: goalBasis.once
  }, {
    name: "Visit rental apts/houses",
    description: "Visiting rental apartments and houses can give me an idea if a house meets my needs and fits within my budget.",
    type: goalBasis.once
  }, {
    name: "Check how far rental is from work, school, childcare, stores, and family",
    description: "It is important to know the distance my rental is from necessary places like work, school, child care, stores, and family.",
    type: goalBasis.once
  }, {
    name: "Make appointment with bank",
    description: "It can be helpful to discuss my financial situation and savings with the bank when looking to rent a home.",
    type: goalBasis.once
  }, {
    name: "Apply to a different housing development",
    description: "A different housing development can improve my life and fulfill more needs for my family.",
    type: goalBasis.daily
  }, {
    name: "Save for down payment",
    description: "A down payment is a set price needed to be paid up front when renting a home.",
    type: goalBasis.weekly
  }, {
    name: "Search for rental apts/houses online",
    description: "Searching for rentals online can help me discover future homes.",
    type: goalBasis.daily,
    frequency: 2
  }, {
    name: "Search for rental apts/houses in the newspapers",
    description: "Searching for rentals in newspapers can help me discover future homes.",
    type: goalBasis.daily,
    frequency: 2
  }, {
    name: "Apply for an apartment",
    description: "Applying for an apartment is an opportunity to find a home within my budget and needs.",
    type: goalBasis.daily,
    frequency: 2
  }, {
    name: "Respond to rental listings",
    description: "Responding to rental listing is an opportunity to find a home within my budgets and needs as they come out.",
    type: goalBasis.daily,
    frequency: 2
  }, {
    name: "Compare rental apts/houses on real-estate app ",
    description: "Comparing rentals on real-estate apps such as Zillow to find the best apt/house for my budget and needs.",
    ttype: goalBasis.daily,
    frequency: 2
  }, {
    name: "Search for rental apts/houses on Facebook Marketplace and Craigslist",
    description: "Searching for rentals on Facebook Marketplace and Craigslist can help me discover future homes.",
    type: goalBasis.daily,
    frequency: 2
  }, {
    name: "Ask friends about rental apartment/house prices",
    description: "Friends can give insights on prices of rental apt/houses that they know of.",
    type: goalBasis.daily,
    frequency: 2
  }]
}, {
  id: "buy home",
  category: categories.housing,
  subcategory: housingSubcategories.permanent,
  name: "Buy a home",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=36",
    name: "Buying a Home"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Calculate my housing budget",
    description: "Calculating my housing budget will help me decide where I can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Join Facebook housing groups",
    description: "Facebook housing groups can help me find a new home within my budget and needs.",
    type: goalBasis.once
  }, {
    name: "Visit an Open House",
    description: "An Open House can give me an idea if a house meets my needs and fits within my budget.",
    type: goalBasis.once
  }, {
    name: "Check my credit score",
    description: "Higher credit scores can make it easier for me to buy a home.",
    type: goalBasis.once
  }, {
    name: "Make appointment with affordable housing purchase program",
    description: "Affordable housing purchase programs are homes that I can afford through having support from federal, state, or local government.",
    type: goalBasis.once
  }, {
    name: "Find a real estate agent",
    description: "A real estate agent is a person who represents sellers or buyers in real estate transactions.",
    type: goalBasis.once
  }, {
    name: "Make appointment with bank",
    description: "It is important to discuss my financial situation and savings with the bank when looking to buy a home.",
    type: goalBasis.once
  }, {
    name: "Check how far house is from work, school, childcare, stores, and family",
    description: "It is important to know the distance my desired house is from necessary places like work, school, child care, stores, and family.",
    type: goalBasis.once
  }, {
    name: "Check for household safety hazards in desired apt/house",
    description: "It is important to consider household safety hazards when deciding to rent an apt/house.",
    type: goalBasis.once
  }, {
    name: "Arrange for lead paint test in desired home",
    description: "Arranging a lead paint test in desired home will avoid potential for lead dust that could poison my family.",
    type: goalBasis.once
  }, {
    name: "Arrange for house inspection",
    description: "A housing inspection allows me to learn about major or minor issues that comes with my desired home.",
    type: goalBasis.once
  }, {
    name: "Attend community meeting on housing issues",
    description: "Community meetings can give me advice and resources when dealing with housing issues.",
    type: goalBasis.once
  }, {
    name: "Search online for apts/houses for sale",
    description: "Searching for apartments/houses for sale online can help me discover future homes.",
    type: goalBasis.weekly
  }, {
    name: "Search in newspapers for appartments/houses for sale",
    description: "Searching for apartments/houses for sale in newspapers can help me discover future homes.",
    type: goalBasis.weekly
  }, {
    name: "Respond to housing listings",
    description: "Responding to a housing listing is an opportunity to find a home within my budgets and needs as they come out.",
    type: goalBasis.weekly
  }, {
    name: "Ask friends about apt/house prices",
    description: "Friends can give insights on prices of apts/houses for sale that they know of.",
    type: goalBasis.weekly
  }, {
    name: "Compare appartments/houses on real-estate app",
    description: "Comparing apts/houses on real-estate apps such as Zillow will help me find the best apt/house for my budget and needs.",
    type: goalBasis.weekly
  }]
}, {
  id: "supportive hosuing",
  category: categories.housing,
  subcategory: housingSubcategories.permanent,
  name: "Find permanent supportive housing",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=132",
    name: "Creating a Happy Home"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=36",
    name: "Buying a Home"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=28",
    name: "Renting a Home"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Research local 'supportive housing' programs",
    description: "'Supportive housing' programs combine affordable housing with mental health services and involvement in community life.",
    type: goalBasis.once
  }, {
    name: "Calculate my housing budget",
    description: "Calculating my housing budget will help me decide where me can live that fits my needs.",
    type: goalBasis.once
  }, {
    name: "Visit a 'supportive hosuing' program office",
    description: "'Supportive housing' programs combine affordable housing with mental health services and involvement in community life.",
    type: goalBasis.once
  }, {
    name: "Determine fees/costs of different programs",
    description: "It is important to determine fees/costs of different programs to select a program within my budget and future plans.",
    type: goalBasis.once
  }, {
    name: "Ask 'supportive housing' program staff for support and guidance",
    description: "'Supportive housing' programs can provide mental health services, support, and guidance.",
    type: goalBasis.once
  }, {
    name: "Apply for 'supportive housing'",
    description: "'Supportive housing' programs combine affordable housing with mental health services and involvement in community life.",
    type: goalBasis.once
  }, {
    name: "Attend community meeting on 'supportive housing'",
    description: "A community meeting on 'supportive housing' can give me insight on the details of living in supportive housing.",
    type: goalBasis.once
  }]
},
/* Start of Children Milestones*/
{
  id: "deliver baby",
  category: categories.children,
  subcategory: childrenSubcategories.prenatal,
  name: "Deliver a healthy baby",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=151",
    name: "Expecting a Baby"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Talk with care provider about healthy foods",
    description: "Healthy foods are essential for good health and nutrition.",
    type: goalBasis.once
  }, {
    name: "Ask family or friend to support healthy food choices",
    description: "Adapting to a healthier lifestyle is easier with supportive friends and family. ",
    type: goalBasis.once
  }, {
    name: "Enroll in a 'stop smoking' plan for pregnancy",
    description: "Smoking during pregnancy highly increases risk of health problems for developing babies.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Make sure I am up to date on immunizations",
    description: "Immunizations not only protect me, but also my baby from diseases.",
    type: goalBasis.once
  }, {
    name: "Ask doctor about how current prescription medications may affect the baby",
    description: "It is important to know current prescription medications are safe and won't harm my baby.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.once
  }, {
    name: "Tour the hospital and delivery ward",
    description: "It is important to tour the hospital and delivery ward to become more familiar and reduce stress.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Complete prenantal genetic testing",
    description: "Parental genetic testing refers to test done during pregnancy to screen or diagnose a birth defect.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Learn about family health history with partner",
    description: "Learning about family health history with partner can help me identify any potential common disorders with my baby.",
    type: goalBasis.once
  }, {
    name: "Schedule self-care",
    description: "Scheduling self-care allows time to make sure that I am healthy and happy.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Research signs of labor",
    description: "Research signs of labor will inform me to when to call OB / go to hospital.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Register for childbirth class",
    description: "Childbirth classes offer my partner or labor coach an opportunity to understand childbirth and support me during labor.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Register for breastfeeding class",
    description: "A breastfeeding class will provide a comprehensive foundation of knowledge regarding breastfeeding.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Register for prenatal exercise class (such as yoga)",
    description: "A prenatal exercise class can reduce stress, give me energy, and increase mood.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Write up my birth plan",
    description: "A birth plan communicate my wishes during my labor and after the birth of my baby.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Choose pediatrician to visit baby in hospital",
    description: "A pediatrician when visitng my baby can diagnose and treat my baby with any disorder or infection. ",
    type: goalBasis.once
  }, {
    name: "Eliminate alcohol & other unprescribed drugs",
    description: "Alcohol and other unprescribed drugs can result in chronic diseases and serious problems.",
    type: goalBasis.daily
  }, {
    name: "Practice deep breathing",
    description: "Deep breathing decreases stress, lowers blood pressure, and relieves pain.",
    type: goalBasis.daily
  }, {
    name: "Read at least 15 minutes of pregnancy book",
    description: "Understanding pregnancy will explain changes and keep me more informed.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily,
    frequency: 2
  }, {
    name: "How am I feeling today? Call the doctor if I think what I am feeling isn't normal",
    description: "It is important to check up on how I am feeling and respond accordingly.",
    type: goalBasis.daily
  }, {
    name: "Follow 'stop smoking' plan",
    description: "Smoking during pregnancy highly increases risk of health problems for developing babies.",
    type: goalBasis.daily
  }, {
    name: "Sing to unborn baby",
    description: "Singing to my unborn baby develops my awareness of the baby and also helps her recognize patterns and my voices later.",
    type: goalBasis.daily
  }, {
    name: "Talk to unborn baby",
    description: "Talking to unborn baby can help baby develop familiarity and increases our bond.",
    type: goalBasis.daily
  }, {
    name: "Make time for healthy friendships",
    description: "It is important to maintain and grow friendships.",
    type: goalBasis.weekly
  }, {
    name: "Go to prenatal medical appointments",
    description: "Prenatal medical appointments can allow me to receive general guidance, ask questions, and communicate about the pregnancy.",
    type: goalBasis.weekly
  }, {
    name: "Go to prenatal exercise classes (such as yoga)",
    description: "A prenatal exercise class can reduce stress, give me energy, and increase mood.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Go to breastfeeding classes",
    description: "A breastfeeding class will provide a comprehensive foundation of knowledge regarding breastfeeding.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "prepare home",
  category: categories.children,
  subcategory: childrenSubcategories.prenatal,
  name: "Prepare for baby coming home",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=169",
    name: "Preparing Home for Safe Sleep"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=170",
    name: "Preparing Home for Other Safety"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Baby-proof house/apartment",
    description: "Baby-proofing house/apartment will keep baby safe and prevent injuries.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.once
  }, {
    name: "Arrange for lead paint test",
    description: "Arranging a lead paint test in desired home will avoid potential for lead dust that could poison my family.",
    type: goalBasis.once
  }, {
    name: "Prepare a safe sleep area for baby",
    description: "Preparing a safe sleeping area for baby will reduce chance of injury or death.",
    links: [{
      url: "https://demo.ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=169",
      name: "Safe Sleeping Environment Information"
    }],
    type: goalBasis.once
  }, {
    name: "Set up changing supplies",
    description: "Setting up changing supplies will keep them organized and reduce stress.",
    type: goalBasis.once
  }, {
    name: "Wash, fold, and hang baby supplies",
    description: "It is important to keep my baby's supplies clean and organized.",
    type: goalBasis.once
  }, {
    name: "Set up area for baby's items",
    description: "Setting up area for my baby's items will keep them organized and reduce stress.",
    type: goalBasis.once
  }, {
    name: "Prepare meals and put them in a freezer",
    description: "Preparing meals and putting them in a freezer will keep them prepared when I need to feed the baby and reduce stress.",
    type: goalBasis.once
  }, {
    name: "Research resources for safe baby items that are free/discounted",
    description: "Resources for safe baby items that are free/discounted will allow me to provide items my baby needs in an affordable way.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Register all new baby items for recalls",
    description: "Registering my new baby's items for recalls will allow manufactureres to contract me directly if an item has been recalled.",
    type: goalBasis.once
  }, {
    name: "Research breast pumps covered by insurance",
    description: "A breast pump is a device for drawing milk from your breast's by suction.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Plan how to travel to pediatrician for baby's first visit 2 days after discharge from hospital",
    description: "It is important to know how to travel for pediatrician for baby's 1st visit 2 days after discharge from hospital so the pediatrican can check the health of my baby and reduce stress.",
    type: goalBasis.once
  }, {
    name: "Get car seat if baby will be travelling in a car from hospital (even taxi)",
    description: "A car seats protects my baby from any crashes or car accident.",
    type: goalBasis.once
  }, {
    name: "Install car seat in car in which baby will be travelling from hospital",
    description: "A car seat protects my baby from any crashes or car accident.",
    type: goalBasis.once
  }, {
    name: "Read at least 15 minutes about child development",
    description: "It is important to learn and be prepared for my child's development.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }]
}, {
  id: "raise child",
  category: categories.children,
  subcategory: childrenSubcategories.birth,
  name: "Raise a happy & healthy child",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=150",
    name: "After Baby's Born"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Research support meetings for parents",
    description: "Parent support meetings can help me develop positive parenting solutions.",
    type: goalBasis.once
  }, {
    name: "Talk about family rules with my kids",
    description: "Talking family rules with my kids helps them understand what behaviors are okay.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.once
  }, {
    name: "Attend parent/guardian group meeting at school",
    description: "Parent/guardian group meetings at school can give me advise and ",
    type: goalBasis.once
  }, {
    name: "Check library programs for ages of my kids",
    description: "Library programs for ages of my kids can help my kids' literacy skills and promote lifelong learning.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.once
  }, {
    name: "Check online resources for at-home learning",
    description: "Online resources for at-home-learning can help my child develop new skills and learn new information from home.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.once
  }, {
    name: "Have a family game/movie night",
    description: "Family game/movie night can allow my kids to develop social skills and an opportunity to bond with their family.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-52&redirect_to=subentity&gotopage[1137]=1",
      name: "Parenting Tips"
    }],
    type: goalBasis.once
  }, {
    name: "Establish a bedtime routine",
    description: "A bedtime routine (e.g., skin care, song, book, then bed) gives my child a sense of security and helps him or her fall asleep on time.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }, {
    name: "Read for 20 minutes with children",
    description: "Reading with my child helps her or him develop language and listening skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }, {
    name: "Play one-on-one for 30 minutes",
    description: "Playing one-on-one with my child has physical benefits and strengthens relationships.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-52&redirect_to=subentity&gotopage[1137]=1",
      name: "Parenting Tips"
    }],
    type: goalBasis.daily
  }, {
    name: "Exercise together for 20 minutes",
    description: "Exercising with my child has physical benefits and strengthens relationships.",
    type: goalBasis.daily
  }, {
    name: "Have dinner as a family",
    description: "Having dinner as a family leads to better academic performance and higher self-esteem.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-52&redirect_to=subentity&gotopage[1137]=1",
      name: "Parenting Tips"
    }],
    type: goalBasis.daily
  }, {
    name: "Pray as a family",
    description: "Praying as a family enables family members to address stress and bond with one another in faith.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-52&redirect_to=subentity&gotopage[1137]=1",
      name: "Parenting Tips"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-58&redirect_to=subentity&gotopage[1137]=1",
      name: "Virtual Camp Leader Devotionals: Day 1"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-59&redirect_to=subentity&gotopage[1137]=1",
      name: "Virtual Camp Leader Devotionals: Day 2"
    }],
    type: goalBasis.daily
  }, {
    name: "Help my child/ren with homework",
    description: "Helping child/ren with homework can improve their understanding of the material and learn better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }, {
    name: "Talk to my child about all that's going on",
    description: "Talking with my child helps him or her build language and learn more about the world.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }, {
    name: "Keep the TV turned off while my baby is around",
    description: "Interacting and playing with others helps babies learn about the world.",
    type: goalBasis.daily
  }, {
    name: "Limit screen time",
    description: "Less screen time (less than 1 hour for children and none for babies under 2) encourages healthy physical and social development.",
    type: goalBasis.daily
  }, {
    name: "Tummy time for babies after each feeding",
    description: "Tummy time for my baby encourages development of the core muscles of the neck, back, and shoulder, and helps the baby's visual, sensory, and motor development.",
    type: goalBasis.daily
  }, {
    name: "Play stacking/building games",
    description: "Stacking/building games help my child develop hand eye coordination and blance.",
    type: goalBasis.weekly
  }, {
    name: "Play singing/clapping games",
    description: "Singing/clapping games help my child develop motor and cognitive skills.",
    type: goalBasis.weekly
  }, {
    name: "Have my child/ren help in household tasks",
    description: "Child/ren helping in household tasks promotes work ethic and reduce stress from me.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-52&redirect_to=subentity&gotopage[1137]=1",
      name: "Parenting Tips"
    }],
    type: goalBasis.daily
  }, {
    name: "Do arts and crafts with child/ren",
    description: "Arts and crafts give child/ren an opportunity to learn and improve their skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Do storytelling with child/ren",
    description: "Storytelling with child/ren help my children get to know sounds, word, and language.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.weekly
  }, {
    name: "Safely visit a park",
    description: "Visiting a park encourages children to have healthy physical and social development.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Go to support meeting for parents",
    description: "Parent support meetings can help develop positive parenting solutions.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "raise newborn",
  category: categories.children,
  subcategory: childrenSubcategories.birth,
  name: "Raise a happy & healthy newborn (0-2 months)",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=150",
    name: "After Baby's Born"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Discuss with care provider whether family & friends will be allowed to visit",
    description: "It is important to know if it is safe for family and friends to visit after my baby's birth. ",
    type: goalBasis.once
  }, {
    name: "Talk with familly & friends about whether they will be allowed to visit",
    description: "It is important to discuss if it is safe for family and friends to visit after my baby's birth. ",
    type: goalBasis.once
  }, {
    name: "Make an appointment with a lactation consultant",
    description: "A lactation consultant can help address any of my concerns and make any adjustments.",
    type: goalBasis.once
  }, {
    name: "Make sure pediatrician visits baby in hospital or birth center",
    description: "A pediatrician when visitng my baby can diagnose and treat my baby with any disorder or infection. ",
    type: goalBasis.once
  }, {
    name: "Go to pediatrician appointment less than 2 days after hospital/birth center discharge",
    description: "Pediatrician appointment less than 2 days after hospital will check my baby for jaundice and health conditions not detected at the hospital.",
    type: goalBasis.once
  }, {
    name: "Go to 1 month pediatrician appointment",
    description: "The 1 month pediatrician appointment will chech if my baby is developing and growing.",
    type: goalBasis.once
  }, {
    name: "Go to 2 month pediatrician appointment",
    description: "The 2 month pediatrician appointment is where my baby will receive necessary vaccines.",
    type: goalBasis.once
  }, {
    name: "Make sure baby's sleeping area is safe",
    description: "Preparing a safe sleeping area for baby will reduce chance of injury or death.",
    links: [{
      url: "https://demo.ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=169",
      name: "Safe Sleeping Environment Information"
    }],
    type: goalBasis.once
  }, {
    name: "Research breastfeeding support group",
    description: "A breastfeeding class will provide a comprehensive foundation of knowledge regarding breastfeeding.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Research parent support group",
    description: "Parent support meetings can help me develop positive parenting solutions.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Research tongue ties in babies",
    description: "Tongue ties in babies prevents my baby's tongue from moving as freely as it should.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Track wet/dry diapers",
    description: "Tracking wet/dry diapers helps me know about how much my baby is drinking and how she or he is processing the nutrition. Changing diapers helps prevent skin irritation and promote healthiness.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-31&redirect_to=subentity&gotopage[1081]=1",
      name: "Central Jersey Diaper Bank"
    }],
    type: goalBasis.daily
  }, {
    name: "Check if baby is jaundiced",
    description: "If a baby is jaundiced he or she may need a bilirubin test done.",
    type: goalBasis.daily
  }, {
    name: "Feed baby every 3 hours or more frequently if needed",
    description: "Feeding baby every 3 hours or more gives the baby practice at sucking and swallowing.",
    type: goalBasis.daily
  }, {
    name: "Tummy time after each feeding (including baby sleeping on awake mom's chest",
    description: "Tummy time for my baby encourages development of the core muscles of the neck, back, and shoulder, and helps the baby's visual, sensory, and motor development.",
    type: goalBasis.daily
  }, {
    name: "Check for safe sleeping every time baby sleeps",
    description: "Checking for safe sleeping for my baby reduces the chance of sleep-related infant injury or death.",
    type: goalBasis.daily
  }, {
    name: "Do proper umbillical chord care",
    description: "Umbilical cord care helps prevent infection.",
    type: goalBasis.daily
  }, {
    name: "Read a book with my baby",
    description: "Reading with my baby will help her or him learn social skills and language.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }, {
    name: "Talk with my baby",
    description: "Talking with my baby will help her or him learn social skills and language.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }, {
    name: "Read for 15 minutes about infant development",
    description: "It is important to know about my infant's needs and his or her development.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }, {
    name: "Play finger games with my baby",
    description: "Babies will learn healthy social skills, language, and motor development.",
    type: goalBasis.weekly
  }, {
    name: "Play singing games with my baby",
    description: "Babies will learn healthy social skills, language, and motor development.",
    type: goalBasis.weekly
  }, {
    name: "Go to lactation consultant appointment",
    description: "A lactation consultant can help address any of my concerns and make any adjustments.",
    type: goalBasis.weekly
  }, {
    name: "Go to breastfeeding support group",
    description: "Breastfeeding support groups can help me breastfeed longer and with more satisfaction, to help benefit my baby and me.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Go to parent support group",
    description: "Parent support meetings can help me develop positive parenting solutions.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "three months",
  category: categories.children,
  subcategory: childrenSubcategories.birth,
  name: "Be healthy in the three-plus months after giving birth",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=150",
    name: "After Baby's Born"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Research 'post-birth' warning signs of blod clots, severe headache, etc. to call OB or go to ER",
    description: "Knowing post-birth warning signs can help me decide whether I should seek help.",
    links: [{
      url: "https://www.awhonn.org/wp-content/uploads/2020/02/pbwssylhandoutenglish.pdf)",
      name: "Post-Birth Warning Signs"
    }],
    type: goalBasis.daily
  }, {
    name: "Make appointment with a lactation consultant",
    description: "A lactation consultant can help address any of my concerns and make any adjustments.",
    type: goalBasis.once
  }, {
    name: "Go to six week post-partum appointment",
    description: "Postpartum depression is when I feel sadness, anxiety, and mood swings in the few weeks following the birth.",
    type: goalBasis.once
  }, {
    name: "Complete post-partum mental health screening",
    description: "Postpartum depression is when I feel sadness, anxiety, and mood swings in the few weeks following the birth.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Learn about shaken baby syndrome",
    description: "Shaken baby syndrome is a form of abuse on my baby when a parent or caregiver shakes a baby out of anger or frustration.",
    type: goalBasis.once
  }, {
    name: "Discuss with OB about returning to contraceptive",
    description: "Discussing with OB about returning to contraceptives is important because it is possible to get pregnant very soon after having my baby which carries risks.",
    type: goalBasis.once
  }, {
    name: "Research breastfeeding support group",
    description: "A breastfeeding class will provide a comprehensive foundation of knowledge regarding breastfeeding.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Research parent support group",
    description: "Parent support meetings can help me develop positive parenting solutions.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.once
  }, {
    name: "Continue to take prenatal vitamin",
    description: "Prenatal vitamins provide key nutrients to help support the baby.",
    type: goalBasis.daily
  }, {
    name: "Monitor blood pressure",
    description: "Monitoring blood pressure gives a clearer picture of heart disease and stroke.",
    type: goalBasis.daily
  }, {
    name: "Take prescribed medications for blood pressure",
    description: "Blood pressure medication can help keep my blood pressure at healthy levels.",
    type: goalBasis.daily
  }, {
    name: "Monitor for 'post-birth' warning signs of blod clots, severe headache, etc. to call OB or go to ER",
    description: "Knowing post-birth warning signs can help me decide whether I should seek help.",
    links: [{
      url: "https://www.awhonn.org/wp-content/uploads/2020/02/pbwssylhandoutenglish.pdf)",
      name: "Post-Birth Warning Signs"
    }],
    type: goalBasis.daily
  }, {
    name: "Drink 128 ounces of water per day",
    type: goalBasis.daily
  }, {
    name: "Reach out to family/friend(s) for support",
    description: "Family/friends can give needed support when caring for an infant.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-52&redirect_to=subentity&gotopage[1137]=1",
      name: "Parenting Tips"
    }],
    type: goalBasis.weekly
  }, {
    name: "Tell a friend when/if I'm having trouble with anxiety or depression",
    description: "Sharing with a friend about my troubles will reduce stress and help find solutions.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily
  }, {
    name: "Go to lactation consultant",
    description: "A lactation consultant can help address any of my concerns and make any adjustments.",
    type: goalBasis.weekly
  }, {
    name: "Go to breastfeeding support group",
    description: "Breastfeeding support groups can help me breastfeed longer and with more satisfaction, to help benefit my baby and me.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-37&redirect_to=subentity&gotopage[1081]=1",
      name: "Maternal Child Health and Support Services"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Go to parent support group",
    description: "Parent support meetings can help me develop positive parenting solutions.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-39&redirect_to=subentity&gotopage[1137]=1",
      name: "Head Start Services"
    }],
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "pediatrician 0-6 months",
  category: categories.children,
  subcategory: childrenSubcategories.pediatrician,
  name: "Pediatrician well visits and vaccinations (0-6 months)",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=173",
    name: "Vaccines Birth-6 years"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule pediatrician well visits",
    description: "My baby needs regular \"well-visits\" to track health and get scheduled immunizations. I can also ask my pediatrician about nutrition and other topics.",
    type: goalBasis.once
  }, {
    name: "Schedule vaccination(s)",
    description: "Vaccines are very important in preventing diseases.",
    type: goalBasis.once
  }, {
    name: "Go to pediatrician well visit",
    description: "My baby needs regular well-visits to track health and get scheduled immunizations. I can also ask my pediatrician about nutrition and other topics.",
    type: goalBasis.yearly
  }, {
    name: "Have child vaccinated",
    type: goalBasis.once
  }]
}, {
  id: "pediatrician 7-18 months",
  category: categories.children,
  subcategory: childrenSubcategories.pediatrician,
  name: "Pediatrician well visits and vaccinations (7-18 months)",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=173",
    name: "Vaccines Birth-6 years"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule pediatrician well visits",
    type: goalBasis.once
  }, {
    name: "Schedule vaccination(s)",
    description: "Vaccines are very important in preventing diseases.",
    type: goalBasis.once
  }, {
    name: "Go to pediatrician well visit",
    type: goalBasis.once
  }, {
    name: "Have child vaccinated",
    type: goalBasis.once
  }]
}, {
  id: "pediatrician 19 months - 3 years",
  category: categories.children,
  subcategory: childrenSubcategories.pediatrician,
  name: "Pediatrician well visits and vaccinations (19 months - 3 years)",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=173",
    name: "Vaccines Birth-6 years"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule pediatrician well visits",
    type: goalBasis.once
  }, {
    name: "Schedule vaccination(s)",
    description: "Vaccines are very important in preventing diseases.",
    type: goalBasis.once
  }, {
    name: "Go to pediatrician well visit",
    type: goalBasis.once
  }, {
    name: "Have child vaccinated",
    type: goalBasis.once
  }]
}, {
  id: "pediatrician 4-6 years",
  category: categories.children,
  subcategory: childrenSubcategories.pediatrician,
  name: "Pediatrician well visits and vaccinations (4-6 years)",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=173",
    name: "Vaccines Birth-6 years"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule pediatrician well visits",
    type: goalBasis.once
  }, {
    name: "Schedule vaccination(s)",
    description: "Vaccines are very important in preventing diseases.",
    type: goalBasis.once
  }, {
    name: "Go to pediatrician well visit",
    type: goalBasis.once
  }, {
    name: "Have child vaccinated",
    type: goalBasis.once
  }]
}, {
  id: "pediatrician 7-10 years",
  category: categories.children,
  subcategory: childrenSubcategories.pediatrician,
  name: "Pediatrician well visits and vaccinations (7-10 years)",
  sortOrder: 5,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=96",
    name: "Vaccines"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule pediatrician well visits",
    type: goalBasis.once
  }, {
    name: "Schedule vaccination(s)",
    description: "Vaccines are very important in preventing diseases.",
    type: goalBasis.once
  }, {
    name: "Go to pediatrician well visit",
    type: goalBasis.once
  }, {
    name: "Have child vaccinated",
    type: goalBasis.once
  }]
}, {
  id: "pediatrician 11-14 years",
  category: categories.children,
  subcategory: childrenSubcategories.pediatrician,
  name: "Pediatrician well visits and vaccinations (11-14 years)",
  sortOrder: 6,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=96",
    name: "Vaccines"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule pediatrician well visits",
    type: goalBasis.once
  }, {
    name: "Schedule vaccination(s)",
    description: "Vaccines are very important in preventing diseases.",
    type: goalBasis.once
  }, {
    name: "Go to pediatrician well visit",
    type: goalBasis.once
  }, {
    name: "Have child vaccinated",
    type: goalBasis.once
  }]
}, {
  id: "pediatrician 15-18 years",
  category: categories.children,
  subcategory: childrenSubcategories.pediatrician,
  name: "Pediatrician well visits and vaccinations (15-18 years)",
  sortOrder: 7,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=96",
    name: "Vaccines"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule pediatrician well visits",
    type: goalBasis.once
  }, {
    name: "Schedule vaccination(s)",
    description: "Vaccines are very important in preventing diseases.",
    type: goalBasis.once
  }, {
    name: "Go to pediatrician well visit",
    type: goalBasis.once
  }, {
    name: "Have child vaccinated",
    type: goalBasis.once
  }]
}, {
  id: "dentist 4-6 years",
  category: categories.children,
  subcategory: childrenSubcategories.dentist,
  name: "Dentist visits (4-6 years)",
  sortOrder: 1,
  links: [{
    url: "",
    name: ""
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule two dentist visits per year per child",
    type: goalBasis.once
  }, {
    name: "Go to child's first dentist visit for the year",
    type: goalBasis.once
  }, {
    name: "Go to child's second dentist visit for the year",
    type: goalBasis.once
  }]
}, {
  id: "dentist 7-10 years",
  category: categories.children,
  subcategory: childrenSubcategories.dentist,
  name: "Dentist visits (7-10 years)",
  sortOrder: 2,
  links: [{
    url: "",
    name: ""
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule two dentist visits per year per child",
    type: goalBasis.once
  }, {
    name: "Go to child's first dentist visit for the year",
    type: goalBasis.once
  }, {
    name: "Go to child's second dentist visit for the year",
    type: goalBasis.once
  }]
}, {
  id: "dentist 11-14 years",
  category: categories.children,
  subcategory: childrenSubcategories.dentist,
  name: "Dentist visits (11-14 years)",
  sortOrder: 3,
  links: [{
    url: "",
    name: ""
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule two dentist visits per year per child",
    type: goalBasis.once
  }, {
    name: "Go to child's first dentist visit for the year",
    type: goalBasis.once
  }, {
    name: "Go to child's second dentist visit for the year",
    type: goalBasis.once
  }]
}, {
  id: "dentist 15-18 years",
  category: categories.children,
  subcategory: childrenSubcategories.dentist,
  name: "Dentist visits (15-18 years)",
  sortOrder: 4,
  links: [{
    url: "",
    name: ""
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Schedule two dentist visits per year per child",
    type: goalBasis.once
  }, {
    name: "Go to child's first dentist visit for the year",
    type: goalBasis.once
  }, {
    name: "Go to child's second dentist visit for the year",
    type: goalBasis.once
  }]
},
/* Start of Jobs Milestones*/
{
  id: "close to home",
  category: categories.jobs,
  subcategory: jobsSubcategories.location,
  name: "Close to home",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=135",
    name: "Researching Jobs"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 job interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend, family, or mentor to look over the resume and cover letter before sending it out",
    description: "Asking family, friends or mentor to look over my resume and cover letter will allow me to receive feedback and make revisions.",
    type: goalBasis.once
  }, {
    name: "Upload resume and cover letter to job-finding sites",
    description: "Uploading my resume and cover letter to job-finding sites will help recruiters learn about me and help me reach out to employers.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Reflect, talk to friend(s) and family",
    description: "Reflecting and talking to friends and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "close to school",
  category: categories.jobs,
  subcategory: jobsSubcategories.location,
  name: "Close to child/ren's school/s",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=135",
    name: "Researching Jobs"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 job interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend, family, or mentor to look over the resume and cover letter before sending it out",
    description: "Asking family, friends or mentor to look over my resume and cover letter will allow me to receive feedback and make revisions.",
    type: goalBasis.once
  }, {
    name: "Upload resume and cover letter to job-finding sites",
    description: "Uploading my resume and cover letter to job-finding sites will help recruiters learn about me and help me reach out to employers.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Reflect, talk to friend(s) and family",
    description: "Reflecting and talking to friends and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "commute jobs",
  category: categories.jobs,
  subcategory: jobsSubcategories.location,
  name: "Easy commute",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=135",
    name: "Researching Jobs"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Get a MetroCard, buss pass, transit pass, etc",
    description: "Getting a MetroCard, bus pass, transit pass, etc will allow me to commute to work.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 job interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend, family, or mentor to look over the resume and cover letter before sending it out",
    description: "Asking family, friends or mentor to look over my resume and cover letter will allow me to receive feedback and make revisions.",
    type: goalBasis.once
  }, {
    name: "Upload resume and cover letter to job-finding sites",
    description: "Uploading my resume and cover letter to job-finding sites will help recruiters learn about me and help me reach out to employers.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Reflect, talk to friend(s) and family",
    description: "Reflecting and talking to friends and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "support family",
  category: categories.jobs,
  subcategory: jobsSubcategories.income,
  name: "Income is enough to support my family",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=135",
    name: "Researching Jobs"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Look over budget",
    description: "Looking over my budget will show me if my income will allow me to pay all my expenses.",
    type: goalBasis.once
  }, {
    name: "Discuss different job opportunities with family",
    description: "My family can advise me and suggest different job opportunities based on my responsibilites and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.once
  }, {
    name: "Prepare 5 job interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend, family, or mentor to look over the resume and cover letter before sending it out",
    description: "Asking family, friends or mentor to look over my resume and cover letter will allow me to receive feedback and make revisions.",
    type: goalBasis.once
  }, {
    name: "Upload resume and cover letter to job-finding sites",
    description: "Uploading my resume and cover letter to job-finding sites will help recruiters learn about me and help me reach out to employers.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "live comfortably",
  category: categories.jobs,
  subcategory: jobsSubcategories.income,
  name: "Income is enough to live comfortably",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=135",
    name: "Researching Jobs"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Look over budget",
    description: "Looking over my budget will show me if my income will allow me to pay all my expenses.",
    type: goalBasis.once
  }, {
    name: "Discuss different job opportunities with family",
    description: "My family can advise me and suggest different job opportunities based on my responsibilites and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.once
  }, {
    name: "Prepare 5 job interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend, family, or mentor to look over the resume and cover letter before sending it out",
    description: "Asking family, friends or mentor to look over my resume and cover letter will allow me to receive feedback and make revisions.",
    type: goalBasis.once
  }, {
    name: "Upload resume and cover letter to job-finding sites",
    description: "Uploading my resume and cover letter to job-finding sites will help recruiters learn about me and help me reach out to employers.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "benefits i want",
  category: categories.jobs,
  subcategory: jobsSubcategories.income,
  name: "Amount and type of benefits I want",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=135",
    name: "Researching Jobs"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Talk to company recruiter",
    description: "A company recruiter can give me information about the application process and the job.",
    type: goalBasis.once
  }, {
    name: "Research more about benefits",
    description: "Many jobs offer benefits like paid time off, vacation days, health insurance, and more.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 job interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask potential employer about benefits after the interview",
    description: "Many jobs offer benefits like paid time off, vacation days, health insurance, and more.",
    type: goalBasis.once
  }, {
    name: "Ask friend, family, or mentor to look over the resume and cover letter before sending it out",
    description: "Asking family, friends or mentor to look over my resume and cover letter will allow me to receive feedback and make revisions.",
    type: goalBasis.once
  }, {
    name: "Upload resume and cover letter to job-finding sites",
    description: "Uploading my resume and cover letter to job-finding sites will help recruiters learn about me and help me reach out to employers.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "reliable schedule",
  category: categories.jobs,
  subcategory: jobsSubcategories.schedule,
  name: "Reliable work schedule similar each week",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Talk to company recruiter",
    description: "A company recruiter can give me information about the application process and the job.",
    type: goalBasis.once
  }, {
    name: "Map out schedule I would like",
    description: "Mapping out a schedule I would like would organize my work time with all my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Make appointment to talk with manager to ask for a new schedule",
    description: "Asking my manager for a new schedule will allow me to better organize my work time with all my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Plan childcare",
    description: "It is important to plan childcare when I am away from my child at work.",
    type: goalBasis.once
  }, {
    name: "Research work-from-home jobs",
    description: "Work-from-home jobs would allow me to maintain my responsibilites at home while still working.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.once
  }, {
    name: "Practice talking with manager to ask for new schedule",
    description: "Preparing to talk with a manager will give me more confidence when asking for a new schedule.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings for steadier job",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "times i want",
  category: categories.jobs,
  subcategory: jobsSubcategories.schedule,
  name: "Work hours during time of day/night I want",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Talk to company recruiter",
    description: "A company recruiter can give me information about the application process and the job.",
    type: goalBasis.once
  }, {
    name: "Map out schedule I would like",
    description: "Mapping out a schedule I would like would organize my work time with all my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Make appointment to talk with manager to ask for a new schedule",
    description: "Asking my manager for a new schedule will allow me to better organize my work time with all my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Plan childcare",
    description: "It is important to plan childcare when I am away from my child at work.",
    type: goalBasis.once
  }, {
    name: "Research work-from-home jobs",
    description: "Work-from-home jobs would allow me to maintain my responsibilites at home while still working.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.once
  }, {
    name: "Practice talking with manager to ask for new schedule",
    description: "Preparing to talk with a manager will give me more confidence when asking for a new schedule.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings for steadier job",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "hours i want",
  category: categories.jobs,
  subcategory: jobsSubcategories.schedule,
  name: "Number of work hours I want",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Talk to company recruiter",
    description: "A company recruiter can give me information about the application process and the job.",
    type: goalBasis.once
  }, {
    name: "Map out schedule I would like",
    description: "Mapping out a schedule I would like would organize my work time with all my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Make appointment to talk with manager to ask for a new schedule",
    description: "Asking my manager for a new schedule will allow me to better organize my work time with all my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Practice talking with manager to ask for new schedule",
    description: "Preparing to talk with a manager will give me more confidence when asking for a new schedule.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings with number of hours I want",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "positive difference",
  category: categories.jobs,
  subcategory: jobsSubcategories.enjoyment,
  name: "I make a positive difference",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }, {
    name: "Reflect, talk to fellow co-workers, friends and family",
    description: "Reflecting and talking to co-workers, friends, and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "enjoy coworkers",
  category: categories.jobs,
  subcategory: jobsSubcategories.enjoyment,
  name: "I enjoy my coworkers",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }, {
    name: "Reflect, talk to fellow co-workers, friends and family",
    description: "Reflecting and talking to co-workers, friends, and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "feel appreciated",
  category: categories.jobs,
  subcategory: jobsSubcategories.enjoyment,
  name: "I feel appreciated and valued",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Look up employee testimonials on online job sites",
    description: "Employee testimonials on online job sites (such as LinkedIn, Glassdoor, etc) give me more insight and information on the job.",
    type: goalBasis.once
  }, {
    name: "Schedule a meeting with manager",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }, {
    name: "Reflect, talk to fellow co-workers, friends and family",
    description: "Reflecting and talking to co-workers, friends, and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }]
}, {
  id: "love what i do",
  category: categories.jobs,
  subcategory: jobsSubcategories.enjoyment,
  name: "I love what I do",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Schedule meeting with manager",
    description: "Meeting with the manager will allow me to learn about the job's responsibilities and expectations.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    tdescription: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }, {
    name: "Reflect, talk to fellow co-workers, friends and family",
    description: "Reflecting and talking to co-workers, friends, and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Practice for meeting with manager about different responsibilities",
    description: "Preparing to talk with a manager will give me more confidence when asking about different responsibilities",
    type: goalBasis.weekly
  }]
}, {
  id: "challenges me",
  category: categories.jobs,
  subcategory: jobsSubcategories.enjoyment,
  name: "It challenges me to grow",
  sortOrder: 5,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Schedule meeting with manager",
    description: "Meeting with the manager will allow me to learn about the job's responsibilities and expectations.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }, {
    name: "Reflect, talk to fellow co-workers, friends and family",
    description: "Reflecting and talking to co-workers, friends, and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Practice for meeting with manager about different responsibilities",
    description: "Preparing to talk with a manager will give me more confidence when asking about different responsibilities",
    type: goalBasis.weekly
  }]
}, {
  id: "fits personality",
  category: categories.jobs,
  subcategory: jobsSubcategories.enjoyment,
  name: "It fits my personality",
  sortOrder: 6,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=134",
    name: "Job Goals"
  }],
  measures: {
    type: measureData.none,
    startLabel: "",
    endLabel: "",
    unit: "",
    placeholderStartValue: "---",
    placeholderEndValue: "---"
  },
  goals: [{
    name: "Update resume",
    description: "Updating my resume will display my new work experience, education, and skills.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=139",
      name: "Formatting Resume"
    }],
    type: goalBasis.once
  }, {
    name: "Update cover letter",
    description: "Updating my cover letter will display my motivation, work history, and professional skills.",
    type: goalBasis.once
  }, {
    name: "Pick appropriate attire for interview",
    description: "Picking appropriate attire for my interview shows I am serious about the job and the interviewer's time.",
    type: goalBasis.once
  }, {
    name: "Schedule meeting with manager",
    description: "Meeting with the manager will allow me to learn about the job's responsibilities and expectations.",
    type: goalBasis.once
  }, {
    name: "Prepare 5 interview questions",
    description: "Preparing 5 job interview questions will display my interest and reduce stress when asked.",
    type: goalBasis.once
  }, {
    name: "Ask friend(s) and family about job openings",
    description: "Friends or family can give insight on potential job openings that they know of.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Search online for jobs",
    description: "Searching online can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Check the newspaper for jobs",
    description: "Searching in the newspaper can help me find a job that meets my needs.",
    type: goalBasis.daily
  }, {
    name: "Spend time networking",
    description: "Networking can help me gain knowledge and advance my career.",
    type: goalBasis.daily
  }, {
    name: "Work on improving skills",
    description: "Improving skills can help me become more prepared and desirable in job searching.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily
  }, {
    name: "Submit an application to 2 job listings",
    description: "Applying to a job listing allows me the chance of getting a job that meets my needs.",
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Prepare for job interview",
    description: "Preparing for a job interview will improve my chances and confidence in the interview.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=140",
      name: "Steps to Prepare for Job Interview"
    }],
    type: goalBasis.weekly
  }, {
    name: "Reflect, talk to fellow co-workers, friends and family",
    description: "Reflecting and talking to co-workers, friends, and family can reduce stress and help me understand situations better.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-53&redirect_to=subentity&gotopage[1137]=1",
      name: "Starting a Business"
    }],
    type: goalBasis.daily,
    frequency: 3
  }, {
    name: "Practice for meeting with manager about different responsibilities",
    description: "Preparing to talk with a manager will give me more confidence when asking about different responsibilities",
    type: goalBasis.weekly
  }]
},
/* Start Of Money Management Milestones*/
{
  id: "financial plan",
  category: categories.money,
  subcategory: moneySubcategories.budgeting,
  name: "Make a financial plan for the future",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=109",
    name: "Budgeting/Spending"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Make a list of needs & wants",
    description: "Making a list of needs and wants will help me differentiate items that I am looking to purchase.",
    type: goalBasis.once
  }, {
    name: "Build my six-month budget",
    description: "Building a six-month budget will allow me to allocate money to purchase what I need and save for six months.",
    type: goalBasis.once
  }, {
    name: "Talk to family about budget planning",
    description: "My family can help me with budget planning because they also know my needs and purchases.",
    type: goalBasis.once
  }, {
    name: "Plan for emergency fund",
    description: "An emergency fund can help me from sinking financially in cases of emergency.",
    type: goalBasis.once
  }, {
    name: "Plan for monthly payment(s) towards debt",
    description: "Planning for monthly payment(s) towards debt will allow me to arrange enough money to pay my debts on time.",
    type: goalBasis.once
  }, {
    name: "Plan for saving  beyond emergency fund",
    description: "Saving beyond emergency fund will alow me to have money for convenience and any costly emergency.",
    type: goalBasis.once
  }, {
    name: "Find a financial advisor (free and trusted program at non-profit org., library, church, etc.)",
    description: "A financial advisor can provide me financial services based on my current financial situation. (free and trusted program at non-profit org., library, church, etc.)",
    type: goalBasis.once
  }, {
    name: "Enroll in trusted online financial literacy program",
    description: "Learning to become financial literate will help me with current responsibilities and to make better financial decisions in the future.",
    type: goalBasis.once
  }, {
    name: "Make budget spreadsheet",
    description: "Making a budget spreadsheet allows me to plan all my necessary payments and expenses.",
    type: goalBasis.once
  }, {
    name: "Use trusted online budget service without linking accounts",
    description: "A trusted online budget service can help me plan and allocate all my money for all my necessary payments.",
    type: goalBasis.once
  }, {
    name: "Link accounts with trusted online budget service",
    description: "A trusted online budget service can help me plan and allocate all my money for all my necessary payments.",
    type: goalBasis.once
  }, {
    name: "Record my income and expenses for the day",
    description: "Keeping track of finances daily can help me budget and plan for the future.",
    type: goalBasis.daily
  }, {
    name: "Do 30 minutes in trusted online financial literacy course",
    description: "Learning to become financially literate will help me with current responsibilities and help me make better financial decisions in the future.",
    type: goalBasis.daily
  }]
}, {
  id: "create budgets",
  category: categories.money,
  subcategory: moneySubcategories.budgeting,
  name: "Create and stick to monthly and weekly budgets",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=109",
    name: "Budgeting/Spending"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Make a list of needs & wants",
    description: "Making a list of needs and wants will help me differentiate items that I am looking to purchase.",
    type: goalBasis.once
  }, {
    name: "Build my monthly budget",
    description: "Building a monthly budget will allow me to allocate money to purchase what I need and save for a month.",
    type: goalBasis.once
  }, {
    name: "Build my weekly budget",
    description: "Building a weekly budget will allow me to allocate money to purchase what I need and save for a week.",
    type: goalBasis.once
  }, {
    name: "Make sure to include items that occur less often than monthly",
    description: "It is important to consider and financially plan for items that occur less often than monthly.",
    type: goalBasis.once
  }, {
    name: "Talk to family about budget planning",
    description: "My family can help me with budget planning because they also know my needs and purchases.",
    type: goalBasis.once
  }, {
    name: "Enroll in trusted online financial literacy program",
    description: "Learning to become financial literate will help me with current responsibilities and to make better financial decisions in the future.",
    type: goalBasis.once
  }, {
    name: "Ask financial advisor (free program at non-profit org., library, church, etc.) about budgeting",
    description: "A financial advisor (free program at non-profit org., library, church, etc.) can inform me about budgeting and how to make a financial plan for a period of time.",
    type: goalBasis.once
  }, {
    name: "Record my income and expenses as they occur",
    description: "Keeping track of finances as they can occur can help me budget and plan for the future.",
    type: goalBasis.daily
  }, {
    name: "Do 30 minutes in trusted online financial literacy course",
    description: "Learning to become financially literate will help me with current responsibilities and help me make better financial decisions in the future.",
    type: goalBasis.daily
  }, {
    name: "Comparison items before purchasing",
    description: "Comparison shopping will help me find the best priced item and save me money.",
    type: goalBasis.daily
  }]
}, {
  id: "child support",
  category: categories.money,
  subcategory: moneySubcategories.budgeting,
  name: "Participate in financial child support",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=186",
    name: "Child Support"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Include child support in current budget",
    description: "It is important to arrange money to fufil my commitments for child child support in current budget.",
    type: goalBasis.once
  }, {
    name: "Consider different payment options",
    description: "Considering different payment options (Venmo, Zell, etc) will help me choose how to pay child support.",
    type: goalBasis.once
  }, {
    name: "Choose best payment option",
    description: "Choosing best payment option (Venmo, Zell, etc) will give me a secure way and consistent way to pay child support.",
    type: goalBasis.once
  }, {
    name: "Contact Child Support Services or family law attorney for assistance or questions",
    description: "Child Support Services or family law attorneys can offer clarification and answer any questions I have  regarding child support.",
    type: goalBasis.once
  }, {
    name: "Contact Child Support Services or family law attorney if trying to modify child support order",
    description: "Contacting Child Support Services or family law attorney can help me and inform me in the process of modifying child support order.",
    type: goalBasis.once
  }, {
    name: "Communicate with other parent about payment schedule",
    description: "Communicating with the other parent about payment schedule (in-person, through text, through a lawyer, etc) can help prevent future financial conflicts.",
    type: goalBasis.weekly
  }, {
    name: "Keep updated on state's child support guidelines",
    description: "It is important to know the state's child support guidelines to view if there are any changes or violations.",
    type: goalBasis.monthly,
    days: [1]
  }, {
    name: "Make child support payment",
    description: "Making child support payments will help support my child's needs and wellbeing.",
    type: goalBasis.monthly,
    days: [1]
  }, {
    name: "Check that I received child support payment",
    description: "Checking if the child support payment is received will keep track of the money needed for the child.",
    type: goalBasis.monthly,
    days: [1]
  }, {
    name: "Check that parent or guardian received child support payment",
    description: "Checking if the child support payment is received will keep track of the money needed for the child.",
    type: goalBasis.monthly,
    days: [1]
  }, {
    name: "Check that parent or guardian made child support payment",
    description: "Checking if the child support payment is made will keep track of the money needed for the child.",
    type: goalBasis.monthly,
    days: [1]
  }]
}, {
  id: "identification documents",
  category: categories.money,
  subcategory: moneySubcategories.programs,
  name: "Establish necessary identification documents",
  sortOrder: 1,
  links: [{
    url: "",
    name: ""
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Identify programs that would match my needs",
    description: "Many programs fufil different needs and I should make sure the program I intend to apply to fufils my needs,",
    type: goalBasis.once
  }, {
    name: "Make a list of each program's required identification documents",
    description: "It is important when looking to apply to any program that I am prepared with the required identification documents so I can apply.",
    type: goalBasis.once
  }, {
    name: "Contact program representative with questions",
    description: "Contacting a program representative with questions will allow me to clarify any questions I have on the application process and eligibility.",
    type: goalBasis.once
  }, {
    name: "Organize required identification documents",
    description: "It is important when looking to apply to any program that I am prepared with the required identification documents so I can apply.",
    type: goalBasis.once
  }, {
    name: "Sign-up for driving test ",
    description: "Signing-up for a driving test will help me get my driver's license.",
    type: goalBasis.once
  }, {
    name: "Contact state department of vital records",
    description: "Contacting state department of vital records will help me get my birth certificate.",
    type: goalBasis.once
  }]
}, {
  id: "SNAP",
  category: categories.money,
  subcategory: moneySubcategories.programs,
  name: "Apply for SNAP",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=182",
    name: "Food Assistance"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Make a budget of current needs and spending",
    description: "Building a budget will allow me to allocate money to purchase what I need based on my spending.",
    type: goalBasis.once
  }, {
    name: "Make a list of needs",
    description: "Making a list of needs (based on current income, spending, etc) will help me create a list of items I need to budget for.",
    type: goalBasis.once
  }, {
    name: "Check that SNAP matches my needs",
    description: "SNAP offers many different items and food and it is important to check if any match my needs.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "Research state eligibility requirements",
    description: "Researching state eligibility requirements (resource and income limits, etc) will inform me if I can apply for SNAP.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "Check that I match state's eligibility requirements",
    description: "Checking that I match state's eligibility requirements (resource and income limits, etc) will inform me if I am elgible to receive SNAP benefits.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "Call state's SNAP information hotline with questions",
    description: "The SNAP information hotline can answer my questions about eligibility and clarify any other concerns.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "Visit state agency's website for more information",
    description: "Visiting the state's agency website for more information about SNAP will clarify me on the application process and answer any questions I have.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "Submit state's SNAP application",
    description: "SNAP offers me food-purchasing assistance if I am eleigible and apply in my state.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "Do eligibility interview",
    description: "A SNAP interview will tell me if I am eligible for SNAP benefits.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "After certification period ends, apply to recertify to continue receiving SNAP benefits",
    description: "SNAP will continue to provide me food-purchasing assistance if I apply to rectify to continue receiving SNAP benefits.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "Contact local SNAP office with questions",
    description: "Contracting local SNAP office with questions will clarify me on the application process and answer any questions I have.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }, {
    name: "Request a fair hearing with an official",
    description: "SNAP will continue to provide me food-purchasing assistance if I apply to rectify to continue receiving SNAP benefits.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-47",
      name: "Provider Corner/SNAP Benefits"
    }],
    type: goalBasis.once
  }]
}, {
  id: "WIC",
  category: categories.money,
  subcategory: moneySubcategories.programs,
  name: "Apply for WIC",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=182",
    name: "Food Assistance"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Make a budget of current needs and spending",
    description: "Building a budget will allow me to allocate money to purchase what I need based on my spending.",
    type: goalBasis.once
  }, {
    name: "Make a list of needs",
    description: "Making a list of needs (based on current income, spending, etc) will help me create a list of items I need to budget for.",
    type: goalBasis.once
  }, {
    name: "Check that WIC matches my needs",
    description: "WIC (Women, Infants, and Children) offers many different items and food and it is important to check if any match my needs.",
    links: [{
      url: "https://www.fns.usda.gov/wic/wic-how-apply",
      name: "How to Apply to WIC"
    }],
    type: goalBasis.once
  }, {
    name: "Contact state or local agency to set up an appointment",
    description: "A WIC (Women, Infants, and Children) appointment will tell me if my child/ren are elegible for WIC services.",
    links: [{
      url: "https://www.fns.usda.gov/wic/wic-how-apply",
      name: "How to Apply to WIC"
    }],
    type: goalBasis.once
  }, {
    name: "Research state eligibility requirements",
    description: "It is important to know my state's eligibility requirements (category, residency, income, nutrition risk, etc) when applying for WIC (Women, Infants, and Children).",
    links: [{
      url: "https://www.fns.usda.gov/wic/wic-how-apply",
      name: "How to Apply to WIC"
    }],
    type: goalBasis.once
  }, {
    name: "Check that I match state's eligibility requirements",
    description: "It is important to know when applying for WIC (Women, Infants, and Children) that I match state's eligibility requirements (category, residency, income, nutrition risk, etc).",
    links: [{
      url: "https://www.fns.usda.gov/wic/wic-how-apply",
      name: "How to Apply to WIC"
    }],
    type: goalBasis.once
  }, {
    name: "Bring all required materials to WIC appointment",
    description: "It is important ot have all required materials when going to my WIC (Women, Infants, and Children) appointment to receive assistance.",
    links: [{
      url: "https://www.fns.usda.gov/wic/wic-how-apply",
      name: "How to Apply to WIC"
    }],
    type: goalBasis.once
  }]
}, {
  id: "relevant programs",
  category: categories.money,
  subcategory: moneySubcategories.programs,
  name: "Participate in relevant income programs",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=182",
    name: "Food Assistance"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Make a budget of current needs and spending",
    description: "Building a budget will allow me to allocate money to purchase what I need based on my spending.",
    type: goalBasis.once
  }, {
    name: "Make a list of needs",
    description: "Making a list of needs (based on current income, spending, etc) will help me create a list of items I need to budget for.",
    type: goalBasis.once
  }, {
    name: "Research state and federal programs",
    description: "State and federal programs often have differnet requirements for food assisntance and income programs.",
    type: goalBasis.once
  }, {
    name: "Identify programs that would match my needs",
    description: "A program that matches my needs will support me financially and with food assistance.",
    type: goalBasis.once
  }, {
    name: "Check program eligibility requirements",
    description: "It is important to know when applying to a program that I meet the program's eligibility requirements (income level, residency requirements, etc).",
    type: goalBasis.once
  }, {
    name: "Make a list of each program's required identification documents",
    description: "It is important ot have all required identification documents when applying to a program for financial or food assistance.",
    type: goalBasis.once
  }, {
    name: "Contact program representative with questions",
    description: "Contacting program representative with questions will allow me to clarify any concerns I have with the program.",
    type: goalBasis.once
  }, {
    name: "Apply to programs that would match my needs",
    description: "A program that matches my needs will support me financially and with food assistance.",
    type: goalBasis.once
  }]
}, {
  id: "reduce debt",
  category: categories.money,
  subcategory: moneySubcategories.personal,
  name: "Plan to reduce debt",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=111",
    name: "Saving"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Talk to family or friend(s) about reducing debt",
    description: "Family or friend(s) can give me advice and guidance on how to reduce my debt.",
    type: goalBasis.once
  }, {
    name: 'Avoid "payday loans"',
    description: "'Payday loans' are short-term unsecured loans with high interest rates.",
    type: goalBasis.once
  }, {
    name: "List the interest rates on my credit cards",
    description: "It is important to know the interest rates on my credit cards before I use them.",
    type: goalBasis.once
  }, {
    name: "Ask financial advisor about reducing debt",
    description: "A financial advisor (free program at non-profit org., library, church, etc.) can inform me on how to reduce debt.",
    type: goalBasis.once
  }, {
    name: "Brainstorm with a trusted advisor about creative ways to make more money",
    description: "Brainstorming with a trusted advisor about creative ways to make more money will give me more financial freedom and help me pay my debts.",
    type: goalBasis.once
  }, {
    name: "Brainstorm with a trusted advisor about areas to cut back",
    description: "Brainstorming with a trusted advisor about areas to cut back (stop buying coffee out, switching to a cheaper phone plan, etc) will give me more financial freedom and help me pay my debts.",
    type: goalBasis.once
  }, {
    name: "Learn about Dave Ramsey's 'Debt Snowball'",
    description: "A 'debt snowball' is a debt-reduction strategy where you pay off debts in order of smallest to largest.",
    type: goalBasis.once
  }, {
    name: "Consider credit card interest rate before using card",
    description: "It is important to know the financial ramifications of using a credit card to help me make an educated decision.",
    type: goalBasis.daily
  }, {
    name: "Track credit card payments",
    description: "Late credit card payments lower your credit score and increase insurance rates.",
    type: goalBasis.daily
  }, {
    name: "Save enough to pay $10 more than minimum payment on credit card each month",
    description: "It is important to save enough to pay my credit card monthly without issue.",
    type: goalBasis.monthly
  }, {
    name: "Pay credit cards on time",
    description: "Late credit card payments lower your credit score and increase insurance rates.",
    type: goalBasis.monthly
  }, {
    name: "Pay student loans on time",
    description: "Paying students loans late will often cause additional fees.",
    type: goalBasis.monthly
  }, {
    name: "Pay more than minimum on highest rate credit cards",
    description: "Paying more than minimum on highest rate credit cards helps me pay off my credit card balances faster and reduces my credit utilization ratio.",
    type: goalBasis.monthly
  }]
}, {
  id: "overdraft",
  category: categories.money,
  subcategory: moneySubcategories.personal,
  name: "Exit OverDraft",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=190",
    name: "Overdraft"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Make list of payments due and income expected (use paper or computer)",
    description: "Planning for payments based on income will allow me to become financially prepared and make better decisions.",
    type: goalBasis.once
  }, {
    name: "Set up overdraft protection",
    description: "Overdraft protection prevents check, ATM, or debit card transactions from causing the account to fall below zero resulting in an overdraft fee.",
    type: goalBasis.once
  }, {
    name: "Schedule appointment at bank",
    description: "Scheduling an appointment at a bank can allow me to gain information about different bank accounts and programs offered.",
    type: goalBasis.once
  }, {
    name: "Refer to list of payments due and income expected",
    description: "Planning for payments based on income will allow me to become financially prepared and make better decisions.",
    type: goalBasis.weekly
  }]
}, {
  id: "checking account",
  category: categories.money,
  subcategory: moneySubcategories.personal,
  name: "Establish checking account at bank",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=189",
    name: "Checking and Savings Accounts"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Ask financial advisor about banks",
    description: "A financial advisor (free program at non-profit org., library, church, etc.) can inform me on about banks and different accounts.",
    type: goalBasis.once
  }, {
    name: "Research banks for favorable programs",
    description: "Researching banks for favorable programs (low-cost checking, available ATMs, etc.) will help me make an educated decision.",
    type: goalBasis.once
  }, {
    name: "Schedule appointment at bank",
    description: "Scheduling an appointment at a bank can allow me to gain information about different bank accounts and programs offered.",
    type: goalBasis.once
  }]
}, {
  id: "emergency fund",
  category: categories.money,
  subcategory: moneySubcategories.personal,
  name: "Establish Emergency Fund",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=110",
    name: "Financial Goals"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=111",
    name: "Saving"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Open savings account",
    description: "Savings account are a safe place to hold cash that earns interest.",
    type: goalBasis.once
  }, {
    name: "Schedule appointment at bank",
    description: "Scheduling an appointment at a bank can allow me to gain information about different bank accounts and programs offered.",
    type: goalBasis.once
  }, {
    name: 'Find "introductory interest-free repayment" credit card to use just in emergencies',
    description: "An 'introductory interest-free repayment' credit card to is a way to plan for emergency payments during unexpected situations.",
    type: goalBasis.once
  }, {
    name: "Put 5% of every paycheck into emergency fund",
    description: "An emergency fund can help me from sinking financially in cases of emergency.",
    type: goalBasis.weekly,
    days: {
      fri: [17 * 60 * 60]
    }
  }]
}, {
  id: "credit",
  category: categories.money,
  subcategory: moneySubcategories.personal,
  name: "Establish good credit",
  sortOrder: 5,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=112",
    name: "Credit/Loans"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Ask financial advisor about building good credit",
    description: "A financial advisor (free program at non-profit org., library, church, etc.) can inform me on the steps to take to build good credit.",
    type: goalBasis.once
  }, {
    name: "Research banks for favorable credit cards with low interest",
    description: "A bank with favorable credit cards with low interest rates will benefit me financially and save me money.",
    type: goalBasis.once
  }, {
    name: "Schedule appointment at bank",
    description: "Scheduling an appointment at a bank can allow me to gain information about different bank accounts and programs offered.",
    type: goalBasis.once
  }, {
    name: 'Avoid "payday loans"',
    description: "'Payday loans' are short-term unsecured loans with high interest rates.",
    type: goalBasis.once
  }, {
    name: "Organize my credit records",
    description: "Organizing my credit records will allow me to find documents easily, handle disputes, and potentially save money.",
    type: goalBasis.once
  }, {
    name: "Apply for secured credit card account(s)",
    description: "Secured credit card account(s) are cards that are credit cards backed by a cash deposit made when I created the account.",
    type: goalBasis.once
  }, {
    name: "Do 30 minutes in trusted online financial literacy course",
    description: "Learning to become financially literate will help me with current responsibilities and help me make better financial decisions in the future.",
    type: goalBasis.daily
  }, {
    name: "Save enough to pay $10 more than minimum payment on credit card each month",
    description: "It is important to save enough to pay my credit card monthly without issue.",
    type: goalBasis.monthly
  }, {
    name: "Pay student loans on time",
    description: "Paying students loans late will often cause additional fees.",
    type: goalBasis.monthly
  }, {
    name: "Check for credit report errors",
    description: "It is important to know if I have credit report errors so I can make the necessary changes.",
    type: goalBasis.monthly
  }]
},
/* Start of Education Milestones*/
{
  id: "high school",
  category: categories.education,
  subcategory: educationSubcategories.level,
  name: "High school diploma",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=44",
    name: "High School or GED"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your current level of education?",
    endLabel: "What level do you want to acquire?",
    startOptions: optionLists.educationLevelsHighSchool,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Some high school completed",
    defaultEnd: "High school diploma"
  },
  goals: [{
    name: "Talk with guidance counselor at school",
    description: "A guidance counselor can give me insight on the requirements to receive a high school diploma and give general academic advice.",
    type: goalBasis.once
  }, {
    name: "Set up a quiet place in my home to study and do homework",
    description: "Establishing a quiet place in my home to study and do homework will allow me to become more effective.",
    type: goalBasis.once
  }, {
    name: "Find a study group",
    description: "A study group can motivate me to learn content and are a resource when having confusion.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing daily homework",
    description: "A plan for doing daily homework will make it more likely that I will find the time to complete my homework.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing longer projects",
    description: "A plan for doing longer projects will make it more likely I will complete the project on time and also will reduce stress.",
    type: goalBasis.once
  }, {
    name: "Explore ways to learn STEM",
    description: "Learning STEM (Science,Tech,Engin,Math) can help me learn information and skills useful in a future career.",
    type: goalBasis.once
  }, {
    name: "Complete homework assignments",
    description: "Completing homework assignments on time can improve learning retention and reduce future stress.",
    type: goalBasis.daily
  }, {
    name: "Review homework requirements",
    description: "Reviewing homework requirements can help me plan on strategies to sufficiently complete the homework.",
    type: goalBasis.daily
  }, {
    name: "Practice using computer",
    description: "The ability to use a computer proficiently has education, social, and general life benefits.",
    type: goalBasis.daily
  }, {
    name: "Read for fun for 30 minutes",
    description: "Reading for fun reduces stress, is a mental exercise, and grows my vocabulary.",
    type: goalBasis.daily
  }, {
    name: "Go the the school library to do homework",
    description: "Going to the school library to do homework is a designated study spot free from distractions.",
    type: goalBasis.daily
  }, {
    name: "Make flashcards for test",
    description: "Flashcards can help me test myself fon key terms and ideas.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }, {
    name: "Attend after-school tutoring with my teacher",
    description: "After-school tutoring with my teacher can clarify specific questions and deepen my understanding of the material.",
    type: goalBasis.weekly
  }, {
    name: "Do study session with friend",
    description: "Studying with a friend can increase learning retention and increase motivation.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "GED",
  category: categories.education,
  subcategory: educationSubcategories.level,
  name: "GED",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=44",
    name: "High School or GED"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your current level of education?",
    endLabel: "What level do you want to acquire?",
    startOptions: optionLists.educationLevelsGED,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Some high school completed",
    defaultEnd: "GED"
  },
  goals: [{
    name: "Research requirements for GED",
    description: "To earn a GED, I must make sure I fulfill all the requirements.",
    links: [{
      url: "https://demo.ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=44",
      name: "List of requirements to take GED."
    }],
    type: goalBasis.once
  }, {
    name: "Find online prep course",
    description: "A prep course is an effective way to study for an exam on my own time.",
    type: goalBasis.once
  }, {
    name: "Order study materials online",
    description: "Study materials are an effective way to study for an exam on my own time.",
    type: goalBasis.once
  }, {
    name: "Make a plan for studying for GED",
    description: "Having a plan for studying for the GED will make me more effective when studying.",
    type: goalBasis.once
  }, {
    name: "Take a practice GED exam",
    description: "A practice GED exam is an effective way to learn the test structure and practice for the actual exam.",
    type: goalBasis.once
  }, {
    name: "Review completed practice exam",
    description: "A completed practice exam can help me review test structure and mistakes.",
    type: goalBasis.once
  }, {
    name: "Check exam locations",
    description: "The GED is only offered at certain locations and on certain days in person. It is also available on-line with certain requirements for the setting in which I would be taking the exam.",
    type: goalBasis.once
  }, {
    name: "Register for the GED exam",
    description: "I will need to register for the GED exam, for a particular date and location where the exam is being offered or online.",
    type: goalBasis.once
  }, {
    name: "Prepare proper identification for exam",
    description: "It is important to have the proper identification for the exam so I can take it without delay.",
    type: goalBasis.once
  }, {
    name: "Checkout a GED prep book from the library",
    description: "A GED prep book is an effective way to study for an exam on my own time.",
    type: goalBasis.once
  }, {
    name: "Set a budget for prep course and the test",
    description: "Preparing for an exam can be expensive, making it important to have a budget for the prep course and test.",
    type: goalBasis.once
  }, {
    name: "Study for GED exam for 1 hour",
    type: goalBasis.daily
  }, {
    name: "Practice using computer",
    description: "The ability to use a computer proficiently has education, social, and general life benefits.",
    type: goalBasis.daily
  }, {
    name: "Read for fun for 30 minutes",
    description: "Reading for fun reduces stress, is a mental exercise, and grows my vocabulary.",
    type: goalBasis.daily
  }, {
    name: "Do study session with friend",
    description: "Studying with a friend can increase learning retention and increase motivation.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }, {
    name: "Make flashcards for test",
    description: "Flashcards can help me test myself fon key terms and ideas.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "associate's degree",
  category: categories.education,
  subcategory: educationSubcategories.level,
  name: "Associate's degree",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=50",
    name: "Community College/College/University"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your current level of education?",
    endLabel: "What level do you want to acquire?",
    startOptions: optionLists.educationLevelsAssociates,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Some high school completed",
    defaultEnd: "Associate's degree"
  },
  goals: [{
    name: "Talk with guidance counselor at school about applying to community college",
    description: "A guidance counselor at school can guide me through the application process when applying to community college.",
    type: goalBasis.once
  }, {
    name: "Research community colleges",
    description: "Community colleges are two-year institutions that can prepare me for careers or more school.",
    links: [{
      url: "https://demo.ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=50",
      name: "List of requirements to apply for community college."
    }],
    type: goalBasis.once
  }, {
    name: "Apply for community colleges",
    description: "Community colleges are two-year institutions that can prepare me for careers or more school.",
    links: [{
      url: "https://demo.ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=50",
      name: "List of requirements to apply for community college."
    }],
    type: goalBasis.once
  }, {
    name: "Apply for financial aid and scholarships",
    description: "Financial aid and scholarships can give me economic support when paying for community college.",
    type: goalBasis.once
  }, {
    name: "Enroll at community college",
    description: "Community colleges are two-year institutions that can prepare me for careers or more school.",
    type: goalBasis.once
  }, {
    name: "Track degree progress and credit requirements",
    description: "It is important to know my degree progress and credit requirements to graduate on time.",
    type: goalBasis.once
  }, {
    name: "Talk with course advisor at community college",
    description: "Course advisors can give me advice and guidance when selecting courses.",
    type: goalBasis.once
  }, {
    name: "Find a study group",
    description: "A study group can motivate me to learn content and are a resource when having confusion.",
    type: goalBasis.once
  }, {
    name: "Order study materials online",
    description: "Study materials are helpful when studying for courses and preparation.",
    type: goalBasis.once
  }, {
    name: "Create flashcards",
    description: "Flashcards are an effective method for studying and memorization.",
    type: goalBasis.once
  }, {
    name: "Check ways to learn STEM (Science, Tech, Engin, Math) in community college",
    description: "Learning STEM (Science,Tech,Engin,Math) can help me learn information and skills useful in a future career.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing daily homework",
    description: "A plan for doing daily homework will make it more likely that I will find the time to complete my homework.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing longer projects",
    description: "A plan for doing longer projects will make it more likely I will complete the project on time and also will reduce stress.",
    type: goalBasis.once
  }, {
    name: "Ask teacher or mentor for recommendation letter",
    description: "When applying for jobs or different schools I may need a recommendation letter from a teacher or mentor.",
    type: goalBasis.once
  }, {
    name: "Research fields and programs",
    description: "Different fields and programs can help me develop skills and find a future career.",
    type: goalBasis.once
  }, {
    name: "Request copies of GED/high school transcript",
    description: "To apply for community college I will often need to show a GED/high school transcript.",
    type: goalBasis.once
  }, {
    name: "Ask guidance counselor for application fee waivers",
    description: "A guidance counselor can support me when submitting applications with application fee waivers.",
    type: goalBasis.once
  }, {
    name: "Work on application materials for community college",
    description: "Community colleges have different requirements and organizing them will allow me to apply.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=50",
      name: "Applying to Community College Info"
    }],
    type: goalBasis.daily
  }, {
    name: "Do homework",
    description: "Completing homework assignments on time can improve learning retention and reduce future stress.",
    type: goalBasis.daily
  }, {
    name: "Work on application essay",
    description: "Many colleges require an application essay to receive an application.",
    type: goalBasis.daily
  }, {
    name: "Do study session with friend",
    description: "Studying with a friend can increase learning retention and increase motivation.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "bachelor's degree",
  category: categories.education,
  subcategory: educationSubcategories.level,
  name: "Bachelor's degree",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=50",
    name: "Community College/College/University"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your current level of education?",
    endLabel: "What level do you want to acquire?",
    startOptions: optionLists.educationLevelsBachelors,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "High school diploma",
    defaultEnd: "Bachelor's degree"
  },
  goals: [{
    name: "Talk with guidance counselor at school about applying to college/university",
    description: "A guidance counselor at school can guide me through the application process when applying to college/university.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-57&redirect_to=subentity&gotopage[1137]=1",
      name: "College Admissions"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-55&redirect_to=subentity&gotopage[1137]=1",
      name: "College Prep"
    }],
    type: goalBasis.once
  }, {
    name: "Research colleges/universities",
    description: "A college/university is an educational institution for a specialized field or profession.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-57&redirect_to=subentity&gotopage[1137]=1",
      name: "College Admissions"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-55&redirect_to=subentity&gotopage[1137]=1",
      name: "College Prep"
    }],
    type: goalBasis.once
  }, {
    name: "Research colleges/universities (including children-friendly ones)",
    description: "Colleges/university can have different environments (children-friendly ones), distance, costs, and strengths.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-57&redirect_to=subentity&gotopage[1137]=1",
      name: "College Admissions"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-55&redirect_to=subentity&gotopage[1137]=1",
      name: "College Prep"
    }],
    type: goalBasis.once
  }, {
    name: "Apply for colleges/universities",
    description: "A college/university is an educational institution for a specialized field or profession.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-57&redirect_to=subentity&gotopage[1137]=1",
      name: "College Admissions"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-55&redirect_to=subentity&gotopage[1137]=1",
      name: "College Prep"
    }],
    type: goalBasis.once
  }, {
    name: "Apply for financial aid and scholarships",
    description: "Financial aid and scholarships can give me economic support when paying for college.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-57&redirect_to=subentity&gotopage[1137]=1",
      name: "College Admissions"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-55&redirect_to=subentity&gotopage[1137]=1",
      name: "College Prep"
    }],
    type: goalBasis.once
  }, {
    name: "Enroll at college/university",
    description: "A college/university is an educational institution for a specialized field or profession.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-57&redirect_to=subentity&gotopage[1137]=1",
      name: "College Admissions"
    }, {
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-55&redirect_to=subentity&gotopage[1137]=1",
      name: "College Prep"
    }],
    type: goalBasis.once
  }, {
    name: "Track degree progress and credit requirements",
    description: "It is important to know my degree progress and credit requirements to graduate on time.",
    type: goalBasis.once
  }, {
    name: "Talk with academic advisor at college/university",
    description: "An academic advisor at college/university can give me advice and guidance when selecting courses.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing daily homework",
    description: "A plan for doing daily homework will make it more likely that I will find the time to complete my homework.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing longer projects",
    description: "A plan for doing longer projects will make it more likely I will complete the project on time and also will reduce stress.",
    type: goalBasis.once
  }, {
    name: "Find a study group",
    description: "A study group can motivate me to learn content and are a resource when having confusion.",
    type: goalBasis.once
  }, {
    name: "Order study materials online",
    description: "Study materials are helpful when studying for courses and preparation.",
    type: goalBasis.once
  }, {
    name: "Apply for internships",
    description: "An internship is work experience offered by an organization for a period of time. It often is unpaid. ",
    type: goalBasis.once
  }, {
    name: "Go to tutoring sessions",
    description: "Tutoring sessions can clarify confusion and help me review material.",
    type: goalBasis.once
  }, {
    name: "Check ways to learn STEM (Science, Tech, Engin, Math) in college/univ",
    description: "Learning STEM (Science,Tech,Engin,Math) can help me learn information and skills useful in a future career.",
    type: goalBasis.once
  }, {
    name: "Work on application materials for college/university",
    description: "Colleges/Universities have different requirements and organizing them will allow me to apply.",
    type: goalBasis.daily
  }, {
    name: "Do homework",
    description: "Completing homework assignments on time can improve learning retention and reduce future stress.",
    type: goalBasis.daily
  }, {
    name: "Study for SAT",
    description: "Studying over a structured period of time improves long-term memory.",
    type: goalBasis.daily
  }, {
    name: "Study for ACT",
    description: "Studying over a structured period of time improves long-term memory.",
    type: goalBasis.daily
  }, {
    name: "Do study session with friend",
    description: "Studying with a friend can increase learning retention and increase motivation.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }, {
    name: "Research internships",
    description: "An internship is a opportunity to learn skills and find a career.",
    type: goalBasis.weekly
  }, {
    name: "Work on application essays",
    description: "Many colleges require an application essay to receive an application.",
    type: goalBasis.weekly
  }, {
    name: "Ask guidance counselor to review and edit application essay",
    type: goalBasis.weekly
  }, {
    name: "Work on scholarship application materials/apply for scholarships",
    type: goalBasis.weekly
  }, {
    name: "Make flashcards for test",
    description: "Flashcards can help me test myself fon key terms and ideas.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "military",
  category: categories.education,
  subcategory: educationSubcategories.level,
  name: "Military with related training",
  sortOrder: 5,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=45",
    name: "Military (Active Duty or Reserves)"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your current level of education?",
    endLabel: "What level do you want to acquire?",
    startOptions: optionLists.educationLevelsMilitary,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "High school diploma",
    defaultEnd: "Military with related training"
  },
  goals: [{
    name: "Talk with guidance counselor at school about military",
    description: "My guidance counselor can give me information and details about potentially joining the military.",
    type: goalBasis.once
  }, {
    name: "Research programs in military",
    description: "The milirary has many programs including educational support and college assistance programs.",
    type: goalBasis.once
  }, {
    name: "Apply for military",
    description: "Military applications can be very selective and many requirements are needed.",
    type: goalBasis.once
  }, {
    name: "Check ways to learn STEM (Science, Tech, Engin, Math) in military",
    description: "Learning STEM (Science,Tech,Engin,Math) can help me learn information and skills useful in a future career.",
    type: goalBasis.once
  }, {
    name: "Research commitments before enlisting",
    description: "The military is a big commitment and often requires a commitment to four years of active duty.",
    type: goalBasis.once
  }, {
    name: "Enlist in military active-duty",
    description: "If I am in military active-duty, I am required to work for the military full time and I can be deployed at any time.",
    type: goalBasis.once
  }, {
    name: "Enlist in military reserves",
    description: "The military reserves requires me to serve the military part time while being close to home.",
    type: goalBasis.once
  }, {
    name: "Know schedule for first three months after enlisting",
    description: "It is important for me to know my schedule for first three months after enlisting to plan ahead and prepare.",
    type: goalBasis.once
  }, {
    name: "Think about elements involved with military active-duty and reserves",
    description: "It is important to know requirements and commitments of being involved with military active-duty and reserves.",
    links: [{
      url: "https://demo.ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=45",
      name: "Military commitments"
    }],
    type: goalBasis.daily
  }, {
    name: "Talk with family and friends about military",
    description: "Family and friends can give advice and potentially experience about military.",
    type: goalBasis.daily
  }, {
    name: "Work on application materials for military",
    description: "Military applications can be very selective and many requirements are needed.",
    links: [{
      url: "https://demo.ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=45",
      name: "Applying to military college"
    }],
    type: goalBasis.daily
  }]
}, {
  id: "training",
  category: categories.education,
  subcategory: educationSubcategories.level,
  name: "Trade/technical/vocational training",
  sortOrder: 6,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=46",
    name: "Trade School/Professional License"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your current level of education?",
    endLabel: "What level do you want to acquire?",
    startOptions: optionLists.educationLevelsTraining,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "High school diploma",
    defaultEnd: "Trade/technical/vocational training"
  },
  goals: [{
    name: "Talk with guidance counselor at school about trade/technical/vocational training",
    description: "A guidance counseslor can give me information and guide me through the application process for trade/technical/vocational training.",
    type: goalBasis.once
  }, {
    name: "Study for trade school entrance exam",
    description: "Many trade/technical/vocational schools have entrance exams to enter the school and it is important that I study for them.",
    type: goalBasis.once
  }, {
    name: "Apply for financial aid and scholarships",
    description: "Financial aid and scholarships can give me economic support when paying for trade/technical/vocational training.",
    type: goalBasis.once
  }, {
    name: "Apply for apprenticeships",
    description: "Apprenticeships includes basic training and on the job training where I would accompany an expert of the trade or profession.",
    type: goalBasis.once
  }, {
    name: "Join a study group",
    description: "A study group can motivate me to learn content and can be a resource when having confusion.",
    type: goalBasis.once
  }, {
    name: "Check ways to learn STEM (Science, Tech, Engin, Math) in trade/technical/vocational training",
    description: "Learning STEM (Science,Tech,Engin,Math) can help me learn information and skills useful in a future career.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing daily homework",
    description: "A plan for doing daily homework will make it more likely that I will find the time to complete my homework.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing longer projects",
    description: "A plan for doing longer projects will make it more likely I will complete the project on time and also will reduce stress.",
    type: goalBasis.once
  }, {
    name: "Research vocational schools in the area",
    description: "Vocational schools provide technical skills for a particular task or job.",
    type: goalBasis.once
  }, {
    name: "Research childcare options",
    description: "It is important I know the childcare options if I am going to make the time commitment to trade/technical/vocational training.",
    type: goalBasis.once
  }, {
    name: "Work on application materials for trade/technical/vocational training",
    description: "Trade/technical/vocational training have different requirements and organizing them will allow me to apply.",
    links: [{
      url: "https://demo.ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=46",
      name: "Steps to apply for trade school."
    }],
    type: goalBasis.daily
  }, {
    name: "Do homework",
    description: "Completing homework assignments on time can improve learning retention and reduce future stress.",
    type: goalBasis.daily
  }, {
    name: "Practice technical skills",
    description: "Working on technical skills will allow me to build skills useful for a future career.",
    type: goalBasis.daily
  }, {
    name: "Do study session with friend",
    description: "Studying with a friend can increase learning retention and increase motivation.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "postgraduate",
  category: categories.education,
  subcategory: educationSubcategories.level,
  name: "Postgraduate title",
  sortOrder: 7,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=185",
    name: "Postgraduate title"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "What is your current level of education?",
    endLabel: "What level do you want to acquire?",
    startOptions: optionLists.educationLevelsPostgraduate,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Bachelor's degree",
    defaultEnd: "Postgraduate title"
  },
  goals: [{
    name: "Talk with academic advisor at school about applying to graduate programs",
    description: "An academic advisor can give me information and guide me through the application process for graduate programs.",
    type: goalBasis.once
  }, {
    name: "Research graduate programs",
    description: "Different graduate programs have different requirements and opportunities like being children-friendly.",
    type: goalBasis.once
  }, {
    name: "Take the GRE/other entrance exam(s)",
    description: "I will need to register for the GRE/other entrance exam(s), for a particular date and location where the exam is being offered or online. ",
    type: goalBasis.once
  }, {
    name: "Ask for references",
    description: "I will need references to apply to some postgraduate programs to recommend me as a qualified student.",
    type: goalBasis.once
  }, {
    name: "Apply for colleges/universities",
    description: "Many colleges/universities offer courses of study and advanced academic degrees for those who have earned an undergraduate degree.",
    type: goalBasis.once
  }, {
    name: "Apply for financial aid and scholarships",
    description: "Financial aid and scholarships can give me economic support when paying for graduate programs.",
    type: goalBasis.once
  }, {
    name: "Enroll at college/university",
    description: "Many colleges/universities offer courses of study and advanced academic degrees for those who have earned an undergraduate degree.",
    type: goalBasis.once
  }, {
    name: "Track degree progress and credit requirements",
    description: "It is important to know my degree progress and credit requirements to graduate on time.",
    type: goalBasis.once
  }, {
    name: "Talk with academic advisor in grad program",
    description: "An academic advisor in a grad program can can give me advice and guidance when selecting courses.",
    type: goalBasis.once
  }, {
    name: "Find a study group",
    description: "A study group can motivate me to learn content and are a resource when having confusion.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing daily homework",
    description: "A plan for doing daily homework will make it more likely that I will find the time to complete my homework.",
    type: goalBasis.once
  }, {
    name: "Make a plan for doing longer projects",
    description: "A plan for doing longer projects will make it more likely I will complete the project on time and also will reduce stress.",
    type: goalBasis.once
  }, {
    name: "Work on application materials for graduate program",
    description: "Graduate programs can be very selective and many requirements are needed.",
    type: goalBasis.daily
  }, {
    name: "Do homework",
    description: "Completing homework assignments on time can improve learning retention and reduce future stress.",
    type: goalBasis.daily
  }, {
    name: "Do study session with friend",
    description: "Studying with a friend can increase learning retention and increase motivation.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }, {
    name: "Make flashcards for test",
    description: "Flashcards can help me test myself fon key terms and ideas.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "close to home",
  category: categories.education,
  subcategory: educationSubcategories.location,
  name: "Close to home",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=184",
    name: "Location"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Talk with guidance counselor at school",
    description: "A guidance counselor can give me academic and general advice for my education level.",
    type: goalBasis.once
  }, {
    name: "Check locations of courses before enrolling",
    description: "It is important for me to know the location of courses and distance from my home.",
    type: goalBasis.once
  }, {
    name: "Get a MetroCard, bus pass, transit pass, etc",
    description: "A MetroCard, bus pass, transit pass, etc can help me get from home to where my classes are.",
    type: goalBasis.once
  }, {
    name: "Search online for degree programs nearby",
    description: "A degree program nearby can allow me to earn my degree from a place close to my home and reduce stress.",
    type: goalBasis.once
  }]
}, {
  id: "close to school",
  category: categories.education,
  subcategory: educationSubcategories.location,
  name: "Close to child/ren's school/s",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=184",
    name: "Location"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Talk with guidance counselor at school",
    description: "A guidance counselor can give me insight on the requirements to receive a high school diploma and give general academic advice.",
    type: goalBasis.once
  }, {
    name: "Check locations of courses before enrolling",
    description: "It is important for me to know the location of courses and distance from my child/ren's school/s.",
    type: goalBasis.once
  }, {
    name: "Get a MetroCard, bus pass, transit pass, etc",
    description: "A MetroCard, bus pass, transit pass, etc can help me get from my child/ren's school/s to where my classes are.",
    type: goalBasis.once
  }, {
    name: "Search online for degree programs nearby",
    description: "A degree program nearby can allow me to earn my degree from a place close to my home and reduce stress.",
    type: goalBasis.once
  }]
}, {
  id: "commute education",
  category: categories.education,
  subcategory: educationSubcategories.location,
  name: "Easy commute",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=184",
    name: "Location"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Talk with guidance counselor at school",
    description: "A guidance counselor can give me insight on the requirements to receive a high school diploma and give general academic advice.",
    type: goalBasis.once
  }, {
    name: "Check locations of courses before enrolling",
    description: "It is important for me to know the location of courses and distance from my home.",
    type: goalBasis.once
  }, {
    name: "Get a MetroCard, bus pass, transit pass, etc",
    description: "A MetroCard, bus pass, transit pass, etc can help me get from home to where my classes are.",
    type: goalBasis.once
  }, {
    name: "Search online for degree programs nearby",
    description: "A degree program nearby can allow me to earn my degree from a place close to my home and reduce stress.",
    type: goalBasis.once
  }]
}, {
  id: "virtual learning",
  category: categories.education,
  subcategory: educationSubcategories.location,
  name: 'Virtual learning that is not "self-paced"',
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=184",
    name: "Location"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Schedule meeting with academic advisor to learn about online options at current school",
    description: "An academic advisor can give me iformation and details about the online options at my current schol.",
    type: goalBasis.once
  }, {
    name: "Search for online degree programs",
    description: "An online degree program can allow me to earn my degree from home.",
    type: goalBasis.once
  }, {
    name: "Compare different virtual learning options",
    description: "A virtual learning option can allow me to earn my degree from home.",
    type: goalBasis.once
  }, {
    name: "Practice using computer",
    description: "The ability to use a computer proficiently has education, social, and general life benefits.",
    type: goalBasis.daily
  }, {
    name: "Use online scheduling tool (such as Google calendar) to plan courseload",
    description: "An online scheduling tool can reduce stress and manage courseload with other responsibilities.",
    type: goalBasis.daily
  }]
}, {
  id: "schedule time",
  category: categories.education,
  subcategory: educationSubcategories.schedule,
  name: "Classes scheduled during time of day/night I want",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=183",
    name: "Schedule"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Schedule meeting with academic advisor",
    description: "An academic advisor can give me advice and guidance about how to structure my course schedule.",
    type: goalBasis.once
  }, {
    name: "Use online scheduling tool (such as Google calendar) to plan courseload",
    description: "An online scheduling tool can reduce stress and manage courseload with other responsibilities.",
    type: goalBasis.daily
  }]
}, {
  id: "schedule pacing",
  category: categories.education,
  subcategory: educationSubcategories.schedule,
  name: "Online courses I can do at my own pace",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=183",
    name: "Schedule"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Schedule meeting with academic advisor to learn about online options at current school",
    description: "An academic advisor can give me iformation and details about the online options at my current schol.",
    type: goalBasis.once
  }, {
    name: 'Research online "self-paced" courses in my field at various schools',
    description: "An online \"self-paced\" course in my field at various schools would allow me to woark at my own pace from home.",
    type: goalBasis.once
  }, {
    name: "Set up a space at home for studying",
    description: "Setting a space at home for studying will allow me to have a quiet location to study efficiently.",
    type: goalBasis.once
  }, {
    name: "Practice using computer",
    description: "The ability to use a computer proficiently has education, social, and general life benefits.",
    type: goalBasis.daily
  }, {
    name: "Use online scheduling tool (such as Google calendar) to plan courseload",
    description: "An online scheduling tool can reduce stress and manage courseload with other responsibilities.",
    type: goalBasis.daily
  }]
}, {
  id: "workload somewhat",
  category: categories.education,
  subcategory: educationSubcategories.satisfaction,
  name: "Workload somewhat manageable",
  sortOrder: 1,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=48",
    name: "Increasing Enjoyment in School"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "How managable is your current workload?",
    endLabel: "How managable do you want your workload to be?",
    startOptions: optionLists.educationEnjoymentSomewhat,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Workload not manageable",
    defaultEnd: "Workload somewhat manageable"
  },
  goals: [{
    name: "Talk with guidance counselor at school",
    description: "A guidance counselor can give me academic and general advice for my education level.",
    type: goalBasis.once
  }, {
    name: "Discuss time management ideas with family and friends",
    description: "My friends and family can give me advice on how to balance my time with school and my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Use online scheduling tool (such as Google calendar) to manage workload",
    type: goalBasis.weekly
  }, {
    name: "Do study session with friend",
    description: "Studying with a friend can increase learning retention and increase motivation.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "workload fully",
  category: categories.education,
  subcategory: educationSubcategories.satisfaction,
  name: "Workload fully manageable",
  sortOrder: 2,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=48",
    name: "Increasing Enjoyment in School"
  }, {
    url: "ourreach/index.php?module=ext/ipages/view&id=49",
    name: "Enjoying School & Study Skills"
  }],
  measures: {
    type: measureData.dropdown,
    startLabel: "How managable is your current workload?",
    endLabel: "How managable do you want your workload to be?",
    startOptions: optionLists.educationEnjoymentFully,
    // endOptions can be omitted because start and end options are the same
    defaultStart: "Workload not manageable",
    defaultEnd: "Workload fully manageable"
  },
  goals: [{
    name: "Talk with guidance counselor at school",
    description: "A guidance counselor can give me academic and general advice for my education level.",
    type: goalBasis.once
  }, {
    name: "Discuss time management ideas with family and friends",
    description: "My friends and family can give me advice on how to balance my time with school and my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Use online scheduling tool (such as Google calendar) to manage workload",
    type: goalBasis.weekly
  }, {
    name: "Do study session with friend",
    description: "Studying with a friend can increase learning retention and increase motivation.",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=ext/ipages/view&id=49",
      name: "Different Study Strategies"
    }],
    type: goalBasis.weekly
  }]
}, {
  id: "healthy balance",
  category: categories.education,
  subcategory: educationSubcategories.satisfaction,
  name: "Healthy school-rest-of-life balance",
  sortOrder: 3,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=49",
    name: "Enjoying School & Study Skills"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Talk with guidance counselor at school",
    description: "A guidance counselor can give me academic and general advice for my education level.",
    type: goalBasis.once
  }, {
    name: "Discuss school-rest-of-life-balance with family and friends",
    description: "My friends and family can give me advice on how to balance my time with school and my other responsibilities.",
    type: goalBasis.once
  }, {
    name: "Ask friend or family to babysit once a week so I can study",
    description: "Asking my friend or family to babysit once a week so I can study would allow me a period of time to focus on my course material.",
    type: goalBasis.once
  }, {
    name: "Walk/Exercise for 30 minutes today",
    description: "Exercising is essential for the human body. Walking for 30 minutes a day can prevent serious health issues.",
    type: goalBasis.daily,
    frequency: 1,
    times: [12 * 60 * 60]
  }, {
    name: "Study when baby is napping",
    description: "Studying when the baby is napping is an opportunity to review materials without distractions.",
    type: goalBasis.daily
  }, {
    name: "Use online scheduling tool (such as Google calendar) to manage workload",
    type: goalBasis.weekly
  }, {
    name: "Spend some time with friends",
    description: "Spending times with friends can reduce stress and improve relationships.",
    type: goalBasis.weekly
  }]
}, {
  id: "like going",
  category: categories.education,
  subcategory: educationSubcategories.satisfaction,
  name: "I like going to class",
  sortOrder: 4,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=48",
    name: "Increasing Enjoyment in School"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Talk with guidance counselor at school",
    description: "A guidance counselor can give me academic and general advice for my education level.",
    type: goalBasis.once
  }, {
    name: "Reflect on the class: talk to a friend, fellow students, or a family member",
    description: "Reflecting on a class with someone can help me review material and improve understanding.",
    type: goalBasis.daily
  }, {
    name: "Write in my gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily
  }]
}, {
  id: "challenging",
  category: categories.education,
  subcategory: educationSubcategories.satisfaction,
  name: "It challenges me to grow",
  sortOrder: 5,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=49",
    name: "Enjoying School & Study Skills"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Talk with guidance counselor or academic advisor",
    description: "A guidance counselor can give me academic and general advice for my education level.",
    type: goalBasis.once
  }, {
    name: "Reflect on the class: talk to a friend, fellow students, or a family member",
    description: "Reflecting on a class with someone can help me review material and improve understanding.",
    type: goalBasis.daily
  }, {
    name: "Write in my gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily
  }]
}, {
  id: "interesting",
  category: categories.education,
  subcategory: educationSubcategories.satisfaction,
  name: "Class topics genuinely interest me",
  sortOrder: 6,
  links: [{
    url: "ourreach/index.php?module=ext/ipages/view&id=48",
    name: "Increasing Enjoyment in School"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Talk with guidance counselor or academic advisor",
    description: "A guidance counselor can give me academic and general advice for my education level.",
    type: goalBasis.once
  }, {
    name: "Look up course descriptions",
    description: "Asking my friend or family to babysit once a week so I can study would allow me a period of time to focus on my course material.",
    type: goalBasis.once
  }, {
    name: "Ask previous students about the material, professors, interests, etc",
    description: "Previous students can give me more information and detail about material, professors, interests, etc.",
    type: goalBasis.once
  }, {
    name: "Reflect on the class: talk to a friend, fellow students, or a family member",
    description: "Reflecting on a class with someone can help me review material and improve understanding.",
    type: goalBasis.daily
  }, {
    name: "Write in my gratitude journal",
    description: "Writing in a Gratitude Journal improves positivity, self-esteem, reduces stress, and helps me sleep better.",
    type: goalBasis.daily
  }]
},
/* Start of Other Milestones*/
{
  id: "younglives camp",
  category: categories.other,
  subcategory: otherSubcategories.program,
  name: "Prepare for YoungLives Camp",
  sortOrder: 1,
  links: [{
    url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&redirect_to=subentity&gotopage[875]=1",
    name: "YoungLives Camp Forms"
  }],
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Review Camp Calendar",
    description: "Review Camp Calendar to Prepare for Camp",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35&action=download_attachment&preview=1&file=MTYyNzMxNjY4OV9Zb3VuZ0xpdmVzX1VQREFURURfQ2FsZW5kYXJfdG9fUHJlcGFyZV9mb3JfQ2FtcF8yNUp1bjIwMjEucGRm",
      name: "Camp Calendar"
    }],
    type: goalBasis.once
  }, {
    name: "Review Camp Health Form (for myself)",
    description: "Review Camp Health Form (for myself) to learn if my doctor needs to complete any part, in addition to providing immunization records",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIxODY5NV9Zb3VuZ0xpdmVzX0NhbXBfSGVhbHRoX0Zvcm1fdG9fQ29tcGxldGVfZm9yX2VhY2hfQ2FtcGVyX2FuZF9lYWNoX0NoaWxkXzIwMjEucGRm",
      name: "Camp Health Forms"
    }],
    type: goalBasis.once
  }, {
    name: "Arrange Pick-up for my Immunization Records",
    description: "If I only need immunization records from my doctor, call doctor's office to arrange pick-up",
    type: goalBasis.once
  }, {
    name: "Drop off my Health Form",
    description: "If I need my doctor to complete part of form in addition to immunization records, drop off form at doctor's office",
    type: goalBasis.once
  }, {
    name: "Pick Up my Immunization Records and Possibly Form",
    description: "Pick up immunization records (and other part of form, if necessary) from doctor's office",
    type: goalBasis.once
  }, {
    name: "Submit my Camp Health Form",
    description: "Submit to YoungLives my completed Camp Health Form with immunization records",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIxODY5NV9Zb3VuZ0xpdmVzX0NhbXBfSGVhbHRoX0Zvcm1fdG9fQ29tcGxldGVfZm9yX2VhY2hfQ2FtcGVyX2FuZF9lYWNoX0NoaWxkXzIwMjEucGRm",
      name: "Camp Health Forms"
    }],
    type: goalBasis.once
  }, {
    name: "Review Camp Health Form (for my child/ren)",
    description: "Review Camp Health Form (for my child/ren) to learn if pediatrician needs to complete any part, in addition to providing immunization records",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIxODY5NV9Zb3VuZ0xpdmVzX0NhbXBfSGVhbHRoX0Zvcm1fdG9fQ29tcGxldGVfZm9yX2VhY2hfQ2FtcGVyX2FuZF9lYWNoX0NoaWxkXzIwMjEucGRm",
      name: "YL Camp Child Information"
    }],
    type: goalBasis.once
  }, {
    name: "Arrange Pick-up for Immunization Records for my child/ren",
    description: "If I only need immunization records for my child/ren from my pediatrician, call pediatrician's office to arrange pick-up",
    type: goalBasis.once
  }, {
    name: "Drop off my child/ren's Health Form(s)",
    description: "If I need pediatrician to complete part of form in addition to immunization records, drop off form at pediatricians's office",
    type: goalBasis.once
  }, {
    name: "Pick Up my child/ren's Immunization Records and Possibly Form(s)",
    description: "Pick up immunization records (and other part of form, if necessary) from pediatrician's office, for each child",
    type: goalBasis.once
  }, {
    name: "Submit Camp Health Form for my child/ren",
    description: "Submit to YoungLives the completed Camp Health Form for each child, with immunization records",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIxODY5NV9Zb3VuZ0xpdmVzX0NhbXBfSGVhbHRoX0Zvcm1fdG9fQ29tcGxldGVfZm9yX2VhY2hfQ2FtcGVyX2FuZF9lYWNoX0NoaWxkXzIwMjEucGRm",
      name: "YL Camp Health Form"
    }],
    type: goalBasis.once
  }, {
    name: "Submit Child Information Sheet",
    description: "Submit to YoungLives the completed Child Information Sheet for each child",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIxODY4NV9DaGlsZF9JbmZvcm1hdGlvbl9TaGVldF9mb3JfWW91bmdMaXZlc19DYW1wLnBkZg%3D%3D",
      name: "YL Camp Child Sheet"
    }],
    type: goalBasis.once
  }, {
    name: "Submit Camper Contract",
    description: "Submit to YoungLives my completed Camper Contract",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIxOTA1MF9Zb3VuZ0xpdmVzX0NhbXBlcl9Db250cmFjdC5wZGY%3D",
      name: "Camper Contract"
    }],
    type: goalBasis.once
  }, {
    name: "Review Camp Packing List",
    description: "Review the Camp Packing List to make sure I have everything needed",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIyODc2MV9Zb3VuZ0xpdmVzX0NhbXBlcl9QYWNraW5nX0xpc3QucGRm",
      name: "Packing List"
    }],
    type: goalBasis.once
  }, {
    name: "Get anything else needed from the Packing List",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIyODc2MV9Zb3VuZ0xpdmVzX0NhbXBlcl9QYWNraW5nX0xpc3QucGRm",
      name: "Packing List"
    }],
    type: goalBasis.once
  }, {
    name: "Pack",
    links: [{
      url: "ourreachld.com/ourreach/index.php?module=items/info&path=35-40&action=download_attachment&preview=1&file=MTYyMDIyODc2MV9Zb3VuZ0xpdmVzX0NhbXBlcl9QYWNraW5nX0xpc3QucGRm",
      name: "Packing List"
    }],
    type: goalBasis.once
  }, {
    name: "Leave for Camp",
    type: goalBasis.once
  }]
}, {
  id: "younglives ongoing",
  category: categories.other,
  subcategory: otherSubcategories.program,
  name: "YoungLives Ongoing Activities",
  sortOrder: 2,
  measures: {
    type: measureData.none
  },
  goals: [{
    name: "Call at least one YoungLives friend",
    description: "It is suggested to call one YoungLives friend (try to contact various friends at different times) weekly (or more) at my own convenience.",
    type: goalBasis.weekly
  }, {
    name: "Text my YoungLives mentor",
    description: "It is suggested to text my YoungLives leader or mentor weekly (or more) at my own convenience. Another way to communicate with my mentor is through the 'Messages' Chat feature in this app.",
    type: goalBasis.weekly
  }, {
    name: "Attend YoungLives event",
    description: "It is suggested to attend a YoungLives event (meeting or other event) twice per month (or more) at my own convenience.",
    type: goalBasis.monthly,
    days: [14, 28]
  }]
}];


/***/ }),

/***/ "./frontend/src/utilities/asyncConfirm.js":
/*!************************************************!*\
  !*** ./frontend/src/utilities/asyncConfirm.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "asyncConfirm": () => (/* binding */ asyncConfirm)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _classes_components_ConfirmComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes/components/ConfirmComponent.js */ "./frontend/src/classes/components/ConfirmComponent.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



function asyncConfirm(_x, _x2) {
  return _asyncConfirm.apply(this, arguments);
}

function _asyncConfirm() {
  _asyncConfirm = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(message, callback) {
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            new _classes_components_ConfirmComponent_js__WEBPACK_IMPORTED_MODULE_1__.default(message, callback);

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _asyncConfirm.apply(this, arguments);
}



/***/ }),

/***/ "./frontend/src/utilities/enums.js":
/*!*****************************************!*\
  !*** ./frontend/src/utilities/enums.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pages": () => (/* binding */ Pages),
/* harmony export */   "Message": () => (/* binding */ Message),
/* harmony export */   "Outcome": () => (/* binding */ Outcome),
/* harmony export */   "Status": () => (/* binding */ Status),
/* harmony export */   "EntityEnum": () => (/* binding */ EntityEnum),
/* harmony export */   "MeasureType": () => (/* binding */ MeasureType),
/* harmony export */   "RepeatType": () => (/* binding */ RepeatType),
/* harmony export */   "Day": () => (/* binding */ Day),
/* harmony export */   "CategoryEnum": () => (/* binding */ CategoryEnum),
/* harmony export */   "UserRole": () => (/* binding */ UserRole)
/* harmony export */ });
var Message = {
  CLICK: "clicked",
  CHANGE: "value changed",
  FOCUS: "field focused",
  BLUR: "field blurred",
  START_EDITING: "started editing",
  STOP_EDITING: "stopped editing",
  SUBMIT: "submit form",
  DELETE: "delete",
  CLOSE_MODAL: "close modal",
  ADD_LINK: "add link component",
  ADD_GOAL: "add goal component",
  ADD_COMMENT: "add comment component",
  EDIT_MILESTONE: "edit milestone component",
  EDIT_LINK: "edit link component",
  EDIT_GOAL: "edit goal component",
  EDIT_COMMENT: "edit comment component",
  DELETE_LINK: "delete link component",
  DELETE_GOAL: "delete goal component",
  DELETE_COMMENT: "delete comment component",
  DELETE_MILESTONE: "delete milestone component",
  CREATED_MILESTONE: "created new milestone",
  SET_TEMPLATE: "setting goal template",
  UNSET_TEMPLATE: "unsetting goal template"
};
var Pages = {
  NOT_FOUND: 'not-found',
  DASHBOARD: 'dashboard',
  LISTING: 'listing',
  VIEW_MILESTONE: 'view_milestone'
};
var Outcome = {
  SUCCESS: "SUCCESS",
  BAD_VALUE: "BAD VALUE",
  EXCEPTION: "EXCEPTION",
  NOT_FOUND: "NOT FOUND",
  NO_PERMISSION: "NO_PERMISSION"
};
var Status = {
  SUCCESS: "SUCCESS",
  FAILURE: "FAILURE",
  EXCEPTION: "EXCEPTION"
};
var EntityEnum = {
  MILESTONE: "App\\Models\\Milestone",
  GOAL: "App\\Models\\Goal",
  LINK: "App\\Models\\Link"
};
var CategoryEnum = {
  HEALTH: "Health",
  CHILDREN: "Children",
  EDUCATION: "Education",
  HOUSING: "Housing",
  JOBS: "Jobs",
  MONEY: "Money",
  OTHER: "Other"
};
var MeasureType = {
  DROPDOWN: "dropdown",
  FREEFORM: "freeform",
  NONE: "none"
};
var RepeatType = {
  ONE_TIME: "one-time",
  DAILY: "daily",
  WEEKLY: "weekly",
  MONTHLY: "monthly",
  YEARLY: "yearly"
};
var Day = {
  SUN: "Sunday",
  MON: "Monday",
  TUE: "Tuesday",
  WED: "Wednesday",
  THU: "Thursday",
  FRI: "Friday",
  SAT: "Saturday"
};
var UserRole = {
  ADMIN: "Admin",
  MENTOR: "Mentor",
  PARENT: "Parent",
  COORDINATOR: "Coordinator"
};


/***/ }),

/***/ "./frontend/src/utilities/js-styles.js":
/*!*********************************************!*\
  !*** ./frontend/src/utilities/js-styles.js ***!
  \*********************************************/
/***/ (() => {

/* Method for detecting nodes inserted into the DOM. Adapted from John Clegg:
 * https://stackoverflow.com/questions/10415400/jquery-detecting-div-of-certain-class-has-been-added-to-dom
 */
function onElementInserted(containerSelector, elementSelector, callback) {
  var onMutationsObserved = function onMutationsObserved(mutations) {
    mutations.forEach(function (mutation) {
      if (mutation.addedNodes.length) {
        var elements = $(mutation.addedNodes).find(elementSelector);

        for (var i = 0, len = elements.length; i < len; i++) {
          callback(elements[i]);
        }
      }
    });
  };

  var target = $(containerSelector)[0];
  var config = {
    childList: true,
    subtree: true
  };
  var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;
  var observer = new MutationObserver(onMutationsObserved);
  observer.observe(target, config);
}
/* Homebrew jQuery solution for hover events, for consistent mobile & desktop experience */


$(document).on('mouseenter', '.js-hoverable', function () {
  $(this).addClass('js-hover');
  $(this).trigger('starthover');
});
$(document).on('mouseleave', '.js-hoverable', function () {
  $(this).removeClass('js-hover');
  $(this).trigger('endhover');
});
/* Homebrew jQuery solution for activate events, for consistent mobile & desktop experience */

$(document).on('mousedown mouseenter', '.js-activable', function (e) {
  // if left mouse is down, make active
  if (e.buttons % 2) {
    $(this).addClass('js-active');
    $(this).trigger('startactive');
  }
});
$(document).on('mouseleave mouseup', '.js-activable', function () {
  $(this).removeClass('js-active');
  $(this).trigger('endactive');
});
/* Homebrew solution for fitting text to limited width by setting font-size.
 * I could use a community solution also.
 */

var hiddenFittingDiv = $('<div style="position:fixed; left: 0; top: 200vh; width: 10000px;"></div>');
var nestedFittingDiv = $('<div style="width:fit-content;"></div>');
var fittingSpan = $('<span></span>');
nestedFittingDiv.append(fittingSpan);
hiddenFittingDiv.append(nestedFittingDiv);
$('body').prepend(hiddenFittingDiv);

function fitTextByWidth() {
  var span = $(this);
  var div = $(this).parent();
  var minFontSize = span.attr("minfontsize") ? span.attr("minfontsize") : 8;
  var maxFontSize = span.attr("maxfontsize") ? span.attr("maxfontsize") : 50;
  fittingSpan.css('font-size', maxFontSize + 'px');
  fittingSpan.html(span.html());
  var fittingWidth = nestedFittingDiv.width();
  var spanWidth = div.width();
  span.css('font-size', 'max(' + minFontSize + 'px, min(' + maxFontSize + 'px, ' + spanWidth / fittingWidth * parseInt(maxFontSize) + 'px))');
} // Extend fitTextByWidth to a jquery function


(function ($) {
  $.fn.fitTextByWidth = function () {
    this.each(fitTextByWidth);
    return this;
  };
})(jQuery);

$(window).on("resize", function () {
  $('div.js-fit-text > span').fitTextByWidth();
});
$(document).ready(function () {
  $('div.js-fit-text > span').fitTextByWidth();
});
onElementInserted('body', 'div.js-fit-text > span', function (sp) {
  return $(sp).fitTextByWidth();
});
/* Solution for pasting only plain text into contenteditable divs.
 * Adapted from Jamie Barker at
 * https://stackoverflow.com/questions/12027137/javascript-trick-for-paste-as-plain-text-in-execcommand
 * This solves problems that happen when you try to paste rich text into the journal textboxes.
 */
//const hiddenTextArea = $('<textarea style="position:fixed; left: 0; top: 200vh; width: 400px;"></textarea>');

$(document).on('paste', 'div[contenteditable]', function (e) {
  e.preventDefault();
  var text = '';

  if (e.clipboardData || e.originalEvent.clipboardData) {
    text = (e.originalEvent || e).clipboardData.getData('text/plain');
  } else if (window.clipboardData) {
    text = window.clipboardData.getData('Text');
  } //hiddenTextArea.innerHTML = text;
  //text = hiddenTestArea.innerHTML;


  if (document.queryCommandSupported('insertText')) {
    document.execCommand('insertText', false, text);
  } else {
    document.execCommand('paste', false, text);
  }
});

/***/ }),

/***/ "./frontend/src/utilities/object-fields.js":
/*!*************************************************!*\
  !*** ./frontend/src/utilities/object-fields.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MeasureMetadata": () => (/* binding */ MeasureMetadata),
/* harmony export */   "RepeatRule": () => (/* binding */ RepeatRule)
/* harmony export */ });
/* harmony import */ var luxon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! luxon */ "./frontend/node_modules/luxon/build/cjs-browser/luxon.js");
/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums */ "./frontend/src/utilities/enums.js");
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./time */ "./frontend/src/utilities/time.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




/*
  *     measures: { // An object defining the measure type and options associated with the milestone.
  *                type: // Either "dropdown", "freeform", or "none". Anything else defaults to "none".
  *        // If type is not "none", also include the following two:
  *                startLabel: // The prompt on the form offered for the starting measure field, e.g. "Where are you now on this milestone?"
  *                endLabel: // The prompt on the form offered for the ending measure field, e.g. "Where do you want to be when this milestone is done?"
  *                          // Try to keep these pretty short.
  *         // If type = "freeform", include these three:
  *                unit: // Optional: A string for the unit of the measure, e.g. "lb", "%", "mmHg"
  *                placeholderStartValue: // The greyed-out placeholder text in the input textbox for the starting measure,
  *                                       // before anything is written by the user, e.g. "Current status",
  *                placeholderEndValue: // The same for the ending measure, e.g. "End Status"
  *         // If type = "dropdown", include these four instead:
  *                startOptions: // Array of strings defining the options for the starting measure dropdown
  *                endOptions: // Array of strings defining the options for the ending measure dropdown.
  *                            // NOTE! If these are the same as the start options, they can be omitted.
  *                defaultStart: // A string for the default value in the starting measure dropdown. If it is present in startOptions, then that one will be autoselected.
  *                              // Otherwise, it will act like a placeholder, e.g. "Choose an option", and won't be selectable
  *                defaultEnd: // The analogous field for the ending options
  *               }
  */

var MeasureMetadata = /*#__PURE__*/function () {
  function MeasureMetadata() {
    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _enums__WEBPACK_IMPORTED_MODULE_0__.MeasureType.FREEFORM;
    var startLabel = arguments.length > 1 ? arguments[1] : undefined;
    var endLabel = arguments.length > 2 ? arguments[2] : undefined;
    var startOptions = arguments.length > 3 ? arguments[3] : undefined;
    var endOptions = arguments.length > 4 ? arguments[4] : undefined;
    var defaultStart = arguments.length > 5 ? arguments[5] : undefined;
    var defaultEnd = arguments.length > 6 ? arguments[6] : undefined;
    var placeholderStartValue = arguments.length > 7 ? arguments[7] : undefined;
    var placeholderEndValue = arguments.length > 8 ? arguments[8] : undefined;
    var unit = arguments.length > 9 ? arguments[9] : undefined;

    _classCallCheck(this, MeasureMetadata);

    this.type = type;

    switch (this.type) {
      case _enums__WEBPACK_IMPORTED_MODULE_0__.MeasureType.DROPDOWN:
        this.startOptions = startOptions;
        this.endOptions = endOptions;
        this.defaultStart = defaultStart;
        this.defaultEnd = defaultEnd;
        this.placeholderStartValue = defaultStart !== null && defaultStart !== void 0 ? defaultStart : "Current status";
        this.placeholderEndValue = defaultEnd !== null && defaultEnd !== void 0 ? defaultEnd : "Current status";

        if (this.startOptions && !this.endOptions) {
          // If start options are not given but end options are, default to end options
          this.endOptions = this.startOptions;
        }

        if (this.startOptions && this.endOptions) break;

      case _enums__WEBPACK_IMPORTED_MODULE_0__.MeasureType.FREEFORM:
        this.unit = unit !== null && unit !== void 0 ? unit : "";
        this.placeholderStartValue = placeholderStartValue !== null && placeholderStartValue !== void 0 ? placeholderStartValue : "Current status";
        this.placeholderEndValue = placeholderEndValue !== null && placeholderEndValue !== void 0 ? placeholderEndValue : "End status";
        break;

      case _enums__WEBPACK_IMPORTED_MODULE_0__.MeasureType.NONE:
      default:
        this.type = _enums__WEBPACK_IMPORTED_MODULE_0__.MeasureType.NONE;
      // No measures, do nothing
    }

    this.startLabel = startLabel !== null && startLabel !== void 0 ? startLabel : "Where are you now on this milestone?";
    this.endLabel = endLabel !== null && endLabel !== void 0 ? endLabel : "Where do you want to be?";
  } // Takes data in database JSON format


  _createClass(MeasureMetadata, [{
    key: "toJSON",
    value: function toJSON() {
      var out = {
        type: this.type
      };
      if (this.startLabel) out.startLabel = this.startLabel;
      if (this.endLabel) out.endLabel = this.endLabel;

      switch (this.type) {
        case _enums__WEBPACK_IMPORTED_MODULE_0__.MeasureType.DROPDOWN:
          if (this.startOptions) {
            out.startOptions = this.startOptions;
            out.endOptions = this.endOptions;
          }

          if (this.defaultStart) out.defaultStart = this.defaultStart;
          if (this.defaultEnd) out.defaultEnd = this.defaultEnd;
          break;

        case _enums__WEBPACK_IMPORTED_MODULE_0__.MeasureType.FREEFORM:
          if (this.unit) out.unit = this.unit;
          if (this.placeholderStartValue) out.placeholderStartValue = this.placeholderStartValue;
          if (this.placeholderEndValue) out.placeholderEndValue = this.placeholderEndValue;
          break;
      }

      return JSON.stringify(out);
    }
  }], [{
    key: "fromJSON",
    value: function fromJSON(data_in_json) {
      var data = JSON.parse(data_in_json);
      return new MeasureMetadata(data.type, data.startLabel, data.endLabel, data.startOptions, data.endOptions, data.defaultStart, data.defaultEnd, data.placeholderStartValue, data.placeholderEndValue, data.unit);
    }
  }]);

  return MeasureMetadata;
}();
/*
 * type: // "one-time", "daily", "weekly", "monthly", or "yearly". See goalBasis.
 *           // Then there are different options depending on type.
 *           // MOST OF THESE DO NOT NEED TO BE FILLED IN JUST NOW. Stick with name and type, unless you really want to fill out more.
 *           // If type = "one-time":
 * deadline: // Presumably, no need to set a default deadline, so skip this field.
 *           // If type = "daily":
 * frequency: // Positive integer number of days between repetitions. E.g. 1 would repeat every day, 2 every other day, etc.
 * times: // A non-empty array of times of day, expressed in seconds since midnight, e.g. 12:00 noon would be 12*60*60.
 *           // If type = "weekly":
 * days: { // An object mapping days to arrays of times, just as above. The days of the week are listed in the days variable. It's fine to omit days entirely.
 * mon : [13 * 60 * 60, 18 * 60 * 60], // An example
 * tue : [], // No times listed on Tuesday, same as not including Tuesday at all
 * fri : [16 * 60 * 60],
 *               }
 *           // If type = "monthly":
 * monthly : // An array of numbers between 1 and 31, identifying days of the month (we'll expand this later). E.g. [1, 5, 10] for the first, fifth, and tenth of each month.
 *             }
 */

function listOffArray(arrayOfStrings) {
  if (arrayOfStrings.length == 0) {
    return "";
  }

  if (arrayOfStrings.length == 1) {
    return arrayOfStrings[0];
  }

  if (arrayOfStrings.length == 2) {
    return arrayOfStrings[0] + " and " + arrayOfStrings[1];
  }

  var out = "";

  for (var i = 0; i < arrayOfStrings.length - 1; i++) {
    out += arrayOfStrings[i] + ", ";
  }

  out += "and " + arrayOfStrings[arrayOfStrings.length - 1];
  return out;
}

var RepeatRule = /*#__PURE__*/function () {
  function RepeatRule(type, startingOn, frequency, times) {
    var daysOfWeek = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
    var daysOfMonth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];
    var timezone = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : undefined;

    _classCallCheck(this, RepeatRule);

    this.type = type;
    this.startingOn = startingOn !== null && startingOn !== void 0 ? startingOn : luxon__WEBPACK_IMPORTED_MODULE_2__.DateTime.now();
    this.frequency = frequency;
    this.times = times;
    this.daysOfWeek = daysOfWeek;
    this.daysOfMonth = daysOfMonth;
    this.timezone = timezone !== null && timezone !== void 0 ? timezone : luxon__WEBPACK_IMPORTED_MODULE_2__.DateTime.now().zoneName;
  }

  _createClass(RepeatRule, [{
    key: "daysOfWeekFullNames",
    get: function get() {
      return this.daysOfWeek.map(function (day) {
        return _enums__WEBPACK_IMPORTED_MODULE_0__.Day[day];
      });
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return JSON.stringify({
        type: this.type,
        startingOn: this.startingOn.toSQL(),
        frequency: this.frequency,
        times: this.times,
        daysOfWeek: this.daysOfWeek,
        daysOfMonth: this.daysOfMonth,
        timezone: this.timezone
      });
    }
  }, {
    key: "toString",
    value: function toString() {
      // needs work!
      if (this.type == _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.ONE_TIME) {
        return "By " + this.startingOn.toFormat('LLLL dd, yyyy') + " at " + (0,_time__WEBPACK_IMPORTED_MODULE_1__.timeOfDayFromSeconds)(this.times[0], true);
      }

      var out = "";

      if (this.frequency > 1) {
        out += "Every " + this.frequency + " ";

        switch (this.type) {
          case _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.DAILY:
            out += "days by " + (0,_time__WEBPACK_IMPORTED_MODULE_1__.timeOfDayFromSeconds)(this.times[0], true);
            break;

          case _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.WEEKLY:
            out += "weeks on " + listOffArray(this.daysOfWeekFullNames) + " by " + (0,_time__WEBPACK_IMPORTED_MODULE_1__.timeOfDayFromSeconds)(this.times[0], true);
            break;

          case _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.MONTHLY:
            out += "months on days " + listOffArray(this.daysOfMonth) + " by " + (0,_time__WEBPACK_IMPORTED_MODULE_1__.timeOfDayFromSeconds)(this.times[0], true);
            break;

          case _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.YEARLY:
            out += "years";
            break;
        }
      } else {
        switch (this.type) {
          case _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.DAILY:
            out = "Every day by " + (0,_time__WEBPACK_IMPORTED_MODULE_1__.timeOfDayFromSeconds)(this.times[0], true);
            break;

          case _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.WEEKLY:
            out = "Every week on " + listOffArray(this.daysOfWeekFullNames) + " by " + (0,_time__WEBPACK_IMPORTED_MODULE_1__.timeOfDayFromSeconds)(this.times[0], true);
            break;

          case _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.MONTHLY:
            out = "Every month on days " + listOffArray(this.daysOfMonth) + " by " + (0,_time__WEBPACK_IMPORTED_MODULE_1__.timeOfDayFromSeconds)(this.times[0], true);
            break;

          case _enums__WEBPACK_IMPORTED_MODULE_0__.RepeatType.YEARLY:
            out = "Every year";
            break;
        }
      }

      return out;
    }
  }], [{
    key: "fromJSON",
    value: function fromJSON(data_in_json) {
      var data = JSON.parse(data_in_json);
      return new RepeatRule(data.type, luxon__WEBPACK_IMPORTED_MODULE_2__.DateTime.fromSQL(data.startingOn), data.frequency, data.times, data.daysOfWeek, data.daysOfMonth, data.timezone);
    }
  }]);

  return RepeatRule;
}();

/***/ }),

/***/ "./frontend/src/utilities/request.js":
/*!*******************************************!*\
  !*** ./frontend/src/utilities/request.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "makeRequest": () => (/* binding */ makeRequest),
/* harmony export */   "redirect": () => (/* binding */ redirect)
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _classes_data_sources_User__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes/data-sources/User */ "./frontend/src/classes/data-sources/User.js");
/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enums */ "./frontend/src/utilities/enums.js");
/* harmony import */ var luxon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! luxon */ "./frontend/node_modules/luxon/build/cjs-browser/luxon.js");
/* harmony import */ var _time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./time */ "./frontend/src/utilities/time.js");
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../env */ "./frontend/src/env.js");


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }







function makeRequest(_x) {
  return _makeRequest.apply(this, arguments);
}

function _makeRequest() {
  _makeRequest = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(req) {
    var field, p;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // Only allow objects to be sent as data, not plain strings, ints, etc.
            if (!(req.data instanceof Object)) {
              if (req !== undefined) {
                console.error("req.data not an object! req = " + req);
              }

              req.data = {};
            }

            req.data = _objectSpread({}, req.data); // Copy the data, so as not to overwrite any other uses for the input variable
            // If data is being sent, double-check that all DateTimes are converted to database versions

            for (field in req.data) {
              if (req.data[field] instanceof luxon__WEBPACK_IMPORTED_MODULE_5__.DateTime) {
                req.data[field] = (0,_time__WEBPACK_IMPORTED_MODULE_3__.DateTimeToDatabaseFormat)(req.data[field]);
              }
            } // Add the endpoint if not already present


            if (!req.url.startsWith(_env__WEBPACK_IMPORTED_MODULE_4__.endpoint)) {
              req.url = _env__WEBPACK_IMPORTED_MODULE_4__.endpoint + req.url;
            } // Now there are two options. The secure way to make an api request is to post it to subdomain.ourreachld.com/ourreach/index.php?module=ldbackend/
            // Then ruko will verify the user, attach the user id, and send the real request to the backend.


            if (!_env__WEBPACK_IMPORTED_MODULE_4__.secure) {
              _context.next = 9;
              break;
            }

            //console.log("SECURE", $.ajax({ url: ruko_endpoint, type: 'POST', data: req}));
            p = new Promise(function (resolve, reject) {
              var channel = new MessageChannel();

              channel.port1.onmessage = function (_ref) {
                var data = _ref.data;
                channel.port1.close();
                console.log("EVENT", data);

                if (data.response) {
                  resolve(data.response);
                } else {
                  reject(data);
                }
              };

              window.parent.postMessage({
                request: {
                  url: _env__WEBPACK_IMPORTED_MODULE_4__.ruko_endpoint,
                  type: "POST",
                  data: req
                }
              }, 'https://ourreachld.com', [channel.port2]);
            });
            return _context.abrupt("return", p);

          case 9:
            // The insecure way is to just attach the ruko user and send it. The real backend will reject any request that is not from a subdomain, so this will fail.
            // For a development server, it will work.
            req.data.ruko_user = _classes_data_sources_User__WEBPACK_IMPORTED_MODULE_1__.default.currentUserId;
            return _context.abrupt("return", $.ajax(req));

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _makeRequest.apply(this, arguments);
}

function isValidURL(string) {
  // https://stackoverflow.com/a/49849482/6525081
  var res = string.match(/(http(s)?:\/\/.)(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g);
  return res !== null;
}

;

function formatUrl(path) {
  if (_env__WEBPACK_IMPORTED_MODULE_4__.subdomain && path.includes('ourreach/index.php')) {
    path = 'https://' + _env__WEBPACK_IMPORTED_MODULE_4__.subdomain + '.ourreachld.com/ourreach/' + path.split('ourreach/')[1];
  }

  if (!path.startsWith('http')) {
    return 'http://' + path;
  }

  return path;
}

function redirect(path) {
  if (path instanceof Object) {
    switch (path.page) {
      case _enums__WEBPACK_IMPORTED_MODULE_2__.Pages.NOT_FOUND:
      case _enums__WEBPACK_IMPORTED_MODULE_2__.Pages.DASHBOARD:
        path = _env__WEBPACK_IMPORTED_MODULE_4__.runningLocal ? _env__WEBPACK_IMPORTED_MODULE_4__.endpoint + 'dashboard?ruko_user=' + _classes_data_sources_User__WEBPACK_IMPORTED_MODULE_1__.default.currentUserId : 'ourreach/index.php?module=dashboard/';
        break;

      case _enums__WEBPACK_IMPORTED_MODULE_2__.Pages.LISTING:
        path = _env__WEBPACK_IMPORTED_MODULE_4__.runningLocal ? _env__WEBPACK_IMPORTED_MODULE_4__.endpoint + 'milestones?ruko_user=' + _classes_data_sources_User__WEBPACK_IMPORTED_MODULE_1__.default.currentUserId : 'ourreach/index.php?module=items/items&path=83';
        break;

      case _enums__WEBPACK_IMPORTED_MODULE_2__.Pages.VIEW_MILESTONE:
        path = _env__WEBPACK_IMPORTED_MODULE_4__.runningLocal ? _env__WEBPACK_IMPORTED_MODULE_4__.endpoint + 'ruko/milestone/' + path.ruko_id + '?ruko_user=' + _classes_data_sources_User__WEBPACK_IMPORTED_MODULE_1__.default.currentUserId : 'ourreach/index.php?module=items/info&path=83-' + path.ruko_id;
        break;

      default:
        console.error("Bad input to redirect function: " + path);
        return;
    }
  }

  path = formatUrl(path);

  if (!_env__WEBPACK_IMPORTED_MODULE_4__.runningLocal) {
    window.parent.postMessage({
      url: path
    }, 'https://' + _env__WEBPACK_IMPORTED_MODULE_4__.subdomain + '.ourreachld.com');
  } else {
    location = path;
  }
}



/***/ }),

/***/ "./frontend/src/utilities/templateDataLists.js":
/*!*****************************************************!*\
  !*** ./frontend/src/utilities/templateDataLists.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Subcategory": () => (/* binding */ Subcategory),
/* harmony export */   "TemplateMilestone": () => (/* binding */ TemplateMilestone),
/* harmony export */   "TemplateMilestoneById": () => (/* binding */ TemplateMilestoneById)
/* harmony export */ });
/* harmony import */ var _milestone_template_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../milestone-template-data */ "./frontend/src/milestone-template-data.js");
/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums */ "./frontend/src/utilities/enums.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



var Subcategory = {};
Subcategory[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum.HEALTH] = _milestone_template_data__WEBPACK_IMPORTED_MODULE_0__.healthSubcategories;
Subcategory[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum.HOUSING] = _milestone_template_data__WEBPACK_IMPORTED_MODULE_0__.housingSubcategories;
Subcategory[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum.MONEY] = _milestone_template_data__WEBPACK_IMPORTED_MODULE_0__.moneySubcategories;
Subcategory[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum.JOBS] = _milestone_template_data__WEBPACK_IMPORTED_MODULE_0__.jobsSubcategories;
Subcategory[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum.EDUCATION] = _milestone_template_data__WEBPACK_IMPORTED_MODULE_0__.educationSubcategories;
Subcategory[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum.CHILDREN] = _milestone_template_data__WEBPACK_IMPORTED_MODULE_0__.childrenSubcategories;
Subcategory[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum.OTHER] = _milestone_template_data__WEBPACK_IMPORTED_MODULE_0__.otherSubcategories;
var TemplateMilestone = {};
var TemplateMilestoneById = {};

for (var cat in _enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum) {
  TemplateMilestone[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum[cat]] = {};

  for (var _i = 0, _Object$values = Object.values(Subcategory[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum[cat]]); _i < _Object$values.length; _i++) {
    var subcat = _Object$values[_i];
    TemplateMilestone[_enums__WEBPACK_IMPORTED_MODULE_1__.CategoryEnum[cat]][subcat.id] = [];
  }
}

var _iterator = _createForOfIteratorHelper(_milestone_template_data__WEBPACK_IMPORTED_MODULE_0__.templateData),
    _step;

try {
  for (_iterator.s(); !(_step = _iterator.n()).done;) {
    var ms = _step.value;
    TemplateMilestone[ms.category][ms.subcategory.id][ms.id] = ms;
    TemplateMilestoneById[ms.id] = ms;
  }
} catch (err) {
  _iterator.e(err);
} finally {
  _iterator.f();
}

console.log(TemplateMilestone);


/***/ }),

/***/ "./frontend/src/utilities/time.js":
/*!****************************************!*\
  !*** ./frontend/src/utilities/time.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateTimeToDatabaseFormat": () => (/* binding */ DateTimeToDatabaseFormat),
/* harmony export */   "DateTimeFromDatabaseFormat": () => (/* binding */ DateTimeFromDatabaseFormat),
/* harmony export */   "DateTimeFromISO": () => (/* binding */ DateTimeFromISO),
/* harmony export */   "timeOfDayFromSeconds": () => (/* binding */ timeOfDayFromSeconds),
/* harmony export */   "timeOfDayToSeconds": () => (/* binding */ timeOfDayToSeconds),
/* harmony export */   "formatTimesOfDay": () => (/* binding */ formatTimesOfDay),
/* harmony export */   "describeDatetimeAbsolute": () => (/* binding */ describeDatetimeAbsolute),
/* harmony export */   "describeTimestampAbsolute": () => (/* binding */ describeTimestampAbsolute),
/* harmony export */   "describeDatetimeRelative": () => (/* binding */ describeDatetimeRelative),
/* harmony export */   "describeTimestampRelative": () => (/* binding */ describeTimestampRelative)
/* harmony export */ });
/* harmony import */ var luxon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! luxon */ "./frontend/node_modules/luxon/build/cjs-browser/luxon.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


function DateTimeToDatabaseFormat(dt) {
  return dt.toUTC().toSQL({
    includeOffset: false
  });
}
function DateTimeFromDatabaseFormat(dt_str) {
  return luxon__WEBPACK_IMPORTED_MODULE_0__.DateTime.fromSQL(dt_str, {
    zone: 'UTC'
  }).toLocal();
}
function DateTimeFromISO(dt_str) {
  return luxon__WEBPACK_IMPORTED_MODULE_0__.DateTime.fromISO(dt_str, {
    zone: 'UTC'
  }).toLocal();
}
function timeOfDayFromSeconds(secondsSinceMidnight) {
  var humanReadable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var hr = Math.floor(secondsSinceMidnight / 3600).toString().padStart(2, '0');
  var min = Math.floor(secondsSinceMidnight % 3600 / 60).toString().padStart(2, '0');

  if (humanReadable) {
    hr = parseInt(hr);

    if (hr > 12) {
      return hr - 12 + ":" + min + " PM";
    } else if (hr == 12) {
      return "12:" + min + " PM";
    } else if (hr == 0) {
      return "12:" + min + " AM";
    } else {
      return hr + ":" + min + " AM";
    }
  } else {
    return hr + ":" + min;
  }
}
function timeOfDayToSeconds(timeString) {
  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  var t = timeString.split(":");

  try {
    var secs = parseInt(t[0]) * 3600 + parseInt(t[1]) * 60;
    return secs;
  } catch (e) {
    return defaultValue;
  }
}
function formatTimesOfDay(times) {
  times = times.map(function (t) {
    return t % (24 * 60 * 60);
  });
  times.sort(function (a, b) {
    return a - b;
  });
  var formatted = [];

  var _iterator = _createForOfIteratorHelper(times),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var time = _step.value;
      var hour = Math.floor(time / 3600);
      var minute = Math.floor(time % (60 * 60) / 60);
      var ampm = time % (24 * 60 * 60) >= 12 * 60 * 60 ? "PM" : "AM";
      formatted.push((hour - 1) % 12 + 1 + ":" + ("0" + minute).slice(-2) + " " + ampm);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  if (formatted.length == 1) {
    return formatted[0];
  }

  if (formatted.length == 2) {
    return formatted[0] + " and " + formatted[1];
  }

  return formatted.slice(0, -1).join(", ") + ", and " + formatted[formatted.length - 1];
}
function describeDatetimeAbsolute(dt) {
  return describeTimestampAbsolute(dt.toSeconds());
}
function describeTimestampAbsolute(unixTimestamp) {
  var now = Date.now() / 1000; //Divide by 1000 to convert from ms to s

  var date = new Date(unixTimestamp * 1000);
  var options = {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  };

  try {
    var day = date.toLocaleDateString(undefined, options);
    var time = date.toLocaleTimeString('en-US', {
      hour: "numeric",
      minute: "2-digit"
    });
    return day + " at " + time;
  } catch (e) {
    console.log(e);
    return "...";
  }
}
function describeDatetimeRelative(dt) {
  return describeTimestampRelative(dt.toSeconds());
}
function describeTimestampRelative(unixTimestamp) {
  var description;
  var now = Date.now() / 1000; //Divide by 1000 to convert from ms to s

  var minutesDifference = Math.floor((unixTimestamp - now) / 60);
  var mostRecentMidnight = new Date();
  mostRecentMidnight.setHours(0, 0, 0, 0);
  var midnightBeforeTimestamp = new Date(unixTimestamp * 1000);
  midnightBeforeTimestamp.setHours(0, 0, 0, 0);
  var daysDifference = Math.round((midnightBeforeTimestamp - mostRecentMidnight) / 1000 / 3600 / 24);
  var timeOfDayInSeconds = unixTimestamp - midnightBeforeTimestamp / 1000;

  if (Math.abs(daysDifference) >= 7) {
    // More than a week ahead or behind
    // Format the date in an absolute way
    var date = new Date(unixTimestamp * 1000);
    var options;

    if (daysDifference < 0 || daysDifference >= 180) {
      // More than six months ahead, or in the past. Show the year.
      options = {
        weekday: 'long',
        year: 'numeric',
        month: 'short',
        day: 'numeric'
      };
    } else {
      // Less than six months ahead
      options = {
        weekday: 'long',
        month: 'short',
        day: 'numeric'
      };
    }

    return date.toLocaleDateString(undefined, options);
  }

  if (Math.abs(minutesDifference) < 90) {
    // clsoe enough to express in minutes
    if (minutesDifference == 0) {
      return "now";
    }

    if (minutesDifference == 1) {
      return "in 1 minute";
    }

    if (minutesDifference == -1) {
      return "1 minute ago";
    }

    if (minutesDifference > 0) {
      return "in " + minutesDifference + " minutes";
    }

    if (minutesDifference < 0) {
      return -minutesDifference + " minutes ago";
    }
  } //Otherwise format date in relative terms


  var dayString;

  switch (daysDifference) {
    case -1:
      dayString = "yesterday";
      break;

    case 0:
      dayString = "today";
      break;

    case 1:
      dayString = "tomorrow";
      break;

    default:
      if (daysDifference > 0) {
        dayString = "in " + daysDifference + " days";
      } else {
        dayString = -daysDifference + " days ago";
      }

      break;
  }

  return dayString + " at " + timeOfDayFromSeconds(timeOfDayInSeconds, true);
}

/***/ }),

/***/ "./frontend/src/utilities/utils.js":
/*!*****************************************!*\
  !*** ./frontend/src/utilities/utils.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toBoolean": () => (/* binding */ toBoolean)
/* harmony export */ });
function toBoolean(x) {
  if (typeof x == "string") {
    x = x.toLowerCase();
    return x !== "false" && parseInt(x) !== 0;
  }

  return Boolean(x);
}



/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : 0
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!*****************************************!*\
  !*** ./frontend/src/pages/dashboard.js ***!
  \*****************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utilities_js_styles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/js-styles.js */ "./frontend/src/utilities/js-styles.js");
/* harmony import */ var _utilities_js_styles_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_utilities_js_styles_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _classes_data_sources_Milestone_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes/data-sources/Milestone.js */ "./frontend/src/classes/data-sources/Milestone.js");
/* harmony import */ var _classes_data_sources_User_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../classes/data-sources/User.js */ "./frontend/src/classes/data-sources/User.js");
/* harmony import */ var _classes_components_page_components_DashboardPage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../classes/components/page-components/DashboardPage.js */ "./frontend/src/classes/components/page-components/DashboardPage.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/*** Import standard utilities ***/

/*** Import entity classes ***/



/*** Import component managers ***/



_asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {
  var t, milestones, resp, _i, _Object$values, rec, pageComponent;

  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return _classes_data_sources_User_js__WEBPACK_IMPORTED_MODULE_3__.default.preloadCurrentUser();

        case 2:
          t = Date.now();
          milestones = [];
          _context.prev = 4;
          _context.next = 7;
          return _classes_data_sources_Milestone_js__WEBPACK_IMPORTED_MODULE_2__.default.retrieveAll();

        case 7:
          resp = _context.sent;

          for (_i = 0, _Object$values = Object.values(resp.data); _i < _Object$values.length; _i++) {
            rec = _Object$values[_i];
            milestones.push(_classes_data_sources_Milestone_js__WEBPACK_IMPORTED_MODULE_2__.default.make(rec));
          }

          _context.next = 15;
          break;

        case 11:
          _context.prev = 11;
          _context.t0 = _context["catch"](4);
          console.error(_context.t0);
          return _context.abrupt("return");

        case 15:
          console.log("Milestones data gathered in " + (Date.now() - t) / 1000 + " seconds");
          pageComponent = new _classes_components_page_components_DashboardPage_js__WEBPACK_IMPORTED_MODULE_4__.default($('#dashboard-body'), _classes_data_sources_User_js__WEBPACK_IMPORTED_MODULE_3__.default.currentUser, milestones);

        case 17:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, null, [[4, 11]]);
}))();
})();

/******/ })()
;